x_bar_t <- mean(variable[group==1])
s_t <- sd(variable[group==1])
s_pool <- sqrt( ((length(variable[group==0]-1)*s_c  + (length(variable[group==1])-1)*s_t))/(length(variable)-2))
d <- (x_bar_t - x_bar_c) / s_pool
r <- (s_t / s_c)^2
chi_test <- chisq.test(variable,group)
result <- list("x_bar_c"=x_bar_c,"s_c"=s_c,"x_bar_t"=x_bar_t,"s_t"=s_t,"d"=d,"r"=r,"sig"=chi_test$p.value)
print(result)
}
acupuncture2
23.1 - 18.8
15.8-22.6
smd
library(MBESS)
install.packages(MBESS)
install.packages("MBESS")
variable = acupuncture$pk5[acupuncture$migraine==1]
variable
group =  acupuncture$group[acupuncture$migraine==1]
group
variable = acupuncture$pk5[acupuncture$migraine==1]
group =  acupuncture$group[acupuncture$migraine==1]
s_pool <- sqrt( ((length(variable[group==0]-1)*s_c  + (length(variable[group==1])-1)*s_t))/(length(variable)-2))
variable = acupuncture$pk5[acupuncture$migraine==1]
group =  acupuncture$group[acupuncture$migraine==1]
x_bar_c <- mean(variable[group==0])
s_c <- sd(variable[group==0])
x_bar_t <- mean(variable[group==1])
s_t <- sd(variable[group==1])
s_pool <- sqrt( ((length(variable[group==0]-1)*s_c  + (length(variable[group==1])-1)*s_t))/(length(variable)-2))
d <- (x_bar_t - x_bar_c) / s_pool
d
chi_test <- chisq.test(variable,group)
chi_test
group =  acupuncture$group[acupuncture$migraine==0]
variable = acupuncture$pk5[acupuncture$migraine==0]
group =  acupuncture$group[acupuncture$migraine==0]
x_bar_c <- mean(variable[group==0])
s_c <- sd(variable[group==0])
x_bar_t <- mean(variable[group==1])
s_t <- sd(variable[group==1])
s_pool <- sqrt( ((length(variable[group==0]-1)*s_c  + (length(variable[group==1])-1)*s_t))/(length(variable)-2))
d <- (x_bar_t - x_bar_c) / s_pool
chi_test <- chisq.test(variable,group)
chi_test
d
model3 <- lm(pk5~group+group*migrain ,data=acupuncture)
model3 <- lm(pk5~group+group*migraine ,data=acupuncture)
model3
model3 <- lm(pk5~group+group:migraine ,data=acupuncture)
model3
model3 <- lm(pk5~migraine+group:migraine ,data=acupuncture)
model3 <- lm(pk5~group+group:migraine ,data=acupuncture)
model4 <- lm(pk5~migraine+group:migraine ,data=acupuncture)
model3
model4
anova(model3,model1)
69884  - 69778
anova(model4,model1)
69778 - 69856
model1
summary(mmodel)
summary(model)
summary(model1)
s_pool <- sqrt( (((length(variable[group==0])-1)*s_c  + (length(variable[group==1])-1)*s_t))/(length(variable)-2))
variable = acupuncture$pk5[acupuncture$migraine==0]
group =  acupuncture$group[acupuncture$migraine==0]
x_bar_c <- mean(variable[group==0])
s_c <- sd(variable[group==0])
x_bar_t <- mean(variable[group==1])
s_t <- sd(variable[group==1])
s_pool <- sqrt( (((length(variable[group==0])-1)*s_c  + (length(variable[group==1])-1)*s_t))/(length(variable)-2))
d <- (x_bar_t - x_bar_c) / s_pool
number = count()) -> acupuncture2
acupuncture %>% group_by(migraine, group) %>% summarise(mean = mean(pk5),standard_deviation = sd(pk5),number = count()) -> acupuncture2
acupuncture %>% group_by(migraine) %>% summarise(mean = mean(pk5),standard_deviation = sd(pk5),number = count()) -> acupuncture2
source('~/Desktop/yi/professional_study/courses/lienar regression and expriment design/labs/lab4.R', echo=TRUE)
acupuncture
acupuncture %>% group_by(migraine,group) %>% summarise(mean = mean(pk5),standard_deviation = sd(pk5),number = count())
acupuncture %>% group_by(migraine,group) %>% summarise(mean = mean(pk5),standard_deviation = sd(pk5),number = count(pk5))
acupuncture %>% group_by(migraine,group) %>% summarise(mean = mean(pk5),standard_deviation = sd(pk5),number = count(pk5))
setwd("~/Desktop/yi/professional_study/courses/lienar regression and expriment design/labs")
load("~/Desktop/yi/professional_study/courses/lienar regression and expriment design/labs/acupuncture.Rdata")
acupuncture %>% group_by(migraine,group) %>% summarise(mean = mean(pk5),standard_deviation = sd(pk5),number = count(pk5))
variable = acupuncture$pk5[acupuncture$migraine==0]
group =  acupuncture$group[acupuncture$migraine==0]
x_bar_c <- mean(variable[group==0])
s_c <- sd(variable[group==0])
x_bar_t <- mean(variable[group==1])
s_t <- sd(variable[group==1])
s_pool <- sqrt( (((length(variable[group==0])-1)*s_c  + (length(variable[group==1])-1)*s_t))/(length(variable)-2))
d <- (x_bar_t - x_bar_c) / s_pool
chi_test <- chisq.test(variable,group)
chi_test
d
variable = acupuncture$pk5[acupuncture$migraine==1]
group =  acupuncture$group[acupuncture$migraine==1]
chi_test <- chisq.test(variable,group)
chi_test
variable = acupuncture$pk5[acupuncture$group==1]
group =  acupuncture$group[acupuncture$group==1]
chi_test <- chisq.test(variable,group)
chi_test
variable = acupuncture$pk5[acupuncture$group==1]
group =  acupuncture$group[acupuncture$group==1]
chi_test <- chisq.test(variable,group)
variable
group
variable = acupuncture$pk5[acupuncture$group==1]
group =  acupuncture$migraine[acupuncture$group==1]
chi_test <- chisq.test(variable,group)
chi_test
library(MBESS)
variable = acupuncture$pk5[acupuncture$migraine==0]
group =  acupuncture$group[acupuncture$migraine==0]
x_bar_c <- mean(variable[group==0])
x_bar_t <- mean(variable[group==1])
s_c <- sd(variable[group==0])
s_t <- sd(variable[group==1])
length(variable)
length(group)
length(variable[group==0])
s_c
s_T
s_t
s_pool <- sqrt( (((length(variable[group==0])-1)*(s_c^2)  + (length(variable[group==1])-1)*(s_t^2)))/(length(variable)-2))
variable = acupuncture$pk5[acupuncture$migraine==0]
group =  acupuncture$group[acupuncture$migraine==0]
x_bar_c <- mean(variable[group==0])
x_bar_t <- mean(variable[group==1])
s_c <- sd(variable[group==0])
s_t <- sd(variable[group==1])
s_pool <- sqrt( (((length(variable[group==0])-1)*(s_c^2)  + (length(variable[group==1])-1)*(s_t^2)))/(length(variable)-2))
d <- (x_bar_t - x_bar_c) / s_pool
d
variable = acupuncture$pk5[acupuncture$migraine==1]
group =  acupuncture$group[acupuncture$migraine==1]
x_bar_c <- mean(variable[group==0])
x_bar_t <- mean(variable[group==1])
s_c <- sd(variable[group==0])
s_t <- sd(variable[group==1])
s_pool <- sqrt( (((length(variable[group==0])-1)*(s_c^2)  + (length(variable[group==1])-1)*(s_t^2)))/(length(variable)-2))
d <- (x_bar_t - x_bar_c) / s_pool
chi_test <- chisq.test(variable,group)
chi_test
t_test <- t.test(variable[group==0],variable[group==1])
t_test
variable = acupuncture$pk5[acupuncture$migraine==0]
group =  acupuncture$group[acupuncture$migraine==0]
x_bar_c <- mean(variable[group==0])
x_bar_t <- mean(variable[group==1])
s_c <- sd(variable[group==0])
s_t <- sd(variable[group==1])
s_pool <- sqrt( (((length(variable[group==0])-1)*(s_c^2)  + (length(variable[group==1])-1)*(s_t^2)))/(length(variable)-2))
d <- (x_bar_t - x_bar_c) / s_pool
t_test <- t.test(variable[group==0],variable[group==1])
t_test
variable = acupuncture$pk5[acupuncture$group==0]
group =  acupuncture$migraine[acupuncture$group==0]
x_bar_c <- mean(variable[migraine==0])
x_bar_t <- mean(variable[migraine==1])
s_c <- sd(variable[migraine==0])
s_t <- sd(variable[migraine==1])
variable = acupuncture$pk5[acupuncture$group==0]
group =  acupuncture$migraine[acupuncture$group==0]
x_bar_c <- mean(variable[migraine==0])
variable = acupuncture$pk5[acupuncture$group==0]
migraine =  acupuncture$migraine[acupuncture$group==0]
x_bar_c <- mean(variable[migraine==0])
x_bar_t <- mean(variable[migraine==1])
s_c <- sd(variable[migraine==0])
s_t <- sd(variable[migraine==1])
s_pool <- sqrt( (((length(variable[migraine==0])-1)*(s_c^2)  + (length(variable[migraine==1])-1)*(s_t^2)))/(length(variable)-2))
d <- (x_bar_t - x_bar_c) / s_pool
t_test <- t.test(variable[migraine==0],variable[migraine==1])
t_test
d
x_bar_t - x_bar_c
variable = acupuncture$pk5[acupuncture$group==1]
migraine =  acupuncture$migraine[acupuncture$group==1]
x_bar_c <- mean(variable[migraine==0])
x_bar_t <- mean(variable[migraine==1])
s_c <- sd(variable[migraine==0])
s_t <- sd(variable[migraine==1])
s_pool <- sqrt( (((length(variable[migraine==0])-1)*(s_c^2)  + (length(variable[migraine==1])-1)*(s_t^2)))/(length(variable)-2))
d <- (x_bar_t - x_bar_c) / s_pool
d
t_test <- t.test(variable[migraine==0],variable[migraine==1])
t_test
x_bar_t - x_bar_c
d
t_test
library(emmeans)
install.packages("emmeans")
acupuncture$migraine <- factor(x = acupuncture$migraine,
levels = c(0,1))
acupuncture$group <- factor(x = acupuncture$group,
levels = c(0,1))
str(acupuncture)
options(contrasts = c("contr.sum", "contr.poly"))
View(acupuncture)
# Task 1
lm1 <- lm(pk5 ~ migraine*group, data = acupuncture)
summary(lm1) # look at full model
lm1R <- lm(pk5 ~ group + migraine, data= acupuncture)
summary(lm1R) # look at reduced model
anova(lm1R,lm1) # incremental F test to see interaction term
# Task 2 Simple Effects
interaction.plot(x.factor = acupuncture$group,
trace.factor = acupuncture$migraine,
response = acupuncture$pk5,
ylim = c(0,88)) # looks at interaction plot and rescales to the full range of the outcome
range(acupuncture$pk5) # range of outcome
install.packages("emmeans")
library(emmeans)
em1 <- emmeans(object = lm1,
specs = ~group|migraine) # marginal means of interaction
em1
# This line looks at the marginal means of the data. This looks at the average
# post severity (pk5) of the control and treatment groups BASED on the level of
# migraine.
pairs(em1)
# Task 3 Main Effects
em2 <- emmeans(object = lm1,
specs = ~group)
em2
# Task 3 Main Effects
em2 <- emmeans(object = lm1,
specs = ~group)
em2
# This looks at the main effect of group, meaning that it is averaging across
# the levels of migraine. Essentially we don't care about what migraine group is
# saying.
pairs(em2)
install.packages("car")
library(car)
Anova(lm1, type = "III")
install.packages(c("AER", "lmtest", "mice", "pscl"))
library(car) # for qqPlot()
library(MASS) # for negative binomial model fitting
library(pscl) # for zero-inflated model fitting
library(lmtest) # for Likelihood ratio tests of glm models
library(AER) # for overdispersion test
load(file = file.choose())
load(file = file.choose())
load(file = file.choose())
dim(dat)
head(dat)
names(dat)
str(dat)
dat_full <- dat
View(dat_full)
# Drop rows with missing values
dat <- na.omit(dat)
# Convert STUDY_ARM to a factor. Fill in!
dat$STUDY_ARM <- factor(dat$STUDY_ARM)
View(dat)
# How many control and treated cases?
table(dat$STUDY_ARM)
# Distribution of ages at enrollment.
table(dat$AGE_YRS.1)
# Parent have college degree?
table(dat$EDUC2.1)
# Child's grades in school.
table(dat$GRADES.1)
table(dat$THIRTYDAYCIG.1)
by(dat$THIRTYDAYCIG.1, dat$STUDY_ARM, mean, na.rm = TRUE)
hist(table(dat$THIRTYDAYCIG.1))
hist(dat$THIRTYDAYCIG.1)
table(dat$THIRTYDAYCIG.2)
by(dat$THIRTYDAYCIG.2, dat$STUDY_ARM, mean, na.rm = TRUE)
# Examine missing data patterns
install.packages("mice")
# Examine missing data patterns
#install.packages("mice")
library(mice)
?md.pattern
?boys
md.pattern(x = boys)
# Examine missing data patterns
install.packages("mice",dependencies = T)
library(mice)
iinstall.packages()
iinstall.packages('mitml')
iinstall.package('mitml')
install.package('mitml')
install.packages('mitml')
install.packages('jomo')
View(dat)
View(dat)
install.packages("mice")
# Poisson model assumes mean = var
mean(dat$THIRTYDAYCIG.3, na.rm = TRUE)
var(dat$THIRTYDAYCIG.3, na.rm = TRUE)
50.98/1.27
# Poisson model with no covariates. Fill in!
glm1 <- glm(data = dat,THIRTYDAYCIG.2~1,family = 'poisson')
summary(glm1)
s
# Test for overdispersion
dispersiontest(glm1)
# Poisson model with no covariates. Fill in!
glm1 <- glm(data = dat,THIRTYDAYCIG.2~STUDY_ARM,family = 'poisson')
summary(glm1)
# Test for overdispersion
dispersiontest(glm1)
# Poisson model with no covariates. Fill in!
glm1 <- glm(data = dat,THIRTYDAYCIG.2~,family = 'poisson')
# Poisson model with no covariates. Fill in!
glm1 <- glm(data = dat,THIRTYDAYCIG.2~1,family = 'poisson')
summary(glm1)
# Test for overdispersion
dispersiontest(glm1)
# Poisson model with no covariates. Fill in!
glm1 <- glm(data = dat,THIRTYDAYCIG.2~STUDY_ARM + THIRTYDAYCIG.1,family = 'poisson')
summary(glm1)
# Poisson model assumes mean = var
mean(dat$THIRTYDAYCIG.3, na.rm = TRUE)
var(dat$THIRTYDAYCIG.3, na.rm = TRUE)
# Test for overdispersion
dispersiontest(glm1)
# Poisson model with no covariates. Fill in!
glm1 <- glm(data = dat,THIRTYDAYCIG.2~STUDY_ARM + THIRTYDAYCIG.1+ AGE_YRS.1 + EDUC2.1 + GRADES.1,family = 'poisson')
summary(glm1)
# Poisson model assumes mean = var
mean(dat$THIRTYDAYCIG.3, na.rm = TRUE)
var(dat$THIRTYDAYCIG.3, na.rm = TRUE)
# Test for overdispersion
dispersiontest(glm1)
# Poisson model with no covariates. Fill in!
glm1 <- glm(data = dat,THIRTYDAYCIG.2~STUDY_ARM + THIRTYDAYCIG.1,family = 'poisson')
summary(glm1)
# Poisson model assumes mean = var
mean(dat$THIRTYDAYCIG.3, na.rm = TRUE)
var(dat$THIRTYDAYCIG.3, na.rm = TRUE)
# Test for overdispersion
dispersiontest(glm1)
# Estimate the treatment effect with ANCOVA,
# controlling for baseline
lm2 <- lm(THIRTYDAYCIG.3 ~ THIRTYDAYCIG.1 + STUDY_ARM,
data = dat)
summary(lm2)
# Poisson model with no covariates. Fill in!
glm1 <- glm(data = dat,THIRTYDAYCIG.3 ~ THIRTYDAYCIG.1 + STUDY_ARM,family = 'poisson')
summary(glm1)
# (b) Write-up your results about the effect of the
#     treatment on cigarette smoking a year later.
#     Was the treatment effective? On average, what is
#     the effect of the treatment?
lm1<- lm(THIRTYDAYCIG.3 ~ THIRTYDAYCIG.1 + STUDY_ARM,data = dat)
lm1
# (b) Write-up your results about the effect of the
#     treatment on cigarette smoking a year later.
#     Was the treatment effective? On average, what is
#     the effect of the treatment?
lm1<- lm(THIRTYDAYCIG.3 ~ STUDY_ARM,data = dat)
summary(lm1)
AIC(lm1)
BIC(lm1)
lm2 <- lm(THIRTYDAYCIG.3 ~ THIRTYDAYCIG.1 + STUDY_ARM,data = dat)
summary(lm2)
AIC(lm2)
BIC(lm2)
lrtest(lm1, lm2)
dim(dat)
dispersiontest(lm1)
dispersiontest(lm2)
lrtest(glm1, nb1,lm1)
# (b) Write-up your results about the effect of the
#     treatment on cigarette smoking a year later.
#     Was the treatment effective? On average, what is
#     the effect of the treatment?
lm1<- lm(THIRTYDAYCIG.3 ~ STUDY_ARM,data = dat)
lm2 <- lm(THIRTYDAYCIG.3 ~ THIRTYDAYCIG.1 + STUDY_ARM,data = dat)
glm2 <- glm(data = dat,THIRTYDAYCIG.3 ~ THIRTYDAYCIG.1 + STUDY_ARM,family = 'poisson')
nb2 <- glm.nb(THIRTYDAYCIG.2 ~ STUDY_ARM + THIRTYDAYCIG.1,  control = glm.control(maxit = 1000),na.action = na.omit, data = dat)
zinb2 <- zeroinfl(THIRTYDAYCIG.2 ~ STUDY_ARM + THIRTYDAYCIG.1 | THIRTYDAYCIG.1 + AGE_YRS.1 + EDUC2.1 + GRADES.1, dist = "negbin", na.action = na.omit, data = dat)
# (b) Write-up your results about the effect of the
#     treatment on cigarette smoking a year later.
#     Was the treatment effective? On average, what is
#     the effect of the treatment?
lm1<- lm(THIRTYDAYCIG.3 ~ STUDY_ARM,data = dat)
lm2 <- lm(THIRTYDAYCIG.3 ~ THIRTYDAYCIG.1 + STUDY_ARM,data = dat)
glm2 <- glm(data = dat,THIRTYDAYCIG.3 ~ THIRTYDAYCIG.1 + STUDY_ARM,family = 'poisson')
nb2 <- glm.nb(THIRTYDAYCIG.3 ~ STUDY_ARM + THIRTYDAYCIG.1,  control = glm.control(maxit = 1000),na.action = na.omit, data = dat)
zinb2 <- zeroinfl(THIRTYDAYCIG.3 ~ STUDY_ARM + THIRTYDAYCIG.1 | THIRTYDAYCIG.1 + AGE_YRS.1 + EDUC2.1 + GRADES.1, dist = "negbin", na.action = na.omit, data = dat)
zinb1 <- zeroinfl(THIRTYDAYCIG.3 ~ STUDY_ARM + THIRTYDAYCIG.1 , dist = "negbin", na.action = na.omit, data = dat)
zinb2 <- zeroinfl(THIRTYDAYCIG.3 ~ STUDY_ARM + THIRTYDAYCIG.1 | THIRTYDAYCIG.1 + AGE_YRS.1 + EDUC2.1 + GRADES.1, dist = "negbin", na.action = na.omit, data = dat)
lrtest(lm1,lm2,glm2)
lm2 <- lm(THIRTYDAYCIG.3 ~ THIRTYDAYCIG.1 + STUDY_ARM,data = dat)
summary(lm2)
c(AIC(lm2), AIC(glm2), AIC(nb2), AIC(zinb1),AIC(zinb2))
c(BIC(lm2), BIC(glm2), BIC(nb2), Bic(zinb1),BIC(zinb2))
# (b) Write-up your results about the effect of the
#     treatment on cigarette smoking a year later.
#     Was the treatment effective? On average, what is
#     the effect of the treatment?
lm1<- lm(THIRTYDAYCIG.3 ~ STUDY_ARM,data = dat)
lm2 <- lm(THIRTYDAYCIG.3 ~ THIRTYDAYCIG.1 + STUDY_ARM,data = dat)
glm2 <- glm(data = dat,THIRTYDAYCIG.3 ~ THIRTYDAYCIG.1 + STUDY_ARM,family = 'poisson')
nb2 <- glm.nb(THIRTYDAYCIG.3 ~ STUDY_ARM + THIRTYDAYCIG.1,  control = glm.control(maxit = 1000),na.action = na.omit, data = dat)
zinb1 <- zeroinfl(THIRTYDAYCIG.3 ~ STUDY_ARM + THIRTYDAYCIG.1 , dist = "negbin", na.action = na.omit, data = dat)
zinb2 <- zeroinfl(THIRTYDAYCIG.3 ~ STUDY_ARM + THIRTYDAYCIG.1 | THIRTYDAYCIG.1 + AGE_YRS.1 + EDUC2.1 + GRADES.1, dist = "negbin", na.action = na.omit, data = dat)
c(AIC(lm2), AIC(glm2), AIC(nb2), AIC(zinb1),AIC(zinb2))
c(BIC(lm2), BIC(glm2), BIC(nb2), BIC(zinb1),BIC(zinb2))
zinb1
summary(zinb1)
lm2 <- lm(THIRTYDAYCIG.3 ~ THIRTYDAYCIG.1 + STUDY_ARM,data = dat)
glm2 <- glm(data = dat,THIRTYDAYCIG.3 ~ THIRTYDAYCIG.1 + STUDY_ARM,family = 'poisson')
nb2 <- glm.nb(THIRTYDAYCIG.3 ~ STUDY_ARM + THIRTYDAYCIG.1,  control = glm.control(maxit = 1000),na.action = na.omit, data = dat)
zinb1 <- zeroinfl(THIRTYDAYCIG.3 ~ STUDY_ARM + THIRTYDAYCIG.1 , dist = "negbin", na.action = na.omit, data = dat)
zinb2 <- zeroinfl(THIRTYDAYCIG.3 ~ STUDY_ARM + THIRTYDAYCIG.1 | THIRTYDAYCIG.1 + AGE_YRS.1 + EDUC2.1 + GRADES.1, dist = "negbin", na.action = na.omit, data = dat)
c(AIC(lm2), AIC(glm2), AIC(nb2), AIC(zinb1),AIC(zinb2))
c(BIC(lm2), BIC(glm2), BIC(nb2), BIC(zinb1),BIC(zinb2))
c(BIC(lm2), BIC(glm2), BIC(nb2), bic(zinb1),bic(zinb2))
c(BIC(lm2), BIC(glm2), BIC(nb2), bic(zinb1),bic(zinb2))
c(BIC(lm2), BIC(glm2), BIC(nb2), bic(zinb2))
c(AIC(lm2), AIC(glm2), AIC(nb2), aic(zinb2))
c(BIC(lm2), BIC(glm2), BIC(nb2), bic(zinb2))
c(BIC(lm2), BIC(glm2), BIC(nb2), bic(zinb1),bic(zinb2))
c(BIC(lm2), BIC(glm2), BIC(nb2), BIC(zinb1),BIC(zinb2))
zinb1$df.residual
zinb1$df.null
logLik(zinb1)
logLik(zinb1)[1]
zinb1$n
### Define aic & bic functions for use with ZINB models
bic <- function(fit){
pars <- fit$df.null - fit$df.residual + 2
n <- fit$n
lgLik <- logLik(fit)[1]
out <- -2 * lgLik + log(n) * pars
return (out)
}
aic <- function(fit){
pars <- fit$df.null - fit$df.residual + 2
n <- fit$n
lgLik <- logLik(fit)[1]
out <- -2 * lgLik + 2 * pars
return (out)
}
c(BIC(lm2), BIC(glm2), BIC(nb2), bic(zinb1),bic(zinb2))
aic <- function(fit){
pars <- fit$df.null - fit$df.residual + 2
n <- fit$n
lgLik <- logLik(fit)[1]
out <- -2 * lgLik + 2 * pars
return c(out,pars)
}
aic <- function(fit){
pars <- fit$df.null - fit$df.residual + 2
n <- fit$n
lgLik <- logLik(fit)[1]
out <- -2 * lgLik + 2 * pars
return (pars)
}
c(AIC(lm2), AIC(glm2), AIC(nb2), AIC(zinb1),AIC(zinb2))
c(aic(lm2), aic(glm2), aic(nb2), aic(zinb1),aic(zinb2))
lm2 <- lm(THIRTYDAYCIG.3 ~ THIRTYDAYCIG.1 + STUDY_ARM,data = dat)
aic <- function(fit){
pars <- fit$df.null - fit$df.residual + 2
n <- fit$n
lgLik <- logLik(fit)[1]
out <- -2 * lgLik + 2 * pars
return (pars)
}
c(aic(lm2), aic(glm2), aic(nb2), aic(zinb1),aic(zinb2))
dispersiontest(glm2)
dispersiontest(nb2)
glm2 <- glm(data = dat,THIRTYDAYCIG.3 ~ THIRTYDAYCIG.1 + STUDY_ARM,family = 'poisson')
summary(glm2)
glm2 <- glm(data = dat,THIRTYDAYCIG.3 ~  STUDY_ARM,family = 'poisson')
glm2
glm2 <- glm(data = dat,THIRTYDAYCIG.3 ~  STUDY_ARM,family = 'poisson')
summary(glm2)
glm2 <- glm(data = dat,THIRTYDAYCIG.3 ~ THIRTYDAYCIG.1 + STUDY_ARM,family = 'poisson')
summary(glm2)
glm2 <- glm(data = dat,THIRTYDAYCIG.3 ~  STUDY_ARM,family = 'poisson')
summary(glm2)
bic(glm2)
glm2 <- glm(data = dat,THIRTYDAYCIG.3 ~ THIRTYDAYCIG.1 + STUDY_ARM,family = 'poisson')
bic(glm2)
glm1 <- glm(data = dat,THIRTYDAYCIG.3 ~  STUDY_ARM,family = 'poisson')
glm2 <- glm(data = dat,THIRTYDAYCIG.3 ~ THIRTYDAYCIG.1 + STUDY_ARM,family = 'poisson')
lrtest(glm1, glm2)
dispersiontest(glm1)
dispersiontest(glm2)
glm1 <- glm(data = dat,THIRTYDAYCIG.3 ~  STUDY_ARM,family = 'poisson')
glm2 <- glm(data = dat,THIRTYDAYCIG.3 ~ THIRTYDAYCIG.1 + STUDY_ARM,family = 'poisson')
dispersiontest(glm1)
dispersiontest(glm2)
lm2 <- lm(THIRTYDAYCIG.3 ~ THIRTYDAYCIG.1 + STUDY_ARM,data = dat)
glm2 <- glm(data = dat,THIRTYDAYCIG.3 ~ THIRTYDAYCIG.1 + STUDY_ARM,family = 'poisson')
lrtest(lm2,glm2)
lrtest(lm2,nb2)
lrtest(lm2,glm2,nb2,zinb1,zinb2)
lrtest(lm2,glm2)
lrtest(glm2,nb2)
lrtest(nb2,zinb1)
lrtest(zinb1,zinb2)
summary(lm2)
summary(glm2)
aic(glm2)
aic(lm2)
aic(lm2)
summary(zinb1)
summary(zinb2)
zinb1
THIRTYDAYCIG.3
zinb1 <- zeroinfl(THIRTYDAYCIG.3 ~ STUDY_ARM + THIRTYDAYCIG.1 , dist = "negbin", na.action = na.omit, data = dat)
summary(zinb1)
exp(-0.52)
