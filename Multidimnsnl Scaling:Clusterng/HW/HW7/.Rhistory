summary(reg)
reg <- lm(cbind(read, write, science) ~ self, data = data)
summary(manova(reg), test="Wilks")
x <- as.matrix(cbind(rep(1,n),data$self))
colnames(x) <- c("intercept","slope")
y <- as.matrix(data[,c("read","write","science")])
b.hat <- solve(t(x) %*% x) %*% t(x) %*% y
b.hat
SS.res = t(y - x %*% b.hat) %*% (y - x %*% b.hat)s
SS.res
x1 <- as.matrix(cbind(rep(1,n),ncol=1)
x1 <- as.matrix(cbind(rep(1,n),ncol=1))
x1 <- as.matrix(rep(1,n),ncol=1)
x1 <- as.matrix(rep(1,n),ncol=1)
b.hat1 <- solve(t(x1) %*% x1) %*% t(x1) %*% y
SS.res1 = t(y - x1 %*% b.hat1) %*% (y - x1 %*% b.hat1)
F_test <- - (n - 1 - 1 - (q - p + 0 + 1)/2)*log(det(SS.res)/det(SS.res1))
F_test
x <- as.matrix(cbind(rep(1,n),data$self))
colnames(x) <- c("intercept","slope")
y <- as.matrix(data[,c("read","write","science")])
b.hat <- solve(t(x) %*% x) %*% t(x) %*% y
SS.res = t(y - x %*% b.hat) %*% (y - x %*% b.hat)
x1 <- as.matrix(rep(1,n),ncol=1)
b.hat1 <- solve(t(x1) %*% x1) %*% t(x1) %*% y
SS.res1 = t(y - x1 %*% b.hat1) %*% (y - x1 %*% b.hat1)
F_test <- - (n - 1 - 1 - (q - p + 0 + 1)/2)*log(det(SS.res)/det(SS.res1))
x <- as.matrix(cbind(rep(1,n),data$self))
colnames(x) <- c("intercept","slope")
y <- as.matrix(data[,c("read","write","science")])
b.hat <- solve(t(x) %*% x) %*% t(x) %*% y
SS.res = t(y - x %*% b.hat) %*% (y - x %*% b.hat)
x1 <- as.matrix(rep(1,n),ncol=1)
b.hat1 <- solve(t(x1) %*% x1) %*% t(x1) %*% y
SS.res1 = t(y - x1 %*% b.hat1) %*% (y - x1 %*% b.hat1)
F_test <- - (n - 1 - 1 - (q - p + 0 + 1)/2)*log(det(SS.res)/det(SS.res1))
F_test
x <- as.matrix(cbind(rep(1,n),data$self))
colnames(x) <- c("intercept","slope")
y <- as.matrix(data[,c("read","write","science")])
b.hat <- solve(t(x) %*% x) %*% t(x) %*% y
SS.res = t(y - x %*% b.hat) %*% (y - x %*% b.hat)
x1 <- as.matrix(rep(1,n),ncol=1)
b.hat1 <- solve(t(x1) %*% x1) %*% t(x1) %*% y
SS.res1 = t(y - x1 %*% b.hat1) %*% (y - x1 %*% b.hat1)
p = 1
q = 3
F_test <- - (n - 1 - 1 - (q - p + 0 + 1)/2)*log(det(SS.res)/det(SS.res1))
F_test
x <- as.matrix(cbind(rep(1,n),data$self))
colnames(x) <- c("intercept","slope")
y <- as.matrix(data[,c("read","write","science")])
b.hat <- solve(t(x) %*% x) %*% t(x) %*% y
SS.res = t(y - x %*% b.hat) %*% (y - x %*% b.hat)
x1 <- as.matrix(rep(1,n),ncol=1)
b.hat1 <- solve(t(x1) %*% x1) %*% t(x1) %*% y
SS.res1 = t(y - x1 %*% b.hat1) %*% (y - x1 %*% b.hat1)
p = 1
q = 3
q = 1
F_test <- - (n - 1 - 1 - (q - p + 0 + 1)/2)*log(det(SS.res)/det(SS.res1))
F_test
x <- as.matrix(cbind(rep(1,n),data$self))
colnames(x) <- c("intercept","slope")
y <- as.matrix(data[,c("read","write","science")])
b.hat <- solve(t(x) %*% x) %*% t(x) %*% y
SS.res = t(y - x %*% b.hat) %*% (y - x %*% b.hat)
x1 <- as.matrix(rep(1,n),ncol=1)
b.hat1 <- solve(t(x1) %*% x1) %*% t(x1) %*% y
SS.res1 = t(y - x1 %*% b.hat1) %*% (y - x1 %*% b.hat1)
p = 1
q = 3
q = 0
F_test <- - (n - 1 - 1 - (q - p + 0 + 1)/2)*log(det(SS.res)/det(SS.res1))
F_test
F_test <- - (n - p - 1 - (q - p + m + 1)/2)*log(det(SS.res)/det(SS.res1))
m = 0
F_test <- - (n - p - 1 - (q - p + m + 1)/2)*log(det(SS.res)/det(SS.res1))
F_test
p = 1
q = 3
m = 1
F_test <- - (n - p - 1 - (q - p + m + 1)/2)*log(det(SS.res)/det(SS.res1))
F_test
1-pchisq(- (n - p - 1 - (q - p + m + 1)/2)*log(det(SS.res)/det(SS.res1)), q*(p-m))
x <- as.matrix(cbind(rep(1,n),data$self))
colnames(x) <- c("intercept","slope")
y <- as.matrix(data[,c("read","write","science")])
b.hat <- solve(t(x) %*% x) %*% t(x) %*% y
SS.res = t(y - x %*% b.hat) %*% (y - x %*% b.hat)
x1 <- as.matrix(rep(1,n),ncol=1)
b.hat1 <- solve(t(x1) %*% x1) %*% t(x1) %*% y
SS.res1 = t(y - x1 %*% b.hat1) %*% (y - x1 %*% b.hat1)
p = 1
q = 3
m = 0
1-pchisq(- (n - p - 1 - (q - p + m + 1)/2)*log(det(SS.res)/det(SS.res1)), q*(p-m))
n <-  nrow(data)
p <- 3
q <- 1
m <- 3
## using likelihood ratio test
### proposed model
x <- as.matrix(cbind(rep(1,n),data$locus,data$self,data$motiv))
colnames(x) <- c("intercept","slope_locus","slope_self","slope_motiv")
y <- as.numeric(data[,c("prog")])
b.hat <- solve(t(x) %*% x) %*% t(x) %*% y
(E <- t(y - x %*% b.hat) %*% (y - x %*% b.hat))
### compared model
x1 <- rep(1,n)
y <- as.numeric(data[,c("prog")])
b.hat1 <- solve(t(x1) %*% x1) %*% t(x1) %*% y
(H <- t(y - x1 %*% b.hat1) %*% (y - x1 %*% b.hat1))
# Chi-sq approx
- (n - p - 1 - (q - p + m + 1)/2)*log(det(E)/det(H))
# p-value
1-pchisq(- (n - p - 1 - (q - p + m + 1)/2)*log(det(E)/det(H)), q*(p-m))
n <-  nrow(data)
p <- 3
q <- 1
m <- 3
## using likelihood ratio test
### proposed model
x <- as.matrix(cbind(rep(1,n),data$locus,data$self,data$motiv))
colnames(x) <- c("intercept","slope_locus","slope_self","slope_motiv")
y <- as.numeric(data[,c("prog")])
b.hat <- solve(t(x) %*% x) %*% t(x) %*% y
E <- t(y - x %*% b.hat) %*% (y - x %*% b.hat)
### compared model
x1 <- rep(1,n)
y <- as.numeric(data[,c("prog")])
b.hat1 <- solve(t(x1) %*% x1) %*% t(x1) %*% y
H <- t(y - x1 %*% b.hat1) %*% (y - x1 %*% b.hat1)
# Chi-sq approx
- (n - p - 1 - (q - p + m + 1)/2)*log(det(E)/det(H))
# p-value
1-pchisq(- (n - p - 1 - (q - p + m + 1)/2)*log(det(E)/det(H)), q*(p-m))
reg <- lm (prog~ locus + self + motiv, data = data)
summary(manova(mlm), test="Wilks")
reg <- lm (prog~ locus + self + motiv, data = data)
summary(manova(reg), test="Wilks")
summary(anova(reg), test="Wilks")
summary(anova(reg))
reg <- lm (prog~ locus + self + motiv, data = data)
anova(reg)
reg <- lm (prog~ locus + self + motiv, data = data)
reg <- lm (as.numeric(prog)~ locus + self + motiv, data = data)
anova(reg)
24+23.7+34.78
linearHypothesis(reg)
aov(reg)
11.51+11.34+16.62
summary(aov(reg))
n <-  nrow(data)
p <- 3
q <- 3
m <- 3
## using likelihood ratio test
### proposed model
x <- as.matrix(cbind(rep(1,n),data$locus,data$self,data$motiv))
colnames(x) <- c("intercept","slope_locus","slope_self","slope_motiv")
y <- as.matrix(data[,c("prog1","prog2","prog3")])
b.hat <- solve(t(x) %*% x) %*% t(x) %*% y
(E <- t(y - x %*% b.hat) %*% (y - x %*% b.hat))
### compared model
x1 <- rep(1,n)
b.hat1 <- solve(t(x1) %*% x1) %*% t(x1) %*% y
(H <- t(y - x1 %*% b.hat1) %*% (y - x1 %*% b.hat1))
# Chi-sq approx
- (n - p - 1 - (q - p + m + 1)/2)*log(det(E)/det(H))
# p-value
1-pchisq(- (n - p - 1 - (q - p + m + 1)/2)*log(det(E)/det(H)), q*(p-m))
reg <- lm (cbind(prog1, prog2,prog3) ~ locus + self + motiv, data = data)
reg <- lm (cbind(prog1, prog2,prog3) ~ locus + self + motiv, data = data)
summary(manova(reg))
Manova(reg)
library(car)
reg <- lm (cbind(prog1, prog2,prog3) ~ locus + self + motiv, data = data)
Manova(reg)
data <- read.csv(file = 'mvregex.dat',header = F)
colnames(data) = c("locus", "self", "motiv", "read", "write", "science", "prog", "prog1", "prog2", "prog3")
data$prog = as.factor(data$prog)
head(data)
n <-  nrow(data)
p <- 1 ## only one independent variable
q <- 2 ## two dependent variables
x <- as.matrix(cbind(rep(1,n),data$locus))
colnames(x) <- c("intercept","slope")
y <- as.matrix(data[,c("read","write")])
(b.hat <- solve(t(x) %*% x) %*% t(x) %*% y)
n <-  nrow(data)
p <- 2 ## only one independent variable
q <- 1 ## two dependent variables
y <- as.matrix(cbind(rep(1,n),data$locus))
colnames(x) <- c("intercept","slope")
x <- as.matrix(data[,c("read","write")])
(b.hat <- solve(t(x) %*% x) %*% t(x) %*% y)
reg = lm (locus ~ read + write, data = data)
reg$coefficients
reg = lm (locus ~ read, write,science, data = data)
summary(reg)
reg = lm (locus ~ rea + write + science, data = data)
summary(reg)
reg = lm (locus ~ rea + write + science, data = data)
reg = lm (locus ~ read + write + science, data = data)
summary(reg)
reg$residuals
reg = lm (locus ~ read + write + science, data = data)
summary(reg$residuals)
reg = lm (locus ~ read + write + science, data = data)
reg
var(reg$residuals)
reg = lm (locus ~ read + write + science, data = data)
var(reg$residuals)
sigma(reg)
reg <- lm(self~read+ write+ science)
reg <- lm(self~read+ write+ science, data = data)
anova(reg)
Anova(reg)
anova_res <- Anova(reg)
anova_res
anova_res$`Sum Sq`
anova_res <- anova(reg)
anova_res
reg$residuals
SSE <- (reg$residuals)^2
SSE <- (reg$residuals)^2
SSE <- sum((reg$residuals)^2 )
SSE <- sum((reg$residuals)^2 )
SSR <- sum((data$self  -mean(data$self))^2)
F_test <- (SSR/3) / (SSE/(n-3-1))
F_test
qf(F_test,3,n-3-1)
pf(F_test,3,n-3-1)
(F_test <- (SSR/3) / (SSE/(n-3-1)))
(F_test <- (SSR/3) / (SSE/(n-3-1)))
(F_test <- ((SST-SSE)/3) / (SSE/(n-3-1)))
reg <- lm(self~read+ write+ science, data = data)
SSE <- sum((reg$residuals)^2 )
SST <- sum((data$self  -mean(data$self))^2)
(F_test <- ((SST-SSE)/3) / (SSE/(n-3-1)))
pf(F_test,3,n-3-1)
qf(F_test,3,n-3-1)
Pf(F_test,3,n-3-1)
pf(F_test,3,n-3-1)
pf(q = F_test,df1 = 3,df2 = n-3-1,lower.tail = F)
reg <- lm(self~read+ write+ science, data = data)
SSE <- sum((reg$residuals)^2 )
SST <- sum((data$self  -mean(data$self))^2)
(F_test <- ((SST-SSE)/3) / (SSE/(n-3-1)))
pf(q = F_test,df1 = 3,df2 = n-3-1,lower.tail = F)
reg <- lm(self~read+ write+ science, data = data)
summary(reg)
n <-  nrow(data)
p <- 2 ## two independent variable
q <- 3 ## three dependent variables
x <- as.matrix(cbind(rep(1,n),data$locus,data$self))
colnames(x) <- c("intercept","slope_locus","slope_self")
y <- as.matrix(data[,c("read","write","science")])
(b.hat <- solve(t(x) %*% x) %*% t(x) %*% y)
n <-  nrow(data)
r <- 3 ## two independent variable
m <- 2 ## three dependent variables
x <- as.matrix(cbind(rep(1,n),data$read,data$write,data$science))
colnames(x) <- c("intercept","slope_read","slope_write","slope_science")
y <- as.matrix(data[,c("locus","self")])
(b.hat <- solve(t(x) %*% x) %*% t(x) %*% y)
reg = lm (cbind(locus, self) ~ read + write + science, data = data)
reg$coefficients
n <-  nrow(data)
p <- 3 ## three independent variable
q <- 3 ## three dependent variables
x <- as.matrix(cbind(rep(1,n),data$read,data$write,data$science))
colnames(x) <- c("intercept","slope_read","slope_write","slope_sciences")
y <- as.matrix(data[,c("locus","self","motiv")])
b.hat <- solve(t(x) %*% x) %*% t(x) %*% y
(SS.res <- t(y - x %*% b.hat) %*% (y - x %*% b.hat))/(n-p-1)
reg =  lm (cbind(locus, self,motiv) ~ read + write + science, data = data)
t(residuals(reg)) %*% residuals(reg)/(n-p-1)
n <-  nrow(data)
p <- 3 ## three independent variable
q <- 3 ## three dependent variables
x <- as.matrix(cbind(rep(1,n),data$read,data$write,data$science))
colnames(x) <- c("intercept","slope_read","slope_write","slope_sciences")
y <- as.matrix(data[,c("locus","self","motiv")])
b.hat <- solve(t(x) %*% x) %*% t(x) %*% y
(SS.res <- t(y - x %*% b.hat) %*% (y - x %*% b.hat))
n <-  nrow(data)
p <- 3 ## three independent variable
q <- 3 ## three dependent variables
x <- as.matrix(cbind(rep(1,n),data$read,data$write,data$science))
colnames(x) <- c("intercept","slope_read","slope_write","slope_sciences")
y <- as.matrix(data[,c("locus","self","motiv")])
b.hat <- solve(t(x) %*% x) %*% t(x) %*% y
(SS.res <- t(y - x %*% b.hat) %*% (y - x %*% b.hat))
reg =  lm (cbind(locus, self,motiv) ~ read + write + science, data = data)
t(residuals(reg)) %*% residuals(reg)
reg =  lm (cbind(locus, self,motiv) ~ read + write + science, data = data)
t(residuals(reg)) %*% residuals(reg)
n <-  nrow(data)
p <- 3 ## three independent variable
q <- 3 ## three dependent variables
x <- as.matrix(cbind(rep(1,n),data$read,data$write,data$science))
colnames(x) <- c("intercept","slope_read","slope_write","slope_sciences")
y <- as.matrix(data[,c("locus","self","motiv")])
b.hat <- solve(t(x) %*% x) %*% t(x) %*% y
(SS.res <- t(y - x %*% b.hat) %*% (y - x %*% b.hat))
reg =  lm (cbind(locus, self,motiv) ~ read + write + science, data = data)
t(residuals(reg)) %*% residuals(reg)
View(data)
## using likelihood ratio test
### proposed model
x <- as.matrix(cbind(rep(1,n),data$locus,data$self,data$motiv))
colnames(x) <- c("intercept","slope_prog")
## using likelihood ratio test
### proposed model
x <- as.matrix(cbind(rep(1,n),data$prog))
colnames(x) <- c("intercept","slope_prog")
y <- data[,c("locus","self")]
b.hat <- solve(t(x) %*% x) %*% t(x) %*% y
y
x
b.hat <- solve(t(x) %*% x) %*% t(x) %*% y
## using likelihood ratio test
### proposed model
x <- as.matrix(cbind(rep(1,n),as.numeric(data$prog)))
colnames(x) <- c("intercept","slope_prog")
y <- data[,c("locus","self")]
b.hat <- solve(t(x) %*% x) %*% t(x) %*% y
x
## using likelihood ratio test
### proposed model
x <- cbind(rep(1,n),as.numeric(data$prog))
colnames(x) <- c("intercept","slope_prog")
y <- data[,c("locus","self")]
b.hat <- solve(t(x) %*% x) %*% t(x) %*% y
## using likelihood ratio test
### proposed model
x <- cbind(rep(1,n),data$prog)
colnames(x) <- c("intercept","slope_prog")
y <- data[,c("locus","self")]
b.hat <- solve(t(x) %*% x) %*% t(x) %*% y
## using likelihood ratio test
### proposed model
x <- cbind(rep(1,n),as.numeric(data$prog))
colnames(x) <- c("intercept","slope_prog")
y <- data[,c("locus","self")]
b.hat <- solve(t(x) %*% x) %*% t(x) %*% y
## using likelihood ratio test
### proposed model
x <- cbind(rep(1,n),as.numeric(data$prog))
colnames(x) <- c("intercept","slope_prog")
y <- data[,c("locus","self","motiv")]
b.hat <- solve(t(x) %*% x) %*% t(x) %*% y
y <- as.matrix(data[,c("locus","self","motiv")])
b.hat <- solve(t(x) %*% x) %*% t(x) %*% y
## using likelihood ratio test
### proposed model
x <- cbind(rep(1,n),as.numeric(data$prog))
colnames(x) <- c("intercept","slope_prog")
y <- as.matrix(data[,c("locus","self","motiv")])
b.hat <- solve(t(x) %*% x) %*% t(x) %*% y
E <- t(y - x %*% b.hat) %*% (y - x %*% b.hat)
### compared model
x1 <- rep(1,n)
b.hat1 <- solve(t(x1) %*% x1) %*% t(x1) %*% y
H <- t(y - x1 %*% b.hat1) %*% (y - x1 %*% b.hat1)
# Chi-sq approx
- (n - p - 1 - (q - p + m + 1)/2)*log(det(E)/det(H))
# p-value
1-pchisq(- (n - p - 1 - (q - p + m + 1)/2)*log(det(E)/det(H)), q*(p-m))
# Chi-sq approx
- (n - p - 1 - (q - p + m + 1)/2)*log(det(E)/det(H))
# p-value
1-pchisq(- (n - p - 1 - (q - p + m + 1)/2)*log(det(E)/det(H)), q*(p-m))
n <-  nrow(data)
n <-  nrow(data)
p <-
q <- 3
m <- 3
## using likelihood ratio test
### proposed model
x <- as.matrix(cbind(rep(1,n),data$locus,data$self,data$motiv))
colnames(x) <- c("intercept","slope_prog")
n <-  nrow(data)
p <-
q <- 3
m <- 3
## using likelihood ratio test
### proposed model
x <- as.matrix(cbind(rep(1,n),data$locus,data$self,data$motiv))
colnames(x) <- c("intercept","slope_read","slope_write","slope_sciences")
y <- as.matrix(data[,c("locus","self","motiv")])
b.hat <- solve(t(x) %*% x) %*% t(x) %*% y
(E <- t(y - x %*% b.hat) %*% (y - x %*% b.hat))
### compared model
x1 <- rep(1,n)
b.hat1 <- solve(t(x1) %*% x1) %*% t(x1) %*% y
(H <- t(y - x1 %*% b.hat1) %*% (y - x1 %*% b.hat1))
# Chi-sq approx
- (n - p - 1 - (q - p + m + 1)/2)*log(det(E)/det(H))
# p-value
1-pchisq(- (n - p - 1 - (q - p + m + 1)/2)*log(det(E)/det(H)), q*(p-m))
n <-  nrow(data)
p <-
q <- 3
m <- 3
## using likelihood ratio test
### proposed model
x <- as.matrix(cbind(rep(1,n),data$locus,data$self,data$motiv))
colnames(x) <- c("intercept","slope_read","slope_write","slope_sciences")
y <- as.matrix(data[,c("locus","self","motiv")])
b.hat <- solve(t(x) %*% x) %*% t(x) %*% y
E <- t(y - x %*% b.hat) %*% (y - x %*% b.hat)
### compared model
x1 <- rep(1,n)
b.hat1 <- solve(t(x1) %*% x1) %*% t(x1) %*% y
H <- t(y - x1 %*% b.hat1) %*% (y - x1 %*% b.hat1)
# Chi-sq approx
- (n - p - 1 - (q - p + m + 1)/2)*log(det(E)/det(H))
# p-value
1-pchisq(- (n - p - 1 - (q - p + m + 1)/2)*log(det(E)/det(H)), q*(p-m))
reg <- lm(cbind(cbind(prog1,prog2)) ~ locus + self + motiv,data )
Manova()
Manova(reg)
reg <- lm(cbind(cbind(locus,self,motiv)) ~ prog1 + prog2,data )
Manova(reg)
n <-  nrow(data)
p <-
q <- 3
m <- 3
## using likelihood ratio test
### proposed model
x <- as.matrix(cbind(rep(1,n),data$locus,data$self,data$motiv))
colnames(x) <- c("intercept","slope_read","slope_write","slope_sciences")
y <- as.matrix(data[,c("locus","self","motiv")])
b.hat <- solve(t(x) %*% x) %*% t(x) %*% y
E <- t(y - x %*% b.hat) %*% (y - x %*% b.hat)
### compared model
x1 <- rep(1,n)
b.hat1 <- solve(t(x1) %*% x1) %*% t(x1) %*% y
H <- t(y - x1 %*% b.hat1) %*% (y - x1 %*% b.hat1)
# Chi-sq approx
- (n - p - 1 - (q - p + m + 1)/2)*log(det(E)/det(H))
# p-value
1-pchisq(- (n - p - 1 - (q - p + m + 1)/2)*log(det(E)/det(H)), q*(p-m))
n <-  nrow(data)
p <- 2
q <- 3
m <- 0
## using likelihood ratio test
### proposed model
x <- as.matrix(cbind(rep(1,n),data$prog))
colnames(x) <- c("intercept","slope_prog")
y <- as.matrix(data[,c("locus","self","motiv")])
b.hat <- solve(t(x) %*% x) %*% t(x) %*% y
E <- t(y - x %*% b.hat) %*% (y - x %*% b.hat)
### compared model
x1 <- rep(1,n)
b.hat1 <- solve(t(x1) %*% x1) %*% t(x1) %*% y
H <- t(y - x1 %*% b.hat1) %*% (y - x1 %*% b.hat1)
# Chi-sq approx
- (n - p - 1 - (q - p + m + 1)/2)*log(det(E)/det(H))
# p-value
1-pchisq(- (n - p - 1 - (q - p + m + 1)/2)*log(det(E)/det(H)), q*(p-m))
# p-value
1-pchisq(- (n - p - 1 - (q - p + m + 1)/2)*log(det(E)/det(H)), q*(p-m))
n <-  nrow(data)
p <- 2
q <- 3
m <- 0
## using likelihood ratio test
### proposed model
x <- as.matrix(cbind(rep(1,n),data$prog1,data$prog2))
colnames(x) <- c("intercept","slope_prog1","slope_prog2")
y <- as.matrix(data[,c("locus","self","motiv")])
b.hat <- solve(t(x) %*% x) %*% t(x) %*% y
E <- t(y - x %*% b.hat) %*% (y - x %*% b.hat)
### compared model
x1 <- rep(1,n)
b.hat1 <- solve(t(x1) %*% x1) %*% t(x1) %*% y
H <- t(y - x1 %*% b.hat1) %*% (y - x1 %*% b.hat1)
# Chi-sq approx
- (n - p - 1 - (q - p + m + 1)/2)*log(det(E)/det(H))
# p-value
1-pchisq(- (n - p - 1 - (q - p + m + 1)/2)*log(det(E)/det(H)), q*(p-m))
n <-  nrow(data)
p <- 2
q <- 3
m <- 0
## using likelihood ratio test
### proposed model
x <- as.matrix(cbind(rep(1,n),data$prog))
colnames(x) <- c("intercept","slope_prog")
y <- as.matrix(data[,c("locus","self","motiv")])
b.hat <- solve(t(x) %*% x) %*% t(x) %*% y
E <- t(y - x %*% b.hat) %*% (y - x %*% b.hat)
### compared model
x1 <- rep(1,n)
b.hat1 <- solve(t(x1) %*% x1) %*% t(x1) %*% y
H <- t(y - x1 %*% b.hat1) %*% (y - x1 %*% b.hat1)
# Chi-sq approx
- (n - p - 1 - (q - p + m + 1)/2)*log(det(E)/det(H))
# p-value
1-pchisq(- (n - p - 1 - (q - p + m + 1)/2)*log(det(E)/det(H)), q*(p-m))
reg <- lm(cbind(cbind(locus,self,motiv)) ~ prog1 + prog2,data )
summary(manova(reg), test="Wilks")
det(E)/det(H)
(det(E)/det(H))^(n/2)
(det(E)/det(H)
(det(E)/det(H))^(n/2)
(det(E)/det(H))^(n/2)
