getOption('rmarkdown')
getOption('markdown')
install.packages("rmarkdown")
getOption(rmarkdown)
getOption("rmarkdown")
getOption(markdown)
install.packages("markdown")
library("rmarkdown", lib.loc="~/R/win-library/3.3")
remove.packages("rmarkdown", lib="~/R/win-library/3.3")
remove.packages("markdown", lib="~/R/win-library/3.3")
install.packages("markdown")
install.packages("markdown")
install.packages("rmarkdown")
install.packages("rmarkdown")
update.packages(repos="https://mran.revolutionanalytics.com/snapshot/2017-02-16")
install.packages("rmarkdown", repos="https://cloud.r-project.org")
install.packages('BSDA')
example(Income data)
knitr::opts_chunk$set(echo = TRUE)
Income = c(7,1110,7.1,5.2,8,12,0,5,2.1,2,46,7.5)
library(BSDA)
Income = c(7,1110,7.1,5.2,8,12,0,5,2.1,2,46,7.5)
library(BSDA)
Income = c(7,1110,7.1,5.2,8,12,0,5,2.1,2,46,7.5)
hist(Income)
par(mfrow=c(2,2))
hist(Income)
par(mfrow=c(2,2))
hist(Income)
boxplot(Income)
qqplot(Income)
qqnorm(Income)
par(mfrow=c(2,2))
hist(Income)
boxplot(Income)
qqnorm(Income)
qqline(Income)
par(mfrow=c(2,2))
hist(Income)
boxplot(Income)
qqnorm(Income)
qqline(Income)
par(mfrow=c(2,2))
hist(Income)
boxplot(Income)
qqnorm(Income)
qqline(Income,col='red')
par(mfrow=c(1,3))
hist(Income)
boxplot(Income)
qqnorm(Income)
qqline(Income,col='red')
summary(Income)
t.test(Income,mu=1)
t.test(Income,mu=100)
?t.test
t.test(Income,mu=1)
SIGN.test(Income,mu=1)
SIGN.test(Income,mu=1,alternative = 'two.sided')
SIGN.test(Income,md=1,alternative = 'two.sided')
sort(age)
age = c(54,42,51,54,49,56,33,58,54,64,49)
sort(age)
summary(age)
hist(age)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
ggplot(aes(x=age))+
geom_histogram(aes(x=age))+
geom_density(aes(x=age))
ggplot()+
geom_histogram(aes(x=age))+
geom_density(aes(x=age))
ggplot()+
geom_histogram(aes(x=age),bins=7)+
geom_density(aes(x=age))
ggplot()+
geom_histogram(aes(x=age),bins=7)+
geom_density(aes(x=age,y=..density..))
ggplot(aes(data=age))+
geom_histogram(bins=7)+
geom_line(stat = 'density')
ggplot(data=age)+
geom_histogram(bins=7)+
geom_line(stat = 'density')
ggplot(data=age,aes(age,..density..))+
geom_histogram(bins=7)+
geom_line(stat = 'density')
library(ggplot2)
ggplot(data=age,aes(age,..density..))+
geom_histogram(bins=7)+
geom_line(stat = 'density')
ggplot(age,aes(age,..density..))+
geom_histogram(bins=7)+
geom_line(stat = 'density')
ggplot()+
geom_histogram(aes(x=age),bins=7)+
geom_line(aes(x=age),stat = 'density')
ggplot(data=age,aese(age,..density..))+
geom_histogram(bins=7)+
geom_line(stat = 'density')
ggplot(data=age,aes(age,..density..))+
geom_histogram(bins=7)+
geom_line(stat = 'density')
ggplot()+
geom_histogram(data=age,bins=7)+
geom_line(stat = 'density')
ggplot()+
geom_histogram(aes(age,..density..),bins=7)+
geom_line(aes(age,..density..),stat = 'density')
boxplot(age)
qqline(age)
qqnorm(age)
qqline(age)
t.test(age, mu = 50)
SIGN.test(age,md=50)
?wilcox.test
wilcox.test(x,mu=10,conf.int = TRUE,correct = FALSE)
x = c(20，18，23，5，14，8，18，22)
wilcox.test(x,mu=10,conf.int = TRUE,correct = FALSE)
b = c(1.9,0.8,1.1,0.1,-0.1,4.4,5.5,1.6,4.6,3.0)
a = c(0.7,-1.6,-0.2,-1.2,0.1,3.4,3.7,0.8,0.0,2.0)
b = c(1.9,0.8,1.1,0.1,-0.1,4.4,5.5,1.6,4.6,3.0)
d = a - b
a = c(0.7,-1.6,-0.2,-1.2,0.1,3.4,3.7,0.8,0.0,2.0)
b = c(1.9,0.8,1.1,0.1,-0.1,4.4,5.5,1.6,4.6,3.0)
d = a - b
sleep = data.frame(a,b,d)
shapiro.test(sleep$d)
wilcox.test(d,mu=0,conf.int = TRUE)
setwd("C:/Users/cheny/Desktop/study/second term/Statistical Method In Finance/week one")
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/cheny/Desktop/study/second term/Statistical Method In Finance/week one")
dat = read.csv("Stock_FX_Bond.csv")
View(dat)
n = dim(dat)[1]
n=dim(dat)[1]GMReturn=GM_AC[2:n]/GM_AC[1:(n-1)]-1FReturn=F_AC[2:n]/F_AC[1:(n-1)]-1par(mfrow=c(1,1))plot(GMReturn,FReturn)
n=dim(dat)[1]
GMReturn=GM_AC[2:n]/GM_AC[1:(n-1)]-1
attach(dat)
n=dim(dat)[1]
GMReturn=GM_AC[2:n]/GM_AC[1:(n-1)]-1
FReturn=F_AC[2:n]/F_AC[1:(n-1)]-1
par(mfrow=c(1,1))
plot(GMReturn,FReturn)
cor(GMReturn,FReturn)
GMLogReturn = log( 1 + GMReturn )
plot( GMReturn, GMLogReturn )
abline(a=0,b=1)
cor( GMReturn, GMLogReturn )
niter=1e5          #number of iterations
below=rep(0,niter) #set up storage set.seed(2009)
for(i in 1:niter){
r=rnorm(45,mean=.05/253,sd=.23/sqrt(253))    #generate random numbers
logPrice=log(1e6)+cumsum(r)
minlogP=min(logPrice) #minimum price over next 45 days
below[i]=as.numeric(minlogP<log(950000))
}
mean(below)
