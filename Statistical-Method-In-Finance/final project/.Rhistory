BTC_price <- BTC$Close[BTC$Date>="2016-01-01"]
Dash_price <- Dash$Close[Dash$Date>="2016-01-01"]
ETH_price <- ETH$Close[ETH$Date>="2016-01-01"]
LTC_price <- LTC$Close[LTC$Date>="2016-01-01"]
PCA_data <- cbind(BTC)
PCA_data
PCA_data <- rbind(BTC)
PCA_data
XRP_price <- XRP$Close[XRP$Date>="2016-01-01"]
PCA_data <- cbind(BTC_price,Dash_price,ETH_price,LTC_price,XRP_price)
PCA_data
PCA_data <- scale(PCA_data,center = TRUE,scale = TRUE)
PCA_data
PCA = prcomp(PCA_data, scale. = TRUE)
PCA
# create data frame with scores
scores = as.data.frame(PCA$x)
# plot of observations
ggplot(data = scores, aes(x = PC1, y = PC2, label = rownames(scores))) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_text(colour = "tomato", alpha = 0.8, size = 4) +
ggtitle("PCA plot of USA States - Crime Rates")
# plot of observations
ggplot(data = scores, aes(x = PC1, y = PC2, label = rownames(scores))) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
geom_text(alpha = 0.8, size = 4) +
# create data frame with scores
scores = as.data.frame(PCA$x)
# create data frame with scores
scores = as.data.frame(PCA$x)
# plot of observations
ggplot(data = scores, aes(x = PC1, y = PC2, label = rownames(scores))) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
geom_text(alpha = 0.8, size = 4) +
# create data frame with scores
scores = as.data.frame(PCA$x)
# plot of observations
ggplot(data = scores, aes(x = PC1, y = PC2, label = rownames(scores))) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
geom_text(alpha = 0.8, size = 4)
PCA$sdev[1]/sum(PCA$sdev)
(PCA$sdev[1]+PCA$sdev[2])/sum(PCA$sdev)
(PCA$sdev[1]+PCA$sdev[2]+PCA$sdev[2])/sum(PCA$sdev)
(PCA$sdev[1]+PCA$sdev[2]+PCA$sdev[3])/sum(PCA$sdev)
PCA$sdev[1]/sum(PCA$sdev)
(PCA$sdev[1]+PCA$sdev[2])/sum(PCA$sdev)
(PCA$sdev[1]+PCA$sdev[2]+PCA$sdev[3])/sum(PCA$sdev)
knitr::opts_chunk$set(echo = TRUE)
hold <- window(ts(deseasonal_cnt))
fit_no_holdout = arima(ts(deseasonal_cnt[-c((length(Price)-90):length(Price))]), order=c(0,1,0))
fcast_no_holdout <- forecast(fit_no_holdout,h=90)
library('ggplot2')
library('forecast')
library('tseries')
fcast_no_holdout <- forecast(fit_no_holdout,h=90)
plot(fcast_no_holdout, main=" ")
lines(ts(deseasonal_cnt))
fit_no_holdout = arima(ts(deseasonal_cnt[-c((length(Price)-90):length(Price))]), order=c(19,1,0))
fcast_no_holdout <- forecast(fit_no_holdout,h=90)
plot(fcast_no_holdout, main=" ")
lines(ts(deseasonal_cnt))
fcast_no_holdout <- forecast(fit_no_holdout,h=90)
plot(fcast_no_holdout, main=" ")
lines(ts(deseasonal_cnt))
hold <- window(ts(deseasonal_cnt))
fit_no_holdout = arima(ts(deseasonal_cnt[-c((length(Price)-90):length(Price))]), order=c(0,1,0))
fcast_no_holdout <- forecast(fit_no_holdout,h=90)
plot(fcast_no_holdout, main=" ")
lines(ts(deseasonal_cnt))
knitr::opts_chunk$set(echo = TRUE)
times <- c(1.25,1.41, 4.98, 5.25, 5.38, 6.92, 8.89, 10.98, 11.18, 13.11, 13.21, 16.33, 19.77, 21.08,21.84, 22.07, 31.38, 32.61, 37.18, 42.92, 1.05, 2.92, 3.61, 4.20, 4.49, 6.72, 7.31, 9.08, 9.11, 14.49, 16.85, 18.82, 26.59, 30.26, 41.34)
status <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0)
length(times)
group <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
library(survival)
fit <- survfit(Surv(times,status)~group)
plot(fit,lty = 1:2, col = 1:2)
library(survival)
fit <- survfit(Surv(times,status)~group)
plot(fit,lty = 1:2, col = 1:2)
plot(fit,lty = 1:2, col = 1:2,main = "the survival function for group A and group B")
legend(1, 95, legend=c("Group A", "Group B"), col = 1:2, lty=1:2, cex=0.8)
library(survival)
fit <- survfit(Surv(times,status)~group)
plot(fit,lty = 1:2, col = 1:2,main = "the survival function for group A and group B")
legend(1, 95, legend=c("Group A", "Group B"), col = 1:2, lty=1:2, cex=0.8)
legend(1, 95, legend=c("Group A", "Group B"), col = 1:2, lty=1:2, cex=0.8)
library(survival)
fit <- survfit(Surv(times,status)~group)
plot(fit,lty = 1:2, col = 1:2,main = "the survival function for group A and group B")
legend(1, 95, legend=c("Group A", "Group B"), col = 1:2, lty=1:2, cex=0.8)
library(survival)
fit <- survfit(Surv(times,status)~group)
plot(fit,lty = 1:2, col = 1:2,main = "the survival function for group A and group B")
legend(legend=c("Group A", "Group B"), col = 1:2, lty=1:2, cex=0.8)
library(survival)
fit <- survfit(Surv(times,status)~group)
plot(fit,lty = 1:2, col = 1:2,main = "the survival function for group A and group B")
legend(c("Group A", "Group B"), col = 1:2, lty=1:2, cex=0.8)
library(survival)
fit <- survfit(Surv(times,status)~group)
plot(fit,lty = 1:2, col = 1:2,main = "the survival function for group A and group B")
labels(c("Group A", "Group B"), col = 1:2, lty=1:2, cex=0.8)
library(survival)
fit <- survfit(Surv(times,status)~group)
plot(fit,lty = 1:2, col = 1:2,main = "the survival function for group A and group B")
legend("topright",legend=c("Group A", "Group B"), col = 1:2, lty=1:2, cex=0.8)
library(survival)
fit <- survfit(Surv(times,status)~group)
plot(fit,lty = 1:2, col = 1:2,main = "the survival function for group A and group B")
legend("topright",legend=c("Group A", "Group B"), col = 1:2, lty=1:2, cex=1.8)
library(survival)
fit <- survfit(Surv(times,status)~group)
plot(fit,lty = 1:2, col = 1:2,main = "the survival function for group A and group B")
legend("topright",legend=c("Group A", "Group B"), col = 1:2, lty=1:2, cex=1)
summary(fit)
summary(fit)
summary(fit)
summary(fit)
fit
surdiff(Surv(time,status) ~ group, rho=0)
survdiff(Surv(time,status) ~ group, rho=0)
# read the data
times <- c(1.25,1.41, 4.98, 5.25, 5.38, 6.92, 8.89, 10.98, 11.18, 13.11, 13.21, 16.33, 19.77, 21.08,21.84, 22.07, 31.38, 32.61, 37.18, 42.92, 1.05, 2.92, 3.61, 4.20, 4.49, 6.72, 7.31, 9.08, 9.11, 14.49, 16.85, 18.82, 26.59, 30.26, 41.34)
status <- as.factor(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0))
group <- as.factor(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))
library(survival)
fit <- survfit(Surv(times,status)~group)
plot(fit,lty = 1:2, col = 1:2,main = "the survival function for group A and group B")
legend("topright",legend=c("Group A", "Group B"), col = 1:2, lty=1:2, cex=1)
# read the data
times <- c(1.25,1.41, 4.98, 5.25, 5.38, 6.92, 8.89, 10.98, 11.18, 13.11, 13.21, 16.33, 19.77, 21.08,21.84, 22.07, 31.38, 32.61, 37.18, 42.92, 1.05, 2.92, 3.61, 4.20, 4.49, 6.72, 7.31, 9.08, 9.11, 14.49, 16.85, 18.82, 26.59, 30.26, 41.34)
status <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0)
group <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
library(survival)
fit <- survfit(Surv(times,status)~group)
plot(fit,lty = 1:2, col = 1:2,main = "the survival function for group A and group B")
legend("topright",legend=c("Group A", "Group B"), col = 1:2, lty=1:2, cex=1)
summary(fit)
survdiff(Surv(time,status) ~ group, rho=0)
surdiff(Surv(time,status) ~ group, rho=0)
survdiff(Surv(time,status)~group, rho=0)
survdiff(Surv(as.numeric(time),status)~group, rho=0)
survdiff(Surv(times,status)~group, rho=0)
fit2 <- coxph(formula = Surv(times, status) ~ factor(group))
fit2
summary(fit2)
knitr::opts_chunk$set(echo = TRUE)
regression_original <- read.csv("result.csv")
regression
knitr::opts_chunk$set(echo = TRUE)
PCA <- read.csv("USD2017.1.1-present.csv")
PCA <- PCA[,-1]
PCA
PCA = prcomp(pca, scale. = FALSE)
setwd("C:/Users/cheny/Desktop/study/second term/Statistical Method In Finance/final project")
regression_original <- read.csv("result.csv")
regression
regression <- regression_original[c("return","PC1","PC2","popular.index","change")]
regression_original
regression_original <- read.csv("result.csv")
regression_original
regression <- regression_original[c("return","PC1","PC2","popular.index","change")]
regression_original
regression <- as.data.frame(regression)
regression
regression_train <- regression[1:(length(regression$PC1)-50),]
regression_test <- regression[((length(regression$PC1)-49):length(regression$PC11)),]
regression_train$change[regression_train$change == -1] = 0
regression_train
regression_train
regression_original <- read.csv("result.csv")
regression_original
regression <- as.data.frame(regression_original)
regression
regression_train <- regression[1:(length(regression$PC1)-50),]
regression
regression_train <- regression[1:(length(regression$Date)-50),]
regression_test <- regression[((length(regression$PC1)-49):length(regression$PC11)),]
regression_train$change[regression_train$change == -1] = 0
regression_train$change[regression_train$change == -1] = 0
regression_train
model <- glm(change ~., data = regression_train, family = binomial)
model
regression_original <- read.csv("result.csv")
regression_original
regression <- as.data.frame(regression_original)
regression
regression_train <- regression[1:(length(regression$Date)-50),]
regression_test <- regression[((length(regression$PC1)-49):length(regression$PC11)),]
regression_train$change[regression_train$change == -1] = 0
regression_original <- read.csv("result.csv")
regression_original
regression <- as.data.frame(regression_original)
regression_train <- regression[1:(length(regression$Date)-50),]
regression_test <- regression[((length(regression$Date)-49):length(regression$Date)),]
regression_train$change[regression_train$change == -1] = 0
regression_train$change[regression_train$change == -1] = 0
regression_train
model <- glm(change ~., data = regression_train, family = binomial)
regression_train
model <- glm(change ~ .-Date, data = regression_train, family = binomial)
summary(model)
PCA <- read.csv("USD2017.1.1-present.csv")
PCA
PCA <- PCA[,-1]
PCA
PCA = prcomp(pca, scale. = FALSE)
PCA = prcomp(PCA, scale. = FALSE)
PCA$rotation
write.csv(PCA$x,"PCA.CSV")
write.csv(PCA$x,"PCA.CSV")
PCA$sdev[1]/sum(PCA$sdev)
(PCA$sdev[1]+PCA$sdev[2])/sum(PCA$sdev)
(PCA$sdev[1]+PCA$sdev[2]+PCA$sdev[3])/sum(PCA$sdev)
PCA = prcomp(PCA, scale. = FALSE,center = FALSE)
PCA <- read.csv("USD2017.1.1-present.csv")
PCA <- PCA[,-1]
PCA
PCA = prcomp(PCA, scale. = FALSE,center = FALSE)
PCA$rotation
write.csv(PCA$x,"PCA.CSV")
write.csv(PCA$x,"PCA.CSV")
PCA$sdev[1]/sum(PCA$sdev)
(PCA$sdev[1]+PCA$sdev[2])/sum(PCA$sdev)
(PCA$sdev[1]+PCA$sdev[2]+PCA$sdev[3])/sum(PCA$sdev)
regression_original <- read.csv("result.csv")
regression_original
regression_original <- read.csv("result.csv")
regression_original
regression <- as.data.frame(regression_original)
regression_train <- regression[1:(length(regression$Date)-50),]
regression_test <- regression[((length(regression$Date)-49):length(regression$Date)),]
regression_train$change[regression_train$change == -1] = 0
regression_train$change[regression_train$change == -1] = 0
regression_train
model <- glm(change ~ .-Date, data = regression_train, family = binomial)
summary(model)
model <- glm(change ~ popular.index, data = regression_train, family = binomial)
summary(model)
model
predicted = predict(model,newdata = regression_test[,c("return","PC1","PC2","popular.index")], type="response")
predicted = predict(model,newdata = regression_test[,c("popular.index")], type="response")
predicted[predicted > 0.5] = 1
predicted = predict(model,newdata = regression_test[,c("popular.index")], type="response")
regression_original <- read.csv("result.csv")
regression_original
regression <- as.data.frame(regression_original)
regression <- as.data.frame(regression_original)
regression_train <- regression[1:(length(regression$Date)-50),]
regression_train$change[regression_train$change == -1] = 0
model <- glm(change ~ popular.index, data = regression_train, family = binomial)
model
predicted[predicted > 0.5] = 1
predicted = predict(model,newdata = regression_test[,c("popular.index")], type="response")
regression_test
regression_test <- regression_test[,c("popular.index")]
regression_test
predicted = predict(model,newdata = regression_test[,c("popular.index")], type="response")
predicted = predict(model,newdata = regression_test, type="response")
model
predicted = - 0.04082 - 0.01564 * regression_test
predicted[predicted > 0.5] = 1
predicted[predicted <= 0.5] = -1
mean(predicted == regression_test$change)
regression_original <- read.csv("result.csv")
regression_original
regression <- as.data.frame(regression_original)
regression_train <- regression[1:(length(regression$Date)-50),]
regression_test <- regression[((length(regression$Date)-49):length(regression$Date)),]
regression_train$change[regression_train$change == -1] = 0
regression_test <- regression_test[,c("popular.index","change")]
regression_test
predicted = - 0.04082 - 0.01564 * regression_test$change
predicted
predicted
predicted[predicted > 0.5] = 1
predicted[predicted <= 0.5] = -1
mean(predicted == regression_test$change)
mean(predicted == regression_test$change,na.rm = TRUE)
PCA <- read.csv("USD2017.1.1-present.csv")
PCA <- PCA[,-1]
PCA
PCA = prcomp(PCA, scale. = FALSE,center = FALSE)
PCA$rotation
write.csv(PCA$x,"PCA.CSV")
write.csv(PCA$x,"PCA.CSV")
PCA$sdev[1]/sum(PCA$sdev)
(PCA$sdev[1]+PCA$sdev[2])/sum(PCA$sdev)
(PCA$sdev[1]+PCA$sdev[2]+PCA$sdev[3])/sum(PCA$sdev)
regression_original
regression_original <- read.csv("result.csv")
regression_original
regression <- as.data.frame(regression_original)
regression_train <- regression[1:(length(regression$Date)-50),]
regression_test <- regression[((length(regression$Date)-49):length(regression$Date)),]
regression_train$change[regression_train$change == -1] = 0
regression_train$change[regression_train$change == -1] = 0
regression_train
model <- glm(change ~ popular.index, data = regression_train, family = binomial)
regression_original
regression_original <- read.csv("result.csv")
regression_original
regression_original <- regression_original[,-1]
regression_original
regression <- as.data.frame(regression_original)
regression_train <- regression[1:(length(regression$Date)-50),]
regression_test <- regression[((length(regression$Date)-49):length(regression$Date)),]
regression <- as.data.frame(regression_original)
regression_train <- regression[1:(length(regression$PC1)-50),]
regression_test <- regression[((length(regression$PC1)-49):length(regression$PC1)),]
regression_train$change[regression_train$change == -1] = 0
regression_train$change[regression_train$change == -1] = 0
regression_train
model <- glm(change ~., data = regression_train, family = binomial)
summary(model)
regression_original <- read.csv("result.csv")
regression_original <- regression_original[,-1]
regression_original
regression_original <- read.csv("result.csv")
regression_original <- regression_original[,-1]
regression_original
regression <- as.data.frame(regression_original)
regression_train <- regression[1:(length(regression$PC1)-50),]
regression_test <- regression[((length(regression$PC1)-49):length(regression$PC1)),]
regression_train$change[regression_train$change == -1] = 0
regression_test <- regression[((length(regression$PC1)-49):length(regression$PC1)),]
regression_train
model <- lm(BTC.Close ~., data = regression_train, family = binomial)
summary(model)
regression_original
y_hat <- predict(model=model,newdata = regression_test[,c("PC1","popular.index")])
y_hat <- predict(model=model,newdata = regression_test[,c("PC1","popular.index")] )
regression_test[,c("PC1","popular.index")]
y_hat <- predict(model=model,newdata = regression_test[,c("PC1","popular.index")] )
y_hat <- predict(model,newdata = regression_test[,c("PC1","popular.index")] )
plot(y_hat,regression_test$BTC.Close)
regression_original <- read.csv("result.csv")
regression_original <- regression_original[,-1]
regression_original
regression <- as.data.frame(regression_original)
regression_train <- regression[1:(length(regression$PC1)-50),]
regression_test <- regression[((length(regression$PC1)-49):length(regression$PC1)),]
regression_train
model <- lm(BTC.Close ~., data = regression_train, family = binomial)
summary(model)
regression_test[,c("PC1","popular.index")]
y_hat <- predict(model,newdata = regression_test[,c("PC1","popular.index")] )
plot(y_hat,regression_test$BTC.Close)
abline(0,1)
sum((y_hat - regression_test$BTC.Close)^2)/sum((regression_test$BTC.Close - mean(regression_test$BTC.Close))^2)
1- sum((y_hat - regression_test$BTC.Close)^2)/sum((regression_test$BTC.Close - mean(regression_test$BTC.Close))^2)
regression_original <- read.csv("result.csv")
regression_original <- regression_original[,-1]
regression_original
regression <- as.data.frame(regression_original)
regression_train <- regression[1:(length(regression$PC1)-50),]
regression_test <- regression[((length(regression$PC1)-49):length(regression$PC1)),]
regression_train
model <- lm(BTC.Close ~., data = regression_train, family = binomial)
summary(model)
regression_test[,c("PC1","popular.index")]
y_hat <- predict(model,newdata = regression_test[,c("PC1","popular.index")] )
plot(y_hat,regression_test$BTC.Close)
abline(0,1)
1- sum((y_hat - regression_test$BTC.Close)^2)/sum((regression_test$BTC.Close - mean(regression_test$BTC.Close))^2)
PCA <- read.csv("USD2017.1.1-present.csv")
PCA <- PCA[,-1]
PCA
PCA <- scale(PCA)
PCA <- read.csv("USD2017.1.1-present.csv")
PCA <- PCA[,-1]
PCA
PCA <- scale(PCA)
PCA = prcomp(PCA)
PCA$rotation
PCA$sdev[1]/sum(PCA$sdev)
PCA$rotation
write.csv(PCA$x,"PCA.CSV")
regression_original <- read.csv("result.csv")
regression_original <- regression_original[,-1]
regression_original
regression <- as.data.frame(regression_original)
regression_train <- regression[1:(length(regression$PC1)-50),]
regression_test <- regression[((length(regression$PC1)-49):length(regression$PC1)),]
regression_train
model <- lm(BTC.Close ~., data = regression_train, family = binomial)
summary(model)
regression_test[,c("PC1","popular.index")]
y_hat <- predict(model,newdata = regression_test[,c("PC1","popular.index")] )
plot(y_hat,regression_test$BTC.Close)
abline(0,1)
regression_original <- read.csv("result.csv")
regression_original <- regression_original[,-1]
regression_original
regression <- as.data.frame(regression_original)
regression_train <- regression[1:(length(regression$PC1)-50),]
regression_test <- regression[((length(regression$PC1)-49):length(regression$PC1)),]
regression_train
model <- lm(BTC.Close ~., data = regression_train, family = binomial)
summary(model)
regression_test[,c("PC1","popular.index")]
y_hat <- predict(model,newdata = regression_test[,c("PC1","popular.index")] )
plot(y_hat,regression_test$BTC.Close)
abline(0,1)
1- sum((y_hat - regression_test$BTC.Close)^2)/sum((regression_test$BTC.Close - mean(regression_test$BTC.Close))^2)
1- sum((y_hat - regression_test$BTC.Close)^2)/sum((regression_test$BTC.Close - mean(regression_test$BTC.Close))^2)
y_hat <- predict(model,newdata = regression_test[,c("PC1","popular.index")] )
y_hat
regression_original <- read.csv("result.csv")
regression_original <- regression_original[,-1]
regression_original
regression <- as.data.frame(regression_original)
regression_train <- regression[1:(length(regression$PC1)-50),]
regression_test <- regression[((length(regression$PC1)-49):length(regression$PC1)),]
regression_train
model <- lm(BTC.Close ~., data = regression_train, family = binomial)
summary(model)
regression_test[,c("PC1","popular.index")]
y_hat <- predict(model,newdata = regression_test[,c("PC1","popular.index")] )
y_hat
plot(y_hat,regression_test$BTC.Close)
abline(0,1)
1- sum((y_hat - regression_test$BTC.Close)^2)/sum((regression_test$BTC.Close - mean(regression_test$BTC.Close))^2)
1- sum((y_hat - regression_test$BTC.Close)^2)/sum((regression_test$BTC.Close - mean(regression_test$BTC.Close))^2)
knitr::opts_chunk$set(echo = TRUE)
fitreduced <- coxph(Surv(time,status)~sex+ph.ecog+pat.karno,data = data)
library(survival)
data <- survival::cancer
data <- na.omit(data)
status <- as.factor(data$status)
time <- data$time
data$sex[data$sex == 2] = 0
sex <- as.factor(data$sex)
km <- survfit(Surv(time,status)~1,data=data,type="kaplan-meier")
plot(km$time,km$surv, type="s",xlab="Time",ylab="Survival")
fit <- survfit(Surv(time,status)~sex,data=data)
plot(fit,lty=1:2,col=1:2,main = "Survival function plot for male patient and female patient",xlab = "time",ylab = "probability")
legend("topright",legend= c("female","male"),lty=1:2,col=1:2,bty="n",ncol=2,cex=1,pt.cex=0.7)
fitphm <- coxph(Surv(time,status)~sex+ph.ecog+age+ph.karno+pat.karno+meal.cal+wt.loss,data=data)
summary(fitphm)
fitreduced <- coxph(Surv(time,status)~sex+ph.ecog+pat.karno,data = data)
fitphm <- coxph(Surv(time,status)~sex+ph.ecog+age+ph.karno+pat.karno+meal.cal+wt.loss,data=data)
fitreduced <- coxph(Surv(time,status)~sex+ph.ecog+pat.karno,data = data)
anova(fitphm,fitreduced)
partial_test_statistics <- -2*log(exp(fitreduced$loglik)/exp(fitphm$loglik))
partial_test_statistics
summary(fitphm)
summary(fitreduced)
28.16 - 20.37
test <- 28.16 - 20.37
summary(fitphm)
fitphm <- coxph(Surv(time,status)~sex+ph.ecog+age+ph.karno+pat.karno+meal.cal+wt.loss,data=data)
fitreduced <- coxph(Surv(time,status)~sex+ph.ecog+pat.karno,data = data)
summary(fitphm)
summary(fitreduced)
test <- 28.16 - 20.37
qchisq(p=test)
qchisq(p=test,df=4)
qchisq(p=test,df=4,lower.tail = FALSE)
test
pchisq(q=test,df=4,lower.tail = FALSE)
anova(fitphm,fitreduced)
summary(fitphm)
fitreduced <- coxph(Surv(time,status)~sex+ph.ecog+pat.karno+wt.loss,data = data)
summary(fitphm)
summary(fitreduced)
anova(fitphm,fitreduced)
test <- 28.16 - 20.37
anova(fitphm,fitreduced)
fitphm <- coxph(Surv(time,status)~sex+ph.ecog+age+ph.karno+pat.karno+meal.cal+wt.loss,data=data)
fitreduced <- coxph(Surv(time,status)~sex+ph.ecog,data = data)
summary(fitphm)
summary(fitreduced)
anova(fitphm,fitreduced)
fitphm <- coxph(Surv(time,status)~sex+ph.ecog+age+ph.karno+pat.karno+meal.cal+wt.loss,data=data)
fitreduced <- coxph(Surv(time,status)~sex+ph.ecog+ph.karno,data = data)
summary(fitphm)
summary(fitreduced)
anova(fitphm,fitreduced)
fitphm <- coxph(Surv(time,status)~sex+ph.ecog+age+ph.karno+pat.karno+meal.cal+wt.loss,data=data)
fitreduced <- coxph(Surv(time,status)~sex+ph.ecog,data = data)
summary(fitphm)
summary(fitreduced)
anova(fitphm,fitreduced)
test <- 28.16 - 20.37
anova(fitphm,fitreduced)
fitphm <- coxph(Surv(time,status)~sex+ph.ecog+age+ph.karno+pat.karno+meal.cal+wt.loss,data=data)
fitreduced <- coxph(Surv(time,status)~sex+ph.ecog+wt.loss,data = data)
summary(fitphm)
summary(fitreduced)
anova(fitphm,fitreduced)
fitphm <- coxph(Surv(time,status)~sex+ph.ecog+age+ph.karno+pat.karno+meal.cal+wt.loss,data=data)
fitreduced <- coxph(Surv(time,status)~sex+ph.ecog+ph.karno,data = data)
summary(fitphm)
summary(fitreduced)
anova(fitphm,fitreduced)
fitphm <- coxph(Surv(time,status)~sex+ph.ecog+age+ph.karno+pat.karno+meal.cal+wt.loss,data=data)
summary(fitphm)
fitphm <- coxph(Surv(time,status)~sex+ph.ecog+age+ph.karno+pat.karno+meal.cal+wt.loss,data=data)
fitreduced <- coxph(Surv(time,status)~sex+ph.ecog+ph.karno,data = data)
summary(fitphm)
anova(fitphm,fitreduced)
fitreduced <- coxph(Surv(time,status)~sex+ph.ecog+ph.karno+pat.karno,data = data)
summary(fitphm)
summary(fitreduced)
anova(fitphm,fitreduced)
fitreduced <- coxph(Surv(time,status)~sex+ph.ecog,data = data)
