total_variance <- sum(pca$d)
cat(" proportion of total variance explained by the first principal component is:",first_principal_component/total_variance)
print('the loading vector is:/n')
pca$v
pca$v %*% data2[1:2,]
t(pca$v) %*% data2[1:2,]
t(pca$v) %*% data2
dim(pca$v)
dim(data2)
data2 %*% pca$v
data2 %*% as.matrix(pca$v)
as.matrix(data2ï¼‰ %*% as.matrix(pca$v)
as.matrix(data2) %*% as.matrix(pca$v)
as.matrix(data2) %*% as.matrix(pca$v)[1:2]
as.matrix(data2) %*% as.matrix(pca$v)[1:2,]
(as.matrix(data2) %*% as.matrix(pca$v))[1:2,]
View(data)
data_first_180 <- data[1:180,]
data_last_180 <- [-180:-1,]
data_last_180 <- [-1:-180,]
c(1,2,3,2,5,6,7,8,8,8,32,2,41,44)
c(1,2,3,2,5,6,7,8,8,8,32,2,41,44)[-1]
dim(data)
data_last_180 <- [181:360,]
data_last_180 <- data[181:360,]
FF_data = read.table("FamaFrench_mon_69_98.txt",header=T)
attach(FF_data)
library("Ecdat")
library("robust")
install.packages("robust")
FF_data = read.table("FamaFrench_mon_69_98.txt",header=T)
attach(FF_data)
library("Ecdat")
library("robust")
data(CRSPmon)
ge = 100*CRSPmon[,1] - RF
ibm = 100*CRSPmon[,2] - RF
mobil = 100*CRSPmon[,3] - RF
stocks=cbind(ge,ibm,mobil)
fit = lm(cbind(ge,ibm,mobil)~Mkt.RF+SMB+HML)
options(digits=3)
fit
pdf("FamaFrenchPairs.pdf",width=8,height=8) ## Figure 18.7
pairs(cbind(ge,ibm,mobil,Mkt.RF,SMB,HML))
graphics.off()
cor(fit$residuals)
covRob(fit$residuals,cor=T)
cor.test(fit$residuals[,1], fit$residuals[,2])
cor.test(fit$residuals[,1], fit$residuals[,3])
cor.test(fit$residuals[,2], fit$residuals[,3])
pdf("FamaFrenchResidualsPairs.pdf",width=6,height=5) ## Figure 18.8
pairs(fit$residuals)
graphics.off()
RF
Mkt
Mkt.RF
View(FF_data)
FF_data = read.table("FamaFrench_mon_69_98.txt",header=T)
attach(FF_data)
library("Ecdat")
library("robust")
data(CRSPmon)
ge = 100*CRSPmon[,1] - RF
ibm = 100*CRSPmon[,2] - RF
mobil = 100*CRSPmon[,3] - RF
stocks=cbind(ge,ibm,mobil)
fit = lm(cbind(ge,ibm,mobil)~Mkt.RF+SMB+HML)
FF_data = read.table("FamaFrench_mon_69_98.txt",header=T)
attach(FF_data)
library("Ecdat")
library("robust")
data(CRSPmon)
ge = 100*CRSPmon[,1] - RF
ibm = 100*CRSPmon[,2] - RF
mobil = 100*CRSPmon[,3] - RF
stocks=cbind(ge,ibm,mobil)
data_first_180 <- stocks[1:180,]
data_last_180 <- stocks[181:360,]
FF_data = read.table("FamaFrench_mon_69_98.txt",header=T)
attach(FF_data)
library("Ecdat")
library("robust")
data(CRSPmon)
ge = (100*CRSPmon[,1] - RF)[1:180,]
ge = (100*CRSPmon[,1] - RF)
ge
stocks
FF_data = read.table("FamaFrench_mon_69_98.txt",header=T)
attach(FF_data)
library("Ecdat")
library("robust")
data(CRSPmon)
ge = 100*CRSPmon[,1] - RF
ibm = 100*CRSPmon[,2] - RF
mobil = 100*CRSPmon[,3] - RF
stocks=cbind(ge,ibm,mobil)
data_first_180 <- stocks[1:180,]
data_first_180
fit1 = lm(data_first_180~Mkt.RF+SMB+HML)
fit1 = lm(data_first_180~Mkt.RF[1:180]+SMB[1:180]+HML[1:180])
data_first_180 <- stocks[1:180,]
fit1 = lm(data_first_180~Mkt.RF[1:180]+SMB[1:180]+HML[1:180])
options(digits=3)
fit1
data_last_180 <- stocks[181:360,]
fit2 = lm(data_first_180~Mkt.RF[181:360]+SMB[181:360]+HML[181:360])
options(digits=3)
fit1
data_last_180 <- stocks[181:360,]
fit2 = lm(data_first_180~Mkt.RF[181:360]+SMB[181:360]+HML[181:360])
options(digits=3)
fit2
0.5 * (0.17-0.1) +0.1
1000/1.135
1000/ (1 + 0.7 * (0.17-0.1) +0.1)
knitr::opts_chunk$set(echo = TRUE)
library(psych)
# fristly, calculate the month return so that we can use the CPA
data2 <- as.data.frame(CRSPmon)
ge_return <- scale(diff(data2$ge)-1)
ibm_return <- scale(diff(data2$ibm)-1)
mobil_return <- scale(diff(data2$mobil)-1)
crsp_return <- scale(diff(data2$crsp)-1)
data_return <- as.matrix(cbind(ge_return,ibm_return,mobil_return,crsp_return))
covariance_matrix <- t(data_return) %*% data_return
library(psych)
pc <- principal(covariance_matrix,scores = T,rotate = "varimax")
pc$loadings
pc$r.scores
score <- as.data.frame(pc$scores)
score
knitr::opts_chunk$set(echo = TRUE)
library(psych)
x_data <- train_data[,-257]
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/cheny/Desktop/study/second term/Statistical Method In Finance/homework/homework four")
data <- read.table("FamaFrench_mon_69_98.txt",header = TRUE,col.names = c('date','Mkt-RF','SMB','HML','RF'))
library(Ecdat)
# fristly, calculate the month return so that we can use the CPA
data2 <- as.data.frame(CRSPmon)
ge_return <- scale(diff(data2$ge)-1)
ibm_return <- scale(diff(data2$ibm)-1)
mobil_return <- scale(diff(data2$mobil)-1)
crsp_return <- scale(diff(data2$crsp)-1)
data_return <- as.matrix(cbind(ge_return,ibm_return,mobil_return,crsp_return))
covariance_matrix <- t(data_return) %*% data_return
library(psych)
pc <- principal(covariance_matrix,scores = T,rotate = "varimax")
pc$loadings
score <- as.data.frame(pc$scores)
score
first_principal_component <- pca$d[1]
total_variance <- sum(pca$d)
cat(" proportion of total variance explained by the first principal component is:",first_principal_component/total_variance)
print('the loading vector is:/n')
pca$v
(as.matrix(data2) %*% as.matrix(pca$v))[1:2,]
FF_data = read.table("FamaFrench_mon_69_98.txt",header=T)
attach(FF_data)
library("Ecdat")
library("robust")
data(CRSPmon)
ge = 100*CRSPmon[,1] - RF
ibm = 100*CRSPmon[,2] - RF
mobil = 100*CRSPmon[,3] - RF
stocks=cbind(ge,ibm,mobil)
data_first_180 <- stocks[1:180,]
fit1 = lm(data_first_180~Mkt.RF[1:180]+SMB[1:180]+HML[1:180])
options(digits=3)
fit1
data_last_180 <- stocks[181:360,]
fit2 = lm(data_first_180~Mkt.RF[181:360]+SMB[181:360]+HML[181:360])
options(digits=3)
fit2
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/cheny/Desktop/study/second term/staistical machine learning/homework/homework two")
train_3 <- read.table("train_3.txt", header=FALSE, sep=",")
train_3$number <- 3
train_5 <- read.table("train_5.txt", header=FALSE, sep=",")
train_5$number <- 5
train_8 <- read.table("train_8.txt", header=FALSE, sep=",")
train_8$number <- 8
train_data <- rbind(train_3,train_5,train_8)
test <- read.table("zip_test.txt",header = FALSE,sep = " ")
number <- test[,1]
test_data <- test[,-1]
test_data$number <- number
colnames(test_data) <- c("V1",colnames(test_data)[-256])
# we only need the testing data which is represent the number 3,5,8
test_data <- test_data[(test_data$number==3 | test_data$number==5|test_data$number==8),]
library(MASS)
lda.model<-lda(number ~.-number , data=train_data)
lda.pred1 = predict(lda.model, train_data[,-257])
table(train_data$number, lda.pred1$class)
lda.pred2 = predict(lda.model, test_data[,-257])
table(test_data$number, lda.pred2$class)
library(psych)
x_data <- train_data[,-257]
x_data <- scale(x_data)
pc <- principal(x_data,nfactors = 49,scores = T,rotate = "varimax")
score <- as.data.frame(pc$scores)
colnames(score) <- colnames(train_data)[1:49]
score$number <- train_data$number
lda.model2<-lda(number ~.-number , data=score)
lda.pred3 = predict(lda.model2, score[,-50])
table(score$number, lda.pred3$class)
x_data <- test_data[,-257]
x_data <- scale(x_data)
pc <- principal(x_data,nfactors = 49,scores = T,rotate = "varimax")
score2 <- as.data.frame(pc$scores)
colnames(score2) <- colnames(test_data)[1:49]
score2$number <- test_data$number
lda.model2<-lda(number ~.-number , data=score2)
lda.pred4 = predict(lda.model2, score2[,-50])
table(score2$number, lda.pred4$class)
new_data_transformer <- function(dataset){
ans <- rep(NA,64)
for (i in 0:7){
for (j in 0:7) {
ans[i*8 + j + 1] <- mean(c(dataset[32*i + 2*j + 1],
dataset[32*i + 2*j +2],
dataset[32*i + 2*j + 17],
dataset[32*i + 2*j + 17]))
}
}
return(ans)
}
new_train <- matrix(NA,nrow = nrow(train_data),ncol = 64)
for (i in 1:nrow(train_data)) {
new_train[i,] <- new_data_transformer(as.numeric(train_data[i,1:256]))
}
new_train <- as.data.frame(new_train)
new_train$number <- train_data$number
colnames(new_train)[1:64] <- colnames(train_data)[1:64]
new_test <- matrix(NA,nrow = nrow(test_data),ncol = 64)
for (i in 1:nrow(test_data)) {
new_test[i,] <- new_data_transformer(as.numeric(test_data[i,1:256]))
}
new_test<- as.data.frame(new_test)
new_test$number <- test_data$number
colnames(new_test)[1:64] <- colnames(test_data)[1:64]
lda.model3<-lda(number ~.-number , data=new_train)
lda.pred5 = predict(lda.model3, new_train[,-65])
table(new_train$number, lda.pred5$class)
lda.pred6 = predict(lda.model3, new_test[,-65])
table(new_test$number, lda.pred6$class)
library(glmnet)
glm.fit=glmnet(as.matrix(new_train[,-65]),y = as.factor(new_train$number), family = "multinomial")
pred = predict(object = glm.fit, newx=as.matrix(new_train[,-65]),type="class")
table(new_train$number, pred[,94])
glm_pred = predict(glm.fit,as.matrix(new_test[,-65]),type="class")
table(new_test$number, glm_pred[,94])
LDA=c(0.01594533,0.08739837)
PCA_LDA=c(0.04612756,0.06504065)
PIXEL_LDA=c(0.03701595,0.07723577)
LOGISTIC=c(0.001138952,0.09349593)
result <- data.frame(LDA,PCA_LDA,PIXEL_LDA,LOGISTIC)
result
knitr::opts_chunk$set(echo = TRUE)
pc <- princomp(covariance_matrix)
pc <-
pc <- principal(covariance_matrix,scores = T,rotate = "varimax")
pc
pc <- princomp(covariance_matrix)
pc
pc[1]
pc
pc$x
pc <- princomp(covariance_matrix)
pc$x
library(psych)
pc <- princomp(covariance_matrix)
pc <- data.frame(pca$x)
pc
pc <- princomp(covariance_matrix,cor = TRUE)
Summary(pc)
pc <- princomp(covariance_matrix,cor = TRUE)
summary(pc)
data2 <- as.data.frame(CRSPmon)
ge_return <- scale(diff(data2$ge)-1)
ibm_return <- scale(diff(data2$ibm)-1)
mobil_return <- scale(diff(data2$mobil)-1)
crsp_return <- scale(diff(data2$crsp)-1)
data_return <- as.matrix(cbind(ge_return,ibm_return,mobil_return,crsp_return))
covariance_matrix <- t(data_return) %*% data_return
pc <- princomp(covariance_matrix,cor = TRUE)
summary(pc)
library(psych)
FF_data = read.table("FamaFrench_mon_69_98.txt",header=T)
attach(FF_data)
library("Ecdat")
library("robust")
data(CRSPmon)
ge = 100*CRSPmon[,1] - RF
ibm = 100*CRSPmon[,2] - RF
mobil = 100*CRSPmon[,3] - RF
stocks=cbind(ge,ibm,mobil)
data_first_180 <- stocks[1:180,]
fit1 = lm(data_first_180~Mkt.RF[1:180]+SMB[1:180]+HML[1:180])
options(digits=3)
fit1
summary(pc,loading=TRUE)
library(psych)
pc <- principal(covariance_matrix,scores = T,rotate = "varimax")
pc$loadings
pc <- principal(covariance_matrix,scores = T,rotate = "varimax")
pc
summary(pc)
pca <- prcomp(data_return)
pca
summary(pca)
loadings(pca)
pca$x
pca$rotation
dim(data)
View(data)
setwd("C:/Users/cheny/Desktop/study/second term/Statistical Method In Finance/homework/homework four")
data <- read.table("FamaFrench_mon_69_98.txt",header = TRUE,col.names = c('date','Mkt-RF','SMB','HML','RF'))
# fristly, calculate the month return so that we can use the CPA
data2 <- as.data.frame(CRSPmon)
ge_return <- scale(diff(data2$ge)-1)
ibm_return <- scale(diff(data2$ibm)-1)
mobil_return <- scale(diff(data2$mobil)-1)
crsp_return <- scale(diff(data2$crsp)-1)
data_return <- as.matrix(cbind(ge_return,ibm_return,mobil_return,crsp_return))
pca <- prcomp(data_return)
summary(pca)
pca$rotation
View(data)
library("Ecdat")
data(CRSPmon)
# fristly, calculate the month return so that we can use the CPA
data2 <- as.data.frame(CRSPmon)
View(data2)
# fristly, calculate the month return so that we can use the CPA
data2 <- as.data.frame(CRSPmon)
ge_return <- scale(diff(data2$ge)-1)
ibm_return <- scale(diff(data2$ibm)-1)
mobil_return <- scale(diff(data2$mobil)-1)
crsp_return <- scale(diff(data2$crsp)-1)
data_return <- as.matrix(cbind(ge_return,ibm_return,mobil_return,crsp_return))
pca <- prcomp(data_return)
summary(pca)
# fristly, calculate the month return so that we can use the CPA
data2 <- as.data.frame(CRSPmon[,1:3])
ge_return <- scale(diff(data2$ge)-1)
ibm_return <- scale(diff(data2$ibm)-1)
mobil_return <- scale(diff(data2$mobil)-1)
crsp_return <- scale(diff(data2$crsp)-1)
data_return <- as.matrix(cbind(ge_return,ibm_return,mobil_return,crsp_return))
# fristly, calculate the month return so that we can use the CPA
data2 <- as.data.frame(CRSPmon[,1:3])
ge_return <- scale(diff(data2$ge)-1)
ibm_return <- scale(diff(data2$ibm)-1)
mobil_return <- scale(diff(data2$mobil)-1)
data_return <- as.matrix(cbind(ge_return,ibm_return,mobil_return))
pca <- prcomp(data_return)
summary(pca)
first_principal_component <- pca$d[1]
total_variance <- sum(pca$d)
cat(" proportion of total variance explained by the first principal component is:0.563")
pca$rotation
setwd("C:/Users/cheny/Desktop/study/second term/Statistical Method In Finance/homework/homework four")
data <- read.table("FamaFrench_mon_69_98.txt",header = TRUE,col.names = c('date','Mkt-RF','SMB','HML','RF'))
library("Ecdat")
data(CRSPmon)
# fristly, calculate the month return so that we can use the CPA
data2 <- as.data.frame(CRSPmon[,1:3])
pca <- prcomp(data2)
summary(pca)
cat(" proportion of total variance explained by the first principal component is:0.563")
cat(" proportion of total variance explained by the first principal component is:0.5719")
pca$rotation
pca$x[1:2,]
data_last_180 <- stocks[181:360,]
fit2 = lm(data_first_180~Mkt.RF[181:360]+SMB[181:360]+HML[181:360])
options(digits=3)
fit2
FF_data = read.table("FamaFrench_mon_69_98.txt",header=T)
attach(FF_data)
library("Ecdat")
library("robust")
Mkt.RF = FF_data[,2]
SMB = FF_data[,3]
HML = FF_data[,4]
RF = FF_data[,5]
data(CRSPmon)
ge = 100*CRSPmon[,1] - RF
ibm = 100*CRSPmon[,2] - RF
mobil = 100*CRSPmon[,3] - RF
stocks=cbind(ge,ibm,mobil)
data_first_180 <- stocks[1:180,]
fit1 = lm(data_first_180~Mkt.RF[1:180]+SMB[1:180]+HML[1:180])
options(digits=3)
fit1
data_last_180 <- stocks[181:360,]
fit2 = lm(data_first_180~Mkt.RF[181:360]+SMB[181:360]+HML[181:360])
options(digits=3)
fit2
data_last_180 <- stocks[181:360,]
fit2 = lm(data_last_180~Mkt.RF[181:360]+SMB[181:360]+HML[181:360])
options(digits=3)
fit2
5 + 9 + 6 + 1 + 2 + 5
setwd("C:/Users/cheny/Desktop/study/second term/staistical machine learning/homework/homework two")
train_3 <- read.table("train_3.txt", header=FALSE, sep=",")
train_3$number <- 3
train_5 <- read.table("train_5.txt", header=FALSE, sep=",")
train_5$number <- 5
train_8 <- read.table("train_8.txt", header=FALSE, sep=",")
train_8$number <- 8
train_data <- rbind(train_3,train_5,train_8)
test <- read.table("zip_test.txt",header = FALSE,sep = " ")
number <- test[,1]
test_data <- test[,-1]
test_data$number <- number
colnames(test_data) <- c("V1",colnames(test_data)[-256])
# we only need the testing data which is represent the number 3,5,8
test_data <- test_data[(test_data$number==3 | test_data$number==5|test_data$number==8),]
library(MASS)
lda.model<-lda(number ~.-number , data=train_data)
lda.pred1 = predict(lda.model, train_data[,-257])
table(train_data$number, lda.pred1$class)
sum(table(train_data$number, lda.pred1$class))
28/1756
27/1756
x_data <- test_data[,-257]
x_data <- scale(x_data)
pc <- principal(x_data,nfactors = 49,scores = T,rotate = "varimax")
score2 <- as.data.frame(pc$scores)
colnames(score2) <- colnames(test_data)[1:49]
score2$number <- test_data$number
lda.model2<-lda(number ~.-number , data=score2)
lda.pred4 = predict(lda.model2, score2[,-50])
table(score2$number, lda.pred4$class)
socre
library(psych)
x_data <- train_data[,-257]
x_data <- scale(x_data)
pc <- principal(x_data,nfactors = 49,scores = T,rotate = "varimax")
score <- as.data.frame(pc$scores)
colnames(score) <- colnames(train_data)[1:49]
score$number <- train_data$number
score
View(score)
pc$values
dim(pc$values)
a <- pc$values
a <- pc$rotation
a
a <- pc$loadings
a
pca <- princomp(train_data[,1:256])
score <- data.frame(pca$x[, 1:49])
colnames(score) <- colnames(train_data)[1:49]
dim(score)
pca <- prcomp(train_data[,1:256])
score <- data.frame(pca$x[, 1:49])
colnames(score) <- colnames(train_data)[1:49]
score$number <- train_data$number
lda.model2<-lda(number ~.-number , data=score)
lda.pred3 = predict(lda.model2, score[,-50])
table(score$number, lda.pred3$class)
16 + 11 + 19 + 8 + 12 + 11
77/1756
pca2 <- prcomp(test_data[,-257])
score2 <- data.frame(pca2$x[, 1:49])
colnames(score2) <- colnames(test_data)[1:49]
score2$number <- test_data$number
lda.model2<-lda(number ~.-number , data=score2)
lda.pred4 = predict(lda.model2, score2[,-50])
table(score2$number, lda.pred4$class)
8 + 4 + 8 + 1 + 6 + 5
sum(table(score2$number, lda.pred4$class))
32/492
new_data_transformer <- function(dataset){
ans <- rep(NA,64)
for (i in 0:7){
for (j in 0:7) {
ans[i*8 + j + 1] <- mean(c(dataset[32*i + 2*j + 1],
dataset[32*i + 2*j +2],
dataset[32*i + 2*j + 17],
dataset[32*i + 2*j + 17]))
}
}
return(ans)
}
new_train <- matrix(NA,nrow = nrow(train_data),ncol = 64)
for (i in 1:nrow(train_data)) {
new_train[i,] <- new_data_transformer(as.numeric(train_data[i,1:256]))
}
new_train <- as.data.frame(new_train)
new_train$number <- train_data$number
colnames(new_train)[1:64] <- colnames(train_data)[1:64]
new_test <- matrix(NA,nrow = nrow(test_data),ncol = 64)
for (i in 1:nrow(test_data)) {
new_test[i,] <- new_data_transformer(as.numeric(test_data[i,1:256]))
}
new_test<- as.data.frame(new_test)
new_test$number <- test_data$number
colnames(new_test)[1:64] <- colnames(test_data)[1:64]
lda.model3<-lda(number ~.-number , data=new_train)
lda.pred5 = predict(lda.model3, new_train[,-65])
table(new_train$number, lda.pred5$class)
lda.pred6 = predict(lda.model3, new_test[,-65])
table(new_test$number, lda.pred6$class)
library(glmnet)
glm.fit=glmnet(as.matrix(new_train[,-65]),y = as.factor(new_train$number), family = "multinomial")
pred = predict(object = glm.fit, newx=as.matrix(new_train[,-65]),type="class")
table(new_train$number, pred[,94])
glm_pred = predict(glm.fit,as.matrix(new_test[,-65]),type="class")
table(new_test$number, glm_pred[,94])
