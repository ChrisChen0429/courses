setwd("~/Desktop/yi/professional_study/courses/Multivariate Analysis I/class/week11")
install.packages("nFactors")
## Exercise 9.26 on p. 537
# Use the mice weight data covariance matrix from Example 8.6
(R = matrix(c(1, 0.7501, 0.6329, 0.6363,
0.7501, 1, 0.6925, 0.7386,
0.6329, 0.6925, 1, 0.6625,
0.6363, 0.7386, 0.6625, 1), 4, 4))
## Exercise 9.26 on p. 537
# Use the mice weight data covariance matrix from Example 8.6
(R = matrix(c(1, 0.7501, 0.6329, 0.6363,
0.7501, 1, 0.6925, 0.7386,
0.6329, 0.6925, 1, 0.6625,
0.6363, 0.7386, 0.6625, 1), 4, 4))
s = c(32.9909, 33.5918, 36.5534, 37.3517)
D = diag(s)
(S = D %*% R %*% D)
(mice.fa = principal(S, nfactors = 1, rotate = 'none', covar = TRUE))
(mice.fa = principal(S, nfactors = 1, rotate = 'none', covar = TRUE))
?principal
??principal
# Read the stock dataset from Table 8.4
stocks = as.matrix(read.table("T8-4.DAT"))
View(stocks)
colnames(stocks) = c("JPM", "C", "WFC", "RDS", "XOM")
library(psych)
# The principal function performs factor analysis with the principal component method:
(stocks.fa = principal(stocks, nfactors = 2, rotate = 'none'))
library(psych)
(mice.fa = principal(S, nfactors = 1, rotate = 'none', covar = TRUE))
# b) Obtain the maximum likelihood solution for factor model with m = 1
# Report the estimated loadings and specific variances
(fit = factanal(covmat = S, factors = 1, rotation = "none"))
# The principal function performs factor analysis with the principal component method:
(stocks.fa = principal(stocks, nfactors = 2, rotate = 'none'))
# Residual matrix:
stocks.fa$residual
# Specific variances psi, called uniquenesses
stocks.fa$uniquenesses
# We can subtract them from the diagonal of the residual matrix:
stocks.fa$residual - diag(stocks.fa$uniquenesses)
# factanal function uses the MLE method:
(fit = factanal(stocks, factors = 2, rotation = "none"))
# For example, now the JPM communality h1.sq is  0.121^2 + 0.754^2 = 0.58
# Can also be obtained this way:
1-fit$uniquenesses
# Loadings:
(L = loadings(fit)[1:5,])
# Residual matrix:
round(cor(stocks) - L %*% t(L) - diag(fit$uniquenesses), 3)
# Test statistic:
fit$STATISTIC
# p-value:
fit$PVAL
# Rotated loadings:
(fit2 = factanal(stocks, factors = 2))
# Loadings after rotation
(L.rot = loadings(fit2)[1:5,])
# Specific variances Psi after rotation
(Psi.rot = diag(fit2$uniquenesses))
# Scores with regression method:
(fit2 = factanal(stocks, factors = 2, scores = "regression"))
fit2$scores
# Scores with WLS method:
(fit3 = factanal(stocks, factors = 2, scores = "Bartlett"))
fit3$scores
# Scatterplot of the regression scores
plot(fit2$scores, pch = 19)
abline(h = 0, v = 0)
# We can also examine the scatteplot of scores obtained with different methods:
(stocks.fa2 = principal(stocks, nfactors = 2))
par(mfrow = c(1,2))
plot(fit2$scores[,1], stocks.fa2$scores[,1], xlab = "MLE", ylab = "PC", main = "Factor 1")
abline(0, 1)
plot(fit2$scores[,2], stocks.fa2$scores[,2], xlab = "MLE", ylab = "PC", main = "Factor 2")
abline(0, 1)
par(mfrow = c(1,1))
my.data = read.csv(file.choose())
install.packages(c("lavaan", "lavaanPlot", "sem"))
library(sem)
library(lavaan)
install.packages("sem")
install.packages("sem",dependencies = T,type = 'source',TRUE)
install.packages("sem",dependencies = TRUE,type = 'source',clean = TRUE)
install.packages('MBESS',dependencies = T,type ='source',clean = T)
setwd("~/Desktop/yi/professional_study/courses/Multivariate Analysis I/hw/homework8")
# Install package sem
#install.packages("sem")
library(sem)
# The model:
mod <- c("Ability     -> SCA, lambda1, NA",
"Ability     -> PPE, lambda2, NA",
"Ability     -> PTE, lambda3, NA",
"Ability     -> PFE, lambda4, NA",
"Aspiration  -> EA, lambda5, NA",
"Aspiration  -> CP, lambda6, NA",
"Ability    <-> Aspiration, rho, NA",
"SCA        <-> SCA, theta1, NA",
"PPE        <-> PPE, theta2, NA",
"PTE        <-> PTE, theta3, NA",
"PFE        <-> PFE, theta4, NA",
"EA         <-> EA, theta5, NA",
"CP         <-> CP, theta6, NA",
"Ability    <-> Ability, NA, 1",
"Aspiration <-> Aspiration, NA, 1")
# Note the factor variances are fixed at 1 for identifiability
# Save the file as text:
writeLines(mod, con = "ability_model.txt")
ability_model <- specifyModel(file = "ability_model.txt")
ability_sem <- sem(ability_model, ability, 556)
pathDiagram(ability_sem)
model <- '
# measurement model
ind60 =~ x1 + x2 + x3
dem60 =~ y1 + y2 + y3 + y4
dem65 =~ y5 + y6 + y7 + y8
# regressions
dem60 ~ ind60
dem65 ~ ind60 + dem60
# residual correlations
y1 ~~ y5
y2 ~~ y4 + y6
y3 ~~ y7
y4 ~~ y8
y6 ~~ y8
'
fit <- sem(model, data=PoliticalDemocracy)
summary(fit, standardized=TRUE)
#install.packages("lavaanPlot")
library(lavaanPlot)
lavaanPlot(model = fit, coef = TRUE)
knitr::opts_chunk$set(echo = TRUE)
## read the table
trackwomen <- read.table("TrackWomen.dat")
## read the table
trackwomen <- read.table("TrackWomen.dat", header = F)
## read the table
trackwomen <- read.table("TrackWomen.dat", header = TRUE)
## read the table
trackwomen <- read.table("TrackWomen.dat", header = TRUE,sep = " ")
trackwomen
## read the table
trackwomen <- read.table("TrackWomen.dat", header = TRUE,sep = "\t")
head(trackwomen)
## read the table
trackwomen <- read.table("TrackWomen.dat", header = TRUE,sep = "\t")
head(trackwomen)
## create the correlation matrix
R <- cor(trackwomen[2:])
## create the correlation matrix
R <- cor(trackwomen[2:ncol(trackwomen)])
R
## create the correlation matrix
library(psych)
trackwomen.fa = principal(trackwomen, nfactors = 2, rotate = 'none'))
trackwomen.fa = principal(trackwomen, nfactors = 2, rotate = 'none')
trackwomen.fa = principal(trackwomen[2:ncol(trackwomen)], nfactors = 2, rotate = 'none')
trackwomen.fa
trackwomen.fa = principal(R, nfactors = 2, rotate = 'none')
(trackwomen.fa = principal(R, nfactors = 2, rotate = 'none'))
trackwomen.fa$loadings
trackwomen.fa$loadings[['loadings']]
trackwomen.fa$loadings['loadings']
trackwomen.fa$loadings
a <- trackwomen.fa$loadings
a
trackwomen.fa$loadings
loadings(trackwomen.fa)
loadings(trackwomen.fa)[,1]
plot(loadings(trackwomen.fa)[,1], loadings(trackwomen.fa)[,2], xlab = "Factor 1", ylab = 'Factor 2')
plot(loadings(trackwomen.fa)[,1], loadings(trackwomen.fa)[,1], xlab = "Factor 1", ylab = 'Factor 2')
plot(loadings(trackwomen.fa)[,2], loadings(trackwomen.fa)[,2], xlab = "Factor 1", ylab = 'Factor 2')
plot(loadings(trackwomen.fa)[,1], trackwomen.fa)[,2], xlab = "Factor 1", ylab = 'Factor 2')
plot(loadings(trackwomen.fa)[,1], oadings(trackwomen.fa)[,2], xlab = "Factor 1", ylab = 'Factor 2')
plot(loadings(trackwomen.fa)[,1], l
oadings(trackwomen.fa)[,2], xlab = "Factor 1", ylab = 'Factor 2')
plot(loadings(trackwomen.fa)[,1],
oadings(trackwomen.fa)[,2], xlab = "Factor 1", ylab = 'Factor 2')
plot(loadings(trackwomen.fa)[,1],
loadings(trackwomen.fa)[,2], xlab = "Factor 1", ylab = 'Factor 2')
plot(trackwomen.fa$scores[,1],
trackwomen.fa$scores[,2], xlab = "Factor 1", ylab = 'Factor 2')
trackwomen.fa$scores[,1]
trackwomen.fa$r.scores
## create the correlation matrix
library(psych)
R <- cor(trackwomen[2:ncol(trackwomen)])
(trackwomen.fa = principal(R, nfactors = 2, rotate = 'none'))
?principal
(trackwomen.fa = principal(R, nfactors = 2))
## create the correlation matrix
library(psych)
R <- cor(trackwomen[2:ncol(trackwomen)])
(trackwomen.fa = principal(R, nfactors = 2))
## create the correlation matrix
library(psych)
R <- cor(trackwomen[2:ncol(trackwomen)])
(trackwomen.fa = principal(R, nfactors = 2, rotate = 'none'))
(trackwomen.fa = principal(R, nfactors = 2, rotate = 'none',scores = T))
## create the correlation matrix
library(psych)
R <- cor(trackwomen[2:ncol(trackwomen)])
(trackwomen.fa = principal(R, nfactors = 2, rotate = 'none',scores = TRUE))
trackwomen.fa$scores[,1]
plot(trackwomen.fa$scores[,1],
trackwomen.fa$scores[,2], xlab = "Factor 1", ylab = 'Factor 2')
## read the table
trackwomen <- read.table("TrackWomen.dat", header = TRUE,sep = "\t")
head(trackwomen)
## create the correlation matrix
library(psych)
R <- cor(trackwomen[2:ncol(trackwomen)])
(trackwomen.fa = principal(R, nfactors = 2, rotate = 'none',scores = TRUE))
plot(trackwomen.fa$scores[,1],
trackwomen.fa$scores[,2], xlab = "Factor 1", ylab = 'Factor 2')
R <- cor(trackwomen[2:ncol(trackwomen)])
(trackwomen.fa.var = principal(R, nfactors = 2, rotate = 'varimax',scores = TRUE))
R <- cor(trackwomen[2:ncol(trackwomen)])
(trackwomen.fa.var = principal(R, nfactors = 2, rotate = 'varimax',scores = TRUE))
(trackwomen.fa.mle = factanal(R, factors = 3, rotation = "none"))
c <- cov(trackwomen[2:ncol(trackwomen)])
c
(trackwomen.fa.mle = factanal(c, factors = 3, rotation = "none"))
c <- cov(trackwomen[2:ncol(trackwomen)])
(trackwomen.fa.mle = factanal(c, factors = 3, rotation = "none"))
(trackwomen.fa.var = principal(R, nfactors = 2, rotate = 'varimax',scores = TRUE))
(trackwomen.fa.var = principal(c, nfactors = 2, rotate = 'varimax',scores = TRUE))
setwd("~/Desktop/yi/professional_study/courses/Multivariate Analysis I/class/week11")
# Read the stock dataset from Table 8.4
stocks = as.matrix(read.table("T8-4.DAT"))
colnames(stocks) = c("JPM", "C", "WFC", "RDS", "XOM")
library(psych)
# The principal function performs factor analysis with the principal component method:
(stocks.fa = principal(stocks, nfactors = 2, rotate = 'none'))
## read the table
trackwomen <- read.table("TrackWomen.dat", header = TRUE,sep = "\t")
head(trackwomen)
## create the correlation matrix
library(psych)
R <- cor(trackwomen[2:ncol(trackwomen)])
(trackwomen.fa = principal(R, nfactors = 2, rotate = 'none',scores = TRUE))
(trackwomen.fa = principal(R, nfactors = 2, rotate = 'none',scores = TRUE))
stocks.fa$residual
stocks.fa$uniquenesses
?principal
## create the correlation matrix
library(psych)
(trackwomen.fa = principal(trackwomen[2:ncol(trackwomen)],
nfactors = 2,
rotate = 'none',
scores = TRUE,
covar = FALSE))
plot(trackwomen.fa$scores[,1],
trackwomen.fa$scores[,2], xlab = "Factor 1", ylab = 'Factor 2')
plot(trackwomen.fa$scores, xlab = "Factor 1", ylab = 'Factor 2')
plot(trackwomen.fa$scores, xlab = "Factor 1", ylab = 'Factor 2')
text(trackwomen.fa$scores,labels = rownames(trackwomen))
plot(trackwomen.fa$scores, xlab = "Factor 1", ylab = 'Factor 2')
text(trackwomen.fa$scores+0.5,labels = rownames(trackwomen))
text(trackwomen.fa$scores,labels = rownames(trackwomen))
plot(trackwomen.fa$scores, xlab = "Factor 1", ylab = 'Factor 2')
text(trackwomen.fa$scores,labels = rownames(trackwomen))
plot(trackwomen.fa$scores, xlab = "Factor 1", ylab = 'Factor 2')
text(trackwomen.fa$scores,labels = trackwomen$Country)
plot(trackwomen.fa$scores, xlab = "Factor 1", ylab = 'Factor 2',type = 'n')
text(trackwomen.fa$scores,labels = trackwomen$Country,cex=.7)
(trackwomen.fa.var = principal(R, nfactors = 2, rotate = 'varimax',scores = TRUE,covar = FALSE))
plot(trackwomen.fa$scores, xlab = "Factor 1", ylab = 'Factor 2',type = 'n')
text(trackwomen.fa$scores,labels = trackwomen$Country,cex=.7)
(trackwomen.fa.var = principal(trackwomen[2:ncol(trackwomen)], nfactors = 2, rotate = 'varimax',scores = TRUE,covar = FALSE))
(trackwomen.fa.mle = factanal(trackwomen[2:ncol(trackwomen)], factors = 3, rotation = "none"))
trackwomen.fa.mle$loadings
trackwomen.fa.mle = factanal(trackwomen[2:ncol(trackwomen)], factors = 3, rotation = "varimax")
trackwomen.fa.mle$loadings
trackwomen.fa.mle = factanal(trackwomen[2:ncol(trackwomen)], factors = 3, rotation = "none")
trackwomen.fa.mle
?factanal
trackwoman$X100m <- 100/trackwoman$X100m
trackwomen$X100m <- 100/trackwomen$X100m
trackwomen$X200m <- 200/trackwomen$X200m
trackwomen$X400m <- 400/trackwomen$X400m
trackwomen$X1500m <- 1500/(trackwomen$X1500m*60)
trackwomen$X3000m <- 3000/(trackwomen$X3000m*60)
trackwomen$Marathon <- 42195/(trackwomen$Marathon*60)
trackwomen.fa.mle = factanal(cor(trackwomen[2:ncol(trackwomen)]), factors = 3, rotation = "none")
trackwomen.fa.mle = factanal(cov(trackwomen[2:ncol(trackwomen)]), factors = 3, rotation = "none")
trackwomen.fa.mle = factanal(trackwomen[2:ncol(trackwomen)], factors = 3, rotation = "none")
trackwomen.fa.mle$loadings
trackwomen$X100m <- 100/trackwomen$X100m
trackwomen$X200m <- 200/trackwomen$X200m
trackwomen$X400m <- 400/trackwomen$X400m
trackwomen$X800m <- 800/(trackwomen$X800m*60)
trackwomen$X1500m <- 1500/(trackwomen$X1500m*60)
trackwomen$X3000m <- 3000/(trackwomen$X3000m*60)
trackwomen$Marathon <- 42195/(trackwomen$Marathon*60)
## repeat the d
trackwomen.fa.mle = factanal(trackwomen[2:ncol(trackwomen)], factors = 3, rotation = "none")
trackwomen.fa.mle$loadings
## repeat the e
trackwomen.fa.mle = factanal(trackwomen[2:ncol(trackwomen)], factors = 3, rotation = "varimax")
trackwomen.fa.mle$loadings
text(trackwomen.fa$scores,labels = trackwomen$Country,cex=.7)
plot(trackwomen.fa$scores, xlab = "Factor 1", ylab = 'Factor 2',type = 'n')
text(trackwomen.fa$scores,labels = trackwomen$Country,cex=.7)
abline(h = 0, v = 0)
trackwomen.fa.mle = factanal(covmat = cor(trackwomen[2:ncol(trackwomen)]),
factors = 3,
rotation = "none")
trackwomen.fa.mle$loadings
trackwomen.fa.mle = factanal(covmat = cor(trackwomen[2:ncol(trackwomen)]),
factors = 3,
rotation = "none")
trackwomen.fa.mle
trackwomen.fa.mle = factanal(covmat = cor(trackwomen[2:ncol(trackwomen)]),
factors = 3,
rotation = "varimax")
trackwomen.fa.mle$loadings
trackwomen$X100m <- 100/trackwomen$X100m
trackwomen$X200m <- 200/trackwomen$X200m
trackwomen$X400m <- 400/trackwomen$X400m
trackwomen$X800m <- 800/(trackwomen$X800m*60)
trackwomen$X1500m <- 1500/(trackwomen$X1500m*60)
trackwomen$X3000m <- 3000/(trackwomen$X3000m*60)
trackwomen$Marathon <- 42195/(trackwomen$Marathon*60)
## repeat the d
trackwomen.fa.mle = factanal(covmat = cov(trackwomen[2:ncol(trackwomen)]),
factors = 3,
rotation = "none")
trackwomen.fa.mle$loadings
## repeat the e
trackwomen.fa.mle = factanal(covmat = cov(trackwomen[2:ncol(trackwomen)]),
factors = 3,
rotation = "varimax")
trackwomen.fa.mle$loadings
## create the correlation matrix
library(psych)
(trackwomen.fa = principal(trackwomen[2:ncol(trackwomen)],
nfactors = 2,
rotate = 'none',
scores = TRUE,
covar = FALSE))
trackwomen.fa.mle
trackwomen.fa.mle
trackwomen$X100m <- 100/trackwomen$X100m
trackwomen$X200m <- 200/trackwomen$X200m
trackwomen$X400m <- 400/trackwomen$X400m
trackwomen$X800m <- 800/(trackwomen$X800m*60)
trackwomen$X1500m <- 1500/(trackwomen$X1500m*60)
trackwomen$X3000m <- 3000/(trackwomen$X3000m*60)
trackwomen$Marathon <- 42195/(trackwomen$Marathon*60)
## repeat the d
(trackwomen.fa.mle = factanal(covmat = cov(trackwomen[2:ncol(trackwomen)]),
factors = 3,
rotation = "none"))
## repeat the e
(trackwomen.fa.mle = factanal(covmat = cov(trackwomen[2:ncol(trackwomen)]),
factors = 3,
rotation = "varimax"))
## read the table
trackwomen <- read.table("TrackWomen.dat", header = TRUE,sep = "\t")
head(trackwomen)
## create the correlation matrix
library(psych)
(trackwomen.fa = principal(trackwomen[2:ncol(trackwomen)],
nfactors = 2,
rotate = 'none',
scores = TRUE,
covar = FALSE))
plot(trackwomen.fa$scores, xlab = "Factor 1", ylab = 'Factor 2',type = 'n')
text(trackwomen.fa$scores,labels = trackwomen$Country,cex=.7)
abline(h = 0, v = 0)
(trackwomen.fa.var = principal(trackwomen[2:ncol(trackwomen)], nfactors = 2, rotate = 'varimax',scores = TRUE,covar = FALSE))
trackwomen.fa.mle = factanal(covmat = cor(trackwomen[2:ncol(trackwomen)]),
factors = 3,
rotation = "none")
trackwomen.fa.mle$loadings
trackwomen.fa.mle = factanal(covmat = cor(trackwomen[2:ncol(trackwomen)]),
factors = 3,
rotation = "varimax")
trackwomen.fa.mle$loadings
trackwomen.fa.mle = factanal(covmat = cor(trackwomen[2:ncol(trackwomen)]),
factors = 3,
rotation = "varimax")
trackwomen.fa.mle$loadings
trackwomen.fa.mle = factanal(covmat = cor(trackwomen[2:ncol(trackwomen)]),
factors = 3,
rotation = "none")
trackwomen.fa.mle
trackwomen$X100m <- 100/trackwomen$X100m
trackwomen$X200m <- 200/trackwomen$X200m
trackwomen$X400m <- 400/trackwomen$X400m
trackwomen$X800m <- 800/(trackwomen$X800m*60)
trackwomen$X1500m <- 1500/(trackwomen$X1500m*60)
trackwomen$X3000m <- 3000/(trackwomen$X3000m*60)
trackwomen$Marathon <- 42195/(trackwomen$Marathon*60)
## repeat the d
(trackwomen.fa.mle = factanal(covmat = cov(trackwomen[2:ncol(trackwomen)]),
factors = 3,
rotation = "none"))
## repeat the e
(trackwomen.fa.mle = factanal(covmat = cov(trackwomen[2:ncol(trackwomen)]),
factors = 3,
rotation = "varimax"))
