# Exercise:
# Read datasaet from T10_1_CHEM.DAT
d <- as.matrix(read.table("T10_1_CHEM.DAT")
# Exercise:
# Read datasaet from T10_1_CHEM.DAT
d <- as.matrix(read.table("T10_1_CHEM.DAT"))
# Exercise:
# Read datasaet from T10_1_CHEM.DAT
d <- as.matrix(read.table("T10_1_CHEM.DAT"))
View(d)
colnames(d) = c("Number", "Unchanged", "Converted", "Unwanted", "Temperature", "Concentration", "Time")
d
# X1 varaibles "Temperature", "Concentration", "Time" with interaction effects and quadratic terms
X1 <- cbind(d[, 5:7], d[,5]*d[,6], d[,5]*d[,7], d[,6]*d[,7], d[, 5:7]^2)
colnames(X1) = c("Temperature", "Concentration", "Time", "Temp.Conc", "Temp.Time", "Conc.Time", "Temp.Sq", "Conc.Sq", "Time.Sq")
X1
# X2 variables "Unchanged", "Converted", "Unwanted"
X2 <- d[, 2:4]
X2
?cc
??cc
# a) All correlations
cor(X1,X2)
# b)
cc(X1, X2)$cor
# Exercise:
# Read datasaet from T10_1_CHEM.DAT
library(CCA)
# Exercise:
# Read datasaet from T10_1_CHEM.DAT
require(CCA)
install.packages("CCA")
# Exercise:
# Read datasaet from T10_1_CHEM.DAT
require(CCA)
# a) All correlations
cor(X1,X2)
# b)
cc(X1, X2)$cor
cc(X1, X2)
# b)
cc(X1, X2)$cor
head(X1)
# data
(d = read.csv("16-CanonicalCorrelation.csv"))
install.packages(c("CCA", "ppcor"))
install.packages(c("CCA", "ppcor"))
# data
(d = read.csv("16-CanonicalCorrelation.csv"))
# data
(d = read.csv("16-CanonicalCorrelation.csv"))
# Sample covariance matrix:
(S = cov(d))
# Correlation matrixL
(R = cor(d))
# Test statistic:
n = nrow(d)
(t.test = R[1,3] * sqrt((n-2)/(1-R[1,3]^2)))
# p-value:
2*(1 - pt(t.test, n-2))
# Let's test if cor(Relaxation, Reading) = 0.1
rho0 = 0.1
(z.test = (0.5*log((1 + R[1,3])/(1 - R[1,3]) - 0.5*log((1 + rho0)/(1 - rho0))))/sqrt(1/(n-3)))
# p-value:
2*(1 - pnorm(abs(z.test)))
# Given
ind1 = c(2)
# Correlation
ind2 = c(1, 3)
(S2.1 = S[ind2, ind2] - S[ind2, ind1] %*% solve(S[ind1, ind1]) %*% S[ind1, ind2])
S
S[ind2, ind2]
S[ind2, ind1]
D = diag(sqrt(diag(S2.1)))
D
DInv = solve(D)
(R2.1 = DInv %*% S2.1 %*% DInv)
# With package ppcor
library(ppcor)
# all partial correlations
pcor(d)
d
d[,1:3]
# Partial between Reading and Relaxation given Motivation
pcor(d[,1:3])
# Multiple correlation between Reading and (Relaxation, Motivation)
# Manual calculation:
# Given
ind1 = c(1,2)
# Correlation
ind2 = c(3)
(r3.12 = sqrt( S[ind2, ind1] %*% solve(S[ind1, ind1]) %*% S[ind1, ind2] / S[ind2, ind2]))
# With lm function:
sqrt(summary(lm(Reading ~ Relaxation + Motivation, data = d))$r.squared)
# F-statistic:
p = 2
((n-p-1)/p * r3.12^2/(1-r3.12^2))
# Or
summary(lm(Reading ~ Relaxation + Motivation, data = d))$fstatistic
## CCA
# X1
ind1 = c(1,2)
# X2
ind2 = c(3:5)
(b.mat = solve(S[ind2, ind2]) %*% S[ind2, ind1] %*% solve(S[ind1, ind1]) %*% S[ind1, ind2])
sqrt(round(eigen(b.mat)$values, 5))
eigen(b.mat)$vectors
(correl = matcor(d[,1:2], d[,3:5]))
# Built-in function
library(CCA)
(correl = matcor(d[,1:2], d[,3:5]))
img.matcor(correl, type = 2)
# Exercise:
# Read datasaet from T10_1_CHEM.DAT
d <- as.matrix(read.table("T10_1_CHEM.DAT"))
colnames(d) = c("Number", "Unchanged", "Converted", "Unwanted", "Temperature", "Concentration", "Time")
# X1 varaibles "Temperature", "Concentration", "Time" with interaction effects and quadratic terms
X1 <- cbind(d[, 5:7], d[,5]*d[,6], d[,5]*d[,7], d[,6]*d[,7], d[, 5:7]^2)
colnames(X1) = c("Temperature", "Concentration", "Time", "Temp.Conc", "Temp.Time", "Conc.Time", "Temp.Sq", "Conc.Sq", "Time.Sq")
X1
# X2 variables "Unchanged", "Converted", "Unwanted"
X2 <- d[, 2:4]
# b) Find the canonical correlations
