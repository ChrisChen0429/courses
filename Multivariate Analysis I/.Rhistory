main = "Wine Data for the first 4 attributes -- 3 types",
pch = 21,
bg = c("#1b9e77", "#d95f02", "#7570b3"))
pairs(wine[6:10],
main = "Wine Data for the middle 5 attributes -- 3 types",
pch = 21,
bg = c("#1b9e77", "#d95f02", "#7570b3"))
pairs(wine[7:14],
main = "Wine Data for the middle 5 attributes -- 3 types",
pch = 21,
bg = c("#1b9e77", "#d95f02", "#7570b3"))
pairs(wine[11:14],
main = "Wine Data for the middle 5 attributes -- 3 types",
pch = 21,
bg = c("#1b9e77", "#d95f02", "#7570b3"))
library(car)
library(ggplot2)
pairs(wine[2:5],
main = "Wine Data for the first 4 attributes -- 3 types",
pch = 21,
bg = c("#1b9e77", "#d95f02", "#7570b3"))
pairs(wine[6:10],
main = "Wine Data for the middle 5 attributes -- 3 types",
pch = 21,
bg = c("#1b9e77", "#d95f02", "#7570b3"))
pairs(wine[6:10],
main = "Wine Data for the middle 5 attributes -- 3 types",
pch = 21,
bg = c("#1b9e77", "#d95f02", "#7570b3"))
pairs(wine[11:14],
main = "Wine Data for the last 4 attributes -- 3 types",
pch = 21,
bg = c("#1b9e77", "#d95f02", "#7570b3"))
ggpairs(wine[2:6])
install.packages('GGally')
library(GGally)
install.packages('GGally')
library(GGally)
library(GGally)
ggpairs(wine[2:6])
ggpairs(wine[11:14])
library(GGally)
ggpairs(wine[2:5])
ggpairs(wine[6:10])
ggpairs(wine[11:14])
plot(wine$Alcohol, wine$`Malic acid`)
text(wine$Alcohol, wine$`Malic acid`, wine$type, cex=0.7, pos=4, col="red")
pairs(wine[2:5],
main = "Wine Data for the first 4 attributes -- 3 types",
pch = 21,
bg = c("#1b9e77", "#d95f02", "#7570b3")
[unclass(wine$type)])
library(car)
library(ggplot2)
pairs(wine[2:5],
main = "Wine Data for the first 4 attributes -- 3 types",
pch = 21,
bg = c("#1b9e77", "#d95f02", "#7570b3")
[unclass(wine$type)])
pairs(wine[6:10],
main = "Wine Data for the middle 5 attributes -- 3 types",
pch = 21,
bg = c("#1b9e77", "#d95f02", "#7570b3")
[unclass(wine$type)])
pairs(wine[11:14],
main = "Wine Data for the last 4 attributes -- 3 types",
pch = 21,
bg = c("#1b9e77", "#d95f02", "#7570b3")
[unclass(wine$type)])
round(sapply(wine[2:14], mean),2)
round(sapply(wine[2:14], sd),2)
printMeanAndSdByGroup <- function(variables,groupvariable)
{
# find the names of the variables
variablenames <- c(names(groupvariable),names(as.data.frame(variables)))
# within each group, find the mean of each variable
groupvariable <- groupvariable[,1] # ensures groupvariable is not a list
means <- aggregate(as.matrix(variables) ~ groupvariable, FUN = mean)
names(means) <- variablenames
print(paste("Means:"))
print(means)
# within each group, find the standard deviation of each variable:
sds <- aggregate(as.matrix(variables) ~ groupvariable, FUN = sd)
names(sds) <- variablenames
print(paste("Standard deviations:"))
print(sds)
}
printMeanAndSdByGroup(wine[2:14],wine[1])
WithinGroupsVariance <- function(variable,groupvariable){
n_total <- length(variable)
n_group <- length(unique(groupvariable))
total_variance <- 0
for (g in 1:n_group){
group_data <- variable[groupvariable==g]
group_mean <- mean(group_data)
for (i in group_data){
total_variance <- total_variance + (i - group_mean)^2
}
}
return(total_variance/(n_total-n_group))
}
WithinGroupsVariance(wine$Alcohol,wine$type)
wine$type <- factor(wine$type)
summary(wine)
round(sapply(wine[2:14], mean),2)
round(sapply(wine[2:14], sd),2)
round(lapply(wine[2:14], sd),2)
wine[2:14]
round(apply(wine[2:14],MARGIN = 2, sd),2)
printMeanAndSdByGroup <- function(variables,groupvariable)
{
# find the names of the variables
variablenames <- c(names(groupvariable),names(as.data.frame(variables)))
# within each group, find the mean of each variable
groupvariable <- groupvariable[,1] # ensures groupvariable is not a list
means <- aggregate(as.matrix(variables) ~ groupvariable, FUN = mean)
names(means) <- variablenames
print(paste("Means:"))
print(means)
# within each group, find the standard deviation of each variable:
sds <- aggregate(as.matrix(variables) ~ groupvariable, FUN = sd)
names(sds) <- variablenames
print(paste("Standard deviations:"))
print(sds)
}
printMeanAndSdByGroup(wine[2:14],wine[1])
printMeanAndSdByGroup <- function(variables,groupvariable)
{
# find the names of the variables
variablenames <- c(names(groupvariable),names(as.data.frame(variables)))
# within each group, find the mean of each variable
groupvariable <- groupvariable[,1] # ensures groupvariable is not a list
means <- aggregate(as.matrix(variables) ~ groupvariable, FUN = mean)
names(means) <- variablenames
print(paste("Means:"))
print(round(means,2))
# within each group, find the standard deviation of each variable:
sds <- aggregate(as.matrix(variables) ~ groupvariable, FUN = sd)
names(sds) <- variablenames
print(paste("Standard deviations:"))
print(round(sds,2))
}
printMeanAndSdByGroup(wine[2:14],wine[1])
source('~/.active-rstudio-document', echo=TRUE)
Secondly, we may also interested in explore the difference of mean and standard deviation across different groups.
```{r}
printMeanAndSdByGroup <- function(variables,groupvariable)
{
# find the names of the variables
variablenames <- c(names(groupvariable),names(as.data.frame(variables)))
# within each group, find the mean of each variable
groupvariable <- groupvariable[,1] # ensures groupvariable is not a list
means <- aggregate(as.matrix(variables) ~ groupvariable, FUN = mean)
names(means) <- variablenames
print(paste("Means:"))
print(means)
# within each group, find the standard deviation of each variable:
sds <- aggregate(as.matrix(variables) ~ groupvariable, FUN = sd)
names(sds) <- variablenames
print(paste("Standard deviations:"))
print(sds)
}
printMeanAndSdByGroup(wine[2:14],wine[1])
print(round(means,2))
printMeanAndSdByGroup <- function(variables,groupvariable)
{
# find the names of the variables
variablenames <- c(names(groupvariable),names(as.data.frame(variables)))
# within each group, find the mean of each variable
groupvariable <- groupvariable[,1] # ensures groupvariable is not a list
means <- aggregate(as.matrix(variables) ~ groupvariable, FUN = mean)
names(means) <- variablenames
print(paste("Means:"))
print(round(means,2))
# within each group, find the standard deviation of each variable:
sds <- aggregate(as.matrix(variables) ~ groupvariable, FUN = sd)
names(sds) <- variablenames
print(paste("Standard deviations:"))
print(sds)
}
printMeanAndSdByGroup(wine[2:14],wine[1])
printMeanAndSdByGroup <- function(variables,groupvariable)
{
# find the names of the variables
variablenames <- c(names(groupvariable),names(as.data.frame(variables)))
# within each group, find the mean of each variable
groupvariable <- groupvariable[,1] # ensures groupvariable is not a list
means <- aggregate(as.matrix(variables) ~ groupvariable, FUN = mean)
names(means) <- variablenames
print(paste("Means:"))
print(means,2)
# within each group, find the standard deviation of each variable:
sds <- aggregate(as.matrix(variables) ~ groupvariable, FUN = sd)
names(sds) <- variablenames
print(paste("Standard deviations:"))
print(sds)
}
printMeanAndSdByGroup(wine[2:14],wine[1])
printMeanAndSdByGroup <- function(variables,groupvariable)
{
# find the names of the variables
variablenames <- c(names(groupvariable),names(as.data.frame(variables)))
# within each group, find the mean of each variable
groupvariable <- groupvariable[,1] # ensures groupvariable is not a list
means <- aggregate(as.matrix(variables) ~ groupvariable, FUN = mean)
names(means) <- variablenames
print(paste("Means:"))
print(means,2)
# within each group, find the standard deviation of each variable:
sds <- aggregate(as.matrix(variables) ~ groupvariable, FUN = sd)
names(sds) <- variablenames
print(paste("Standard deviations:"))
print(sds)
}
printMeanAndSdByGroup(scale(wine[2:14]),wine[1])
printMeanAndSdByGroup <- function(variables,groupvariable)
{
# find the names of the variables
variablenames <- c(names(groupvariable),names(as.data.frame(variables)))
# within each group, find the mean of each variable
groupvariable <- groupvariable[,1] # ensures groupvariable is not a list
means <- aggregate(as.matrix(variables) ~ groupvariable, FUN = mean)
names(means) <- variablenames
print(means,2)
}
printMeanAndSdByGroup(scale(wine[2:14]),wine[1])
scale(wine[2:14])
printMeanAndSdByGroup <- function(variables,groupvariable)
{
# find the names of the variables
variablenames <- c(names(groupvariable),names(as.data.frame(variables)))
# within each group, find the mean of each variable
groupvariable <- groupvariable[,1] # ensures groupvariable is not a list
means <- aggregate(as.matrix(variables) ~ groupvariable, FUN = mean)
names(means) <- variablenames
print(means,2)
}
printMeanAndSdByGroup(scale(wine[2:14]),wine[1])
variable <- scale(wine[2:14])
groupvariable <- wine[1]
# find the names of the variables
variablenames <- c(names(groupvariable),names(as.data.frame(variables)))
# find the names of the variables
variablenames <- c(names(groupvariable),names(as.data.frame(variables)))
variables <- scale(wine[2:14])
variablenames <- c(names(groupvariable),names(as.data.frame(variables)))
groupvariable <- groupvariable[,1] # ensures groupvariable is not a list
means <- aggregate(as.matrix(variables) ~ groupvariable, FUN = mean)
mean()
means
names(means) <- variablenames
means
class(means)
printz_scoreByGroup <- function(variables,groupvariable)
{
# find the names of the variables
variablenames <- c(names(groupvariable),names(as.data.frame(variables)))
# within each group, find the mean of each variable
groupvariable <- groupvariable[,1] # ensures groupvariable is not a list
means <- aggregate(as.matrix(variables) ~ groupvariable, FUN = mean)
means$type <- as.numeric(means$type)
print(round(means,2))
}
printz_scoreByGroup(scale(wine[2:14]),wine[1])
means$type <- as.numeric(means$type)
print(round(means,2))
printz_scoreByGroup <- function(variables,groupvariable)
{
# find the names of the variables
variablenames <- c(names(groupvariable),names(as.data.frame(variables)))
# within each group, find the mean of each variable
groupvariable <- groupvariable[,1] # ensures groupvariable is not a list
means <- aggregate(as.matrix(variables) ~ groupvariable, FUN = mean)
means$type <- as.numeric(means$type)
print(round(means,2))
}
printz_scoreByGroup(scale(wine[2:14]),wine[1])
printz_scoreByGroup <- function(variables,groupvariable)
{
# find the names of the variables
variablenames <- c(names(groupvariable),names(as.data.frame(variables)))
# within each group, find the mean of each variable
groupvariable <- groupvariable[,1] # ensures groupvariable is not a list
means <- aggregate(as.matrix(variables) ~ groupvariable, FUN = mean)
means$type <- as.numeric(means$type)
print(round(means,2))
}
printz_scoreByGroup(scale(wine[2:14]),wine[1])
# find the names of the variables
variablenames <- c(names(groupvariable),names(as.data.frame(variables)))
# within each group, find the mean of each variable
groupvariable <- groupvariable[,1] # ensures groupvariable is not a list
groupvariable
printz_scoreByGroup <- function(variables,groupvariable)
{
# find the names of the variables
variablenames <- c(names(groupvariable),names(as.data.frame(variables)))
# within each group, find the mean of each variable
groupvariable <- groupvariable
means <- aggregate(as.matrix(variables) ~ groupvariable, FUN = mean)
means$type <- as.numeric(means$type)
print(round(means,2))
}
printz_scoreByGroup(scale(wine[2:14]),wine[1])
# find the names of the variables
variablenames <- c(names(groupvariable),names(as.data.frame(variables)))
# within each group, find the mean of each variable
groupvariable <- groupvariable
means <- aggregate(as.matrix(variables) ~ groupvariable, FUN = mean)
means$type <- as.numeric(means$type)
means
printz_scoreByGroup <- function(variables,groupvariable)
{
# find the names of the variables
variablenames <- c(names(groupvariable),names(as.data.frame(variables)))
# within each group, find the mean of each variable
groupvariable <- groupvariable
means <- aggregate(as.matrix(variables) ~ groupvariable, FUN = mean)
means$groupvariable <- as.numeric(means$groupvariable)
print(round(means,2))
}
printz_scoreByGroup(scale(wine[2:14]),wine[1])
# find the names of the variables
variablenames <- c(names(groupvariable),names(as.data.frame(variables)))
# within each group, find the mean of each variable
groupvariable <- groupvariable
means <- aggregate(as.matrix(variables) ~ groupvariable, FUN = mean)
means$groupvariable <- as.numeric(means$groupvariable)
print(round(means,2))
printz_scoreByGroup <- function(variables,groupvariable)
{
# find the names of the variables
variablenames <- c(names(groupvariable),names(as.data.frame(variables)))
# within each group, find the mean of each variable
groupvariable <- as.factor(groupvariable)
means <- aggregate(as.matrix(variables) ~ groupvariable, FUN = mean)
means$groupvariable <- as.numeric(means$groupvariable)
print(round(means,2))
}
printz_scoreByGroup(scale(wine[2:14]),wine[1])
printz_scoreByGroup <- function(variables,groupvariable){
groupvariable <- as.factor(groupvariable)
means <- aggregate(as.matrix(variables) ~ groupvariable, FUN = mean)
means$groupvariable <- as.numeric(means$groupvariable)
print(round(means,2))
}
printz_scoreByGroup(scale(wine[2:14]),wine[1])
variables <- scale(wine[2:14])
groupvariable <- wine[1]
groupvariable <- as.factor(groupvariable)
means <- aggregate(as.matrix(variables) ~ groupvariable, FUN = mean)
as.matrix(variables)
means <- aggregate(as.matrix(variables) ~ groupvariable, FUN = mean)
length(groupvariable)
groupvariable
printz_scoreByGroup <- function(variables,groupvariable){
#groupvariable <- as.factor(groupvariable)
means <- aggregate(as.matrix(variables) ~ groupvariable, FUN = mean)
means$groupvariable <- as.numeric(means$groupvariable)
print(round(means,2))
}
printz_scoreByGroup(scale(wine[2:14]),wine[1])
groupvariable
groupvariable <- wine$type
printz_scoreByGroup <- function(variables,groupvariable){
#groupvariable <- as.factor(groupvariable)
means <- aggregate(as.matrix(variables) ~ groupvariable, FUN = mean)
means$groupvariable <- as.numeric(means$groupvariable)
print(round(means,2))
}
printz_scoreByGroup(scale(wine[2:14]),wine$type)
WithinGroupsVariance <- function(variable,groupvariable){
n_total <- length(variable)
n_group <- length(unique(groupvariable))
total_variance <- 0
for (g in 1:n_group){
group_data <- variable[groupvariable==g]
group_mean <- mean(group_data)
for (i in group_data){
total_variance <- total_variance + (i - group_mean)^2
}
}
return(total_variance/(n_total-n_group))
}
WithinGroupsVariance(wine$Alcohol,wine$type)
BetweenGroupsVariance <- function(variable,groupvariable){
n_group <- length(unique(groupvariable))
grand_mean <- mean(variable)
total_variance <- 0
for (g in 1:n_group){
group_data <- variable[groupvariable==g]
group_mean <- mean(group_data)
ng <- length(group_data)
total_variance <- total_variance + ng*(group_mean - grand_mean)^2
}
return(total_variance/(n_group-1))
}
BetweenGroupsVariance(wine$Alcohol,wine$type)
for (i in 2:14){
between <- BetweenGroupsVariance(wine[,i],wine$type)
within <- WithinGroupsVariance(wine[,i],wine$type)
variablename <- colnames(wine)[i]
sep <- between / within
print(paste("variable",variablename,",Wv=",within,",Bv=",between,",Sep=",sep))
}
library(car)
library(ggplot2)
pairs(wine[2:5],
main = "Wine Data for the first 4 attributes -- 3 types",
pch = 21,
bg = c("#1b9e77", "#d95f02", "#7570b3")
[unclass(wine$type)])
pairs(wine[6:10],
main = "Wine Data for the middle 5 attributes -- 3 types",
pch = 21,
bg = c("#1b9e77", "#d95f02", "#7570b3")
[unclass(wine$type)])
pairs(wine[11:14],
main = "Wine Data for the last 4 attributes -- 3 types",
pch = 21,
bg = c("#1b9e77", "#d95f02", "#7570b3")
[unclass(wine$type)])
library(GGally)
ggpairs(wine[2:5])
ggpairs(wine[6:10])
ggpairs(wine[11:14])
scale_imput <-scale(wine[,2:14])
wine.pca <- prcomp(scale_imput)
summary(wine.pca)
screeplot(wine.pca, type="lines")
cumsum((wine.pca$sdev)^2)/sum((wine.pca$sdev)^2)
(wine.pca$sdev)^2
round(wine.pca$rotation[,1],2)
plot(wine.pca$x[,1],wine.pca$x[,2]) # make a scatterplot
text(wine.pca$x[,1],wine.pca$x[,2], wine$type, cex=0.7, pos=4, col="red")
plot_data <- data.frame('PC1'=wine.pca$x[,1],'PC2'=wine.pca$x[,2],type=wine$type)
ggplot(plot_data,aes(x=PC1,y=PC2)) +
geom_point(aes(col=type))
plot_data <- data.frame('PC1'=wine.pca$x[,1],'PC2'=wine.pca$x[,2],type=wine$type)
ggplot(plot_data,aes(x=PC1,y=PC2)) +
geom_point(aes(col=type))
library(MASS)
wine.lda <- lda(x = wine.pca$x[,1:4], grouping = wine$type)
plot(wine.lda)
wine.lda$scaling
table(Predicted=predict(wine.lda)$class, Actual=wine$type)
wine.pred <- predict(wine.lda, wine.pca$x[,1:4])
ldahist(data = wine.pred$x[,1], g=wine$type)
ldahist(data = wine.pred$x[,2], g=wine$type)
library(MASS)
wine.lda <- lda(x = wine.pca$x[,1:4], grouping = wine$type)
plot(wine.lda)
plot_data <- data.frame('LD1'=wine.lda$scaling)
wine.lda$scaling
wine.lda$means
library(MASS)
wine.lda <- lda(x = wine.pca$x[,1:4], grouping = wine$type)
plot(wine.lda)
wine.lda$scaling
table(Predicted=predict(wine.lda)$class, Actual=wine$type)
1-5/178
wine.pred <- predict(wine.lda, wine.pca$x[,1:4])
ldahist(data = wine.pred$x[,1], g=wine$type)
ldahist(data = wine.pred$x[,2], g=wine$type)
wine.lda <- qda(x = wine.pca$x[,1:4], grouping = wine$type)
plot(wine.lda)
wine.qda <- qda(x = wine.pca$x[,1:4], grouping = wine$type)
plot(wine.lda)
wine.qda <- qda(x = wine.pca$x[,1:4], grouping = wine$type)
wine.qda
wine.lda <- lda(x = wine.pca$x[,1:4], grouping = wine$type)
plot(wine.lda)
wine.lda <- lda(x = wine.pca$x[,1:4], grouping = wine$type)
predict(wine.lda)
predict(wine.lda)$x
lda.plot.data <- cbind( predict(model)$x,wine$type)
lda.plot.data <- cbind(predict(model)$x,wine$type)
lda.plot.data <- cbind(predict(wine.lda)$x,wine$type)
ggplot(lda.plot.data, aes(LD1, LD2)) +
geom_point(aes(color = type))
lda.plot.data <- cbind(predict(wine.lda)$x,wine$type)
lda.plot.data
lda.plot.data <- as.data.frame(predict(wine.lda)$x)
wine.lda <- lda(x = wine.pca$x[,1:4], grouping = wine$type)
lda.plot.data <- as.data.frame(predict(wine.lda)$x)
lda.plot.data
lda.plot.data$type <- wine$type
ggplot(lda.plot.data, aes(LD1, LD2)) +
geom_point(aes(color = type))
table(Predicted=predict(wine.lda)$class, Actual=wine$type)
wine.pred <- predict(wine.lda, wine.pca$x[,1:4])
ldahist(data = wine.pred$x[,1], g=wine$type)
ldahist(data = wine.pred$x[,2], g=wine$type)
wine.qda <- qda(x = wine.pca$x[,1:4], grouping = wine$type)
qda.plot.data <- as.data.frame(predict(wine.qda)$x)
qda.plot.data$type <- wine$type
wine.qda <- qda(x = wine.pca$x[,1:4], grouping = wine$type)
qda.plot.data <- as.data.frame(predict(wine.qda)$x)
qda.plot.data
wine.qda
qda.plot.data <- as.data.frame(predict(wine.qda)$class)
qda.plot.data
predict(wine.qda)
wine.qda <- qda(x = wine.pca$x[,1:4], grouping = wine$type)
qda.plot.data <- as.data.frame(predict(wine.qda)$posterior)
qda.plot.data$type <- wine$type
ggplot(qda.plot.data, aes(LD1, LD2)) +
geom_point(aes(color = type))
qda.plot.data
wine.qda <- qda(x = wine.pca$x[,1:4], grouping = wine$type)
table(Predicted=predict(wine.qda)$class, Actual=wine$type)
1-2/178
