# Simulated data example
# Let's generate 3 groups from bivariate normal distribution:
library(MASS)
set.seed(439)
g1 = mvrnorm(n = 25, mu = c(10, 20), Sigma = matrix(c(6, -4, -4, 10), 2, 2))
plot(g1, pch = 19, col = "blue", xlim = c(0, 40), ylim = c(0, 30), xlab = "x", ylab = "y")
g2 = mvrnorm(n = 25, mu = c(20, 10), Sigma = matrix(c(6, -4, -4, 10), 2, 2))
points(g2, pch = 19)
g3 = mvrnorm(n = 25, mu = c(27, 20), Sigma = matrix(c(7, 4, 4, 12), 2, 2))
points(g3, pch = 19, col = "red")
# What the algorithm sees:
d = rbind(g1, g2, g3)
plot(d, pch = 19, col = "grey", cex = 0.9, xlab = "x", ylab = "y")
# Choose randomly 3 initial centers:
n = nrow(d)
(cen.ind = sample(1:n, 3))
(cen = d[cen.ind,])
points(cen, col =c ("black", "blue", "red"), pch = 2, cex = 1.5)
# Assign each observation to one of the 3 groups:
for (i in 1:n)
{
# New data with row i and centers:
d.cen = rbind(d[i,], cen)
# Distance to each center:
dist.cen = dist(d.cen)
# Convert to matrix so we can use only specific column:
dist.cen = as.matrix(dist.cen)
if (which.min(dist.cen[1, 2:4]) == 1) points(d[i,1], d[i,2], pch = 2)
if (which.min(dist.cen[1, 2:4]) == 2) points(d[i,1], d[i,2], pch = 2, col = "blue")
if (which.min(dist.cen[1, 2:4]) == 3) points(d[i,1], d[i,2], pch = 2, col = "red")
}
# Built-in function:
kmeans(d, cen)
# Iterations:
kmeans(d, cen)$iter
# Partitioning
kmeans(d, cen)$cluster
# Plot together the true groups with the clusters
par(mfrow = c(1, 2))
plot(d, pch = 19, col = "grey", cex = 0.9, xlab = "x", ylab = "y")
points(d[kmeans(d, cen)$cluster == 1,], pch = 2)
points(d[kmeans(d, cen)$cluster == 2,], pch = 2, col = "red")
points(d[kmeans(d, cen)$cluster == 3,], pch = 2, col = "blue")
# True groups:
plot(g1, pch = 19, col = "blue", xlim = c(0, 40), ylim = c(0, 30), xlab = "x", ylab = "y")
points(g2, pch = 19)
points(g3, pch = 19, col = "red")
par(mfrow = c(1, 1))
## Example with Table 15.7 from Rencher
# Load file T15_7_PROTEIN.dat
d = read.table(file.choose(), header = F)
setwd("~/Desktop/courses/Multivariate Analysis I/class/week15")
## Exercsise:
# Use the eurodist built-in dataset
eurodist
# a) Use cmdscale to obtain 2-dimensional MDS analysis.
# Plot the results with city names as labels.
(mds <- cmdscale(eurodist))
plot(mds[,1], (-1)*mds[,2])
text(mds[, 1], (-1)*mds[, 2], labels = rownames(mds), cex = 0.6, pos = 1)
dist(mds)
# b) Use isoMDS with k = 1, 2 and 3
isoMDS(eurodist, k = 1)
# b) Use isoMDS with k = 1, 2 and 3
isoMDS(eurodist, k = 1)
## Exercsise:
# Use the eurodist built-in dataset
library(MASS)
# b) Use isoMDS with k = 1, 2 and 3
isoMDS(eurodist, k = 1)
isoMDS(eurodist, k = 2)
isoMDS(eurodist, k = 3)
setwd("~/Desktop/courses/Multivariate Analysis I/hw/homework10")
## Homework 10
knitr::opts_chunk$set(echo = TRUE)
trackwomen <- read.table("TrackWomen.dat", header = TRUE,sep = "\t")
head(trackwomen)
# convert the data into the same scale
trackwomen$X100m <- 100/trackwomen$X100m
trackwomen$X200m <- 200/trackwomen$X200m
trackwomen$X400m <- 400/trackwomen$X400m
trackwomen$X800m <- 800/(trackwomen$X800m*60)
trackwomen$X1500m <- 1500/(trackwomen$X1500m*60)
trackwomen$X3000m <- 3000/(trackwomen$X3000m*60)
trackwomen$Marathon <- 42195/(trackwomen$Marathon*60)
## read the data
trackwomen <- read.table("TrackWomen.dat", header = TRUE,sep = "\t")
# convert the data into the same scale
trackwomen$X100m <- 100/trackwomen$X100m
trackwomen$X200m <- 200/trackwomen$X200m
trackwomen$X400m <- 400/trackwomen$X400m
trackwomen$X800m <- 800/(trackwomen$X800m*60)
trackwomen$X1500m <- 1500/(trackwomen$X1500m*60)
trackwomen$X3000m <- 3000/(trackwomen$X3000m*60)
trackwomen$Marathon <- 42195/(trackwomen$Marathon*60)
head(trackwomen)
trackwomen_distance <- dist(trackwomen[,2:8], method = "manhattan")
library(MASS)
library(MASS)
trackwomen_distance <- dist(trackwomen[,2:8], method = "manhattan")
av.clust = hclust(trackwomen_distance, method = "average")
plot(av.clust, labels = trackwomen$Country)
?hclust
cen.clust = hclust(trackwomen_distance, method = "centroid")
plot(cen.clust, labels = trackwomen$Country)
?cutree
cutree(cen.clust,2)
cen.clust = hclust(trackwomen_distance, method = "centroid")
plot(cen.clust, labels = trackwomen$Country)
cutree(cen.clust,2)
cluster_indicator <- cutree(cen.clust,2)
trackwomen_distance
cluster_indicator
mean(trackwomen[which(cluster_indicator==1)])
trackwomen[which(cluster_indicator==1)]
mean(trackwomen[2:8,which(cluster_indicator==1)])
mean(trackwomen[which(cluster_indicator==1),2:8])
mean
trackwomen[which(cluster_indicator==1),2:8]
apply((trackwomen[which(cluster_indicator==1),2:8]), 2,mean)
cen.clust = hclust(trackwomen_distance, method = "centroid")
plot(cen.clust, labels = trackwomen$Country)
cluster_indicator <- cutree(cen.clust,2)
apply((trackwomen[which(cluster_indicator==1),2:8]), 2,mean)
apply((trackwomen[which(cluster_indicator==2),2:8]), 2,mean)
apply((trackwomen[which(cluster_indicator==1),2:8]), 2,mean)
sqrt((apply((trackwomen[which(cluster_indicator==1),2:8]), 2,mean)- apply((trackwomen[which(cluster_indicator==2),2:8]), 2,mean))^2)
sqrt(sum((apply((trackwomen[which(cluster_indicator==1),2:8]), 2,mean)- apply((trackwomen[which(cluster_indicator==2),2:8]), 2,mean))^2))
## read the data
trackwomen <- read.table("TrackWomen.dat", header = TRUE,sep = "\t")
# convert the data into the same scale
trackwomen$X100m <- 100/trackwomen$X100m
trackwomen$X200m <- 200/trackwomen$X200m
trackwomen$X400m <- 400/trackwomen$X400m
trackwomen$X800m <- 800/(trackwomen$X800m*60)
trackwomen$X1500m <- 1500/(trackwomen$X1500m*60)
trackwomen$X3000m <- 3000/(trackwomen$X3000m*60)
trackwomen$Marathon <- 42195/(trackwomen$Marathon*60)
head(trackwomen)
library(MASS)
trackwomen_distance <- dist(trackwomen[,2:8])
av.clust = hclust(trackwomen_distance, method = "average")
plot(av.clust, labels = trackwomen$Country)
cen.clust = hclust(trackwomen_distance, method = "centroid")
plot(cen.clust, labels = trackwomen$Country)
cluster_indicator <- cutree(cen.clust,2)
sqrt(sum((apply((trackwomen[which(cluster_indicator==1),2:8]), 2,mean)- apply((trackwomen[which(cluster_indicator==2),2:8]), 2,mean))^2))
cluster_indicator <- cutree(av.clust,2)
cluster_indicator
trackwomen$class <-cluster_indicator
trackwomen
cluster_indicator <- cutree(av.clust,2)
trackwomen$class <-cluster_indicator
lda_data <- trackwomen[,2:9]
cluster_indicator <- cutree(av.clust,2)
trackwomen$class <-cluster_indicator
lda_data <- trackwomen[,2:9]
ldamod <- lda(class ~ ., data= lda_data)
ldamod
## Another example
df <- USArrests
df
k2 <- kmeans(trackwomen[,2:8],centers = 2)
k2
cluster_indicator <- k2$centers
cluster_indicator
cluster_indicator <- k2$cluster
cluster_indicator
k2 <- kmeans(trackwomen[,2:8],centers = 2)
cluster_indicator <- k2$cluster
trackwomen$class <-cluster_indicator
lda_data <- trackwomen[,2:9]
ldamod <- lda(class ~ ., data= lda_data)
ldamod
trackwomen <- read.table("TrackWomen.dat", header = TRUE,sep = "\t")
k2 <- kmeans(trackwomen[,2:8],centers = 2)
cluster_indicator <- k2$cluster
trackwomen$class <-cluster_indicator
lda_data <- trackwomen[,2:9]
ldamod <- lda(class ~ ., data= lda_data)
ldamod
