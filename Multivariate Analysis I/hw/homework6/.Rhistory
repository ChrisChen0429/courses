install.packages(c("jomo","mitml","micemd","miceadds","mice"),type = 'source',dependencies = T)
install.packages('mitml')
install.packages('mitml',dependencies = T,type = 's')
install.packages('mitml',dependencies = T,type = 'source')
install.packages(c("broom", "callr", "curl", "FactoMineR", "gmp", "Hmisc", "httpuv", "igraph", "mirt", "msm", "openssl", "ordinal", "prettyunits", "psych", "RcppArmadillo", "RCurl", "rgl", "rjags", "rlang", "Rmpfr", "shiny", "tables", "threejs", "tidyr", "vctrs"))
install.packages(c("boot", "foreign", "MASS", "nlme"), lib="/usr/local/Cellar/r/3.6.2/lib/R/library")
?princomp
setwd("~/Desktop/trial_task")
library(readr)
IPOcases_mergepriceindex200110 <- read_csv("IPOcases_mergepriceindex200110.csv")
View(IPOcases_mergepriceindex200110)
IPOcases_mergepriceindex200110 <- read_csv("IPOcases_mergepriceindex200110.csv")
unique(IPOcases_mergepriceindex200110$statebf)
library(readr)
library(dplyr)
# delete the data fro Alaska and Hawaii
data <- IPOcases_mergepriceindex200110 %>% filter(! statebf %in% c('AK','HI'))
View(data)
unique(data$statebf)
library(plotly)
install.packages()
install.packages('plotly')
library(plotly)
df <- read.csv('https://raw.githubusercontent.com/plotly/datasets/master/2014_us_cities.csv')
View(df)
df <- IPOcases_mergepriceindex200110
d <- IPOcases_mergepriceindex200110$numberofemployees
d[is.na(d)] <- 0
df$q <- with(df, cut(d, breaks = unique(quantile(d))))
levels(df$q) <- paste(c("1st", "2nd"), "Quantile")
df$q <- as.ordered(df$q)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("gray85"),
subunitwidth = 1,
countrywidth = 1,
subunitcolor = toRGB("white"),
countrycolor = toRGB("white")
)
p <- plot_geo(df, locationmode = 'USA-states', sizes = c(1, 250)) %>%
add_markers(
x = ~long, y = ~lat, size = ~d, color = ~q, hoverinfo = "text",
text = ~paste(df$name, "<br />", df$d/1e6, "d")
) %>%
layout(title = 'IPOo<br>(Click legend to toggle)', geo = g)
p
IPOcases_mergepriceindex200110$long
colnames(data)
knitr::opts_chunk$set(echo = TRUE)
# delete the data fro Alaska and Hawaii, select the useful features
data <- IPOcases_mergepriceindex200110 %>% filter(! statebf %in% c('AK','HI')) %>% select(c('long','lat','numberofemployees','sharesfiledinthismkt','principalamountmil'))
View(data)
summary(data)
4712/10742
# delete the data fro Alaska and Hawaii, select the useful features
data <- IPOcases_mergepriceindex200110 %>% filter(! statebf %in% c('AK','HI')) %>% select(c('long','lat','state'numberofemployees','sharesfiledinthismkt','principalamountmil'))
# delete the data fro Alaska and Hawaii, select the useful features
data <- IPOcases_mergepriceindex200110 %>% filter(! statebf %in% c('AK','HI'))
# delete the data fro Alaska and Hawaii, select the useful features
data <- IPOcases_mergepriceindex200110 %>% filter(! statebf %in% c('AK','HI')) %>% select(c('long','lat','statebf','numberofemployees','sharesfiledinthismkt','principalamountmil'))
data$numberofemployees <-
data %>% group_by(statebf) %>%
mutate(numberofemployees= ifelse(is.na(numberofemployees), mean(numberofemployees, na.rm=TRUE), numberofemployees))
data
is.na(data$numberofemployees)
all(is.na(data$numberofemployees))
# delete the data fro Alaska and Hawaii, select the useful features
data <- IPOcases_mergepriceindex200110 %>% filter(! statebf %in% c('AK','HI')) %>% select(c('long','lat','statebf','numberofemployees','sharesfiledinthismkt','principalamountmil'))
#data$numberofemployees <-
data %>% group_by(statebf) %>% mutate(numberofemployees= replace(numberofemployees,is.na(numberofemployees), mean(numberofemployees, na.rm=TRUE)))
data <- data %>% group_by(statebf) %>%
mutate(numberofemployees= replace(numberofemployees,is.na(numberofemployees), mean(numberofemployees, na.rm=TRUE))) %>%
mutate(sharesfiledinthismkt= replace(sharesfiledinthismkt,is.na(sharesfiledinthismkt), mean(sharesfiledinthismkt, na.rm=TRUE))) %>%
mutate(principalamountmil= replace(principalamountmil,is.na(principalamountmil), mean(principalamountmil, na.rm=TRUE)))
View(data)
View(df)
View(df)
df <- read.csv('https://raw.githubusercontent.com/plotly/datasets/master/2014_us_cities.csv')
View(df)
data$numberofemployees_q <- with(data, cut(numberofemployees, quantile(numberofemployees)))
data <- data %>% group_by(statebf) %>%
mutate(numberofemployees= replace(numberofemployees,is.na(numberofemployees), mean(numberofemployees, na.rm=TRUE))) %>%
mutate(sharesfiledinthismkt= replace(sharesfiledinthismkt,is.na(sharesfiledinthismkt), mean(sharesfiledinthismkt, na.rm=TRUE))) %>%
mutate(principalamountmil= replace(principalamountmil,is.na(principalamountmil), mean(principalamountmil, na.rm=TRUE)))
library(tidyr)
library(readr)
library(dplyr)
library(plotly)
library(tidyr)
IPOcases_mergepriceindex200110 <- read_csv("IPOcases_mergepriceindex200110.csv")
# delete the data fro Alaska and Hawaii, select the useful features
data <- IPOcases_mergepriceindex200110 %>% filter(! statebf %in% c('AK','HI')) %>% select(c('long','lat','statebf','numberofemployees','sharesfiledinthismkt','principalamountmil'))
summary(data)
data <- data %>% drop_na(long,lat) %>%
group_by(statebf) %>%
mutate(numberofemployees= replace(numberofemployees,is.na(numberofemployees), mean(numberofemployees, na.rm=TRUE))) %>%
mutate(sharesfiledinthismkt= replace(sharesfiledinthismkt,is.na(sharesfiledinthismkt), mean(sharesfiledinthismkt, na.rm=TRUE))) %>%
mutate(principalamountmil= replace(principalamountmil,is.na(principalamountmil), mean(principalamountmil, na.rm=TRUE)))
data$numberofemployees_q <- with(data, cut(numberofemployees, quantile(numberofemployees)))
View(data)
quantile(data$numberofemployees)
quantile(data$numberofemployees)
data$numberofemployees
is.na(data$numberofemployees)
!is.na(data$numberofemployees)
all(!is.na(data$numberofemployees))
data$numberofemployees
data$numberofemployees[which(is.na(data$numberofemployees))]
which(is.na(data$numberofemployees))
summary(data)
sum(data$statebf == 'UN')
data$numberofemployees[which(data$statebf)=='UN']
data$numberofemployees[which(data$statebf=='UN')]
data_employee <- data %>% drop_na(numberofemployees)
data_employee
data_employee$numberofemployees_q <- with(data_employee, cut(numberofemployees, quantile(numberofemployees)))
data_employee <- data %>% drop_na(numberofemployees)
data_employee$numberofemployees_q <- with(data_employee, cut(numberofemployees, quantile(numberofemployees)))
levels(data_employee$numberofemployees_q) <- paste(c("1st", "2nd", "3rd", "4th", "5th"), "Quantile")
View(data_employee)
data_employee$numberofemployees_q <- as.ordered(data_employee$numberofemployees_q)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("gray85"),
subunitwidth = 1,
countrywidth = 1,
subunitcolor = toRGB("white"),
countrycolor = toRGB("white")
)
p <- plot_geo(data_employee, locationmode = 'USA-states', sizes = c(1, 250)) %>%
add_markers(
x = ~long, y = ~lat, size = ~d, color = ~q, hoverinfo = "text",
text = ~paste(df$name, "<br />", df$d/1e6, "d")
) %>%
layout(title = 'IPOo<br>(Click legend to toggle)', geo = g)
data_employee <- data %>% drop_na(numberofemployees)
data_employee$numberofemployees_q <- with(data_employee, cut(numberofemployees, quantile(numberofemployees)))
levels(data_employee$numberofemployees_q) <- paste(c("1st", "2nd", "3rd", "4th", "5th"), "Quantile")
data_employee$numberofemployees_q <- as.ordered(data_employee$numberofemployees_q)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("gray85"),
subunitwidth = 1,
countrywidth = 1,
subunitcolor = toRGB("white"),
countrycolor = toRGB("white")
)
p <- plot_geo(data_employee, locationmode = 'USA-states', sizes = c(1, 250)) %>%
add_markers(
x = ~long, y = ~lat, size = ~numberofemployees, color = ~numberofemployees_q, hoverinfo = "text",
text = ~paste(df$name, "<br />", df$d/1e6, "d")
) %>%
layout(title = 'IPOo<br>(Click legend to toggle)', geo = g)
p
View(data_employee)
p <- plot_geo(data_employee, locationmode = 'USA-states', sizes = c(1, 250)) %>%
add_markers(x = ~long, y = ~lat, size = ~numberofemployees, color = ~numberofemployees_q, hoverinfo = "text") %>%
layout(title = 'IPOo<br>', geo = g)
p
data_employee <- data %>% drop_na(numberofemployees)
data_employee$numberofemployees_q <- with(data_employee, cut(numberofemployees, quantile(numberofemployees)))
levels(data_employee$numberofemployees_q) <- paste(c("1st", "2nd", "3rd", "4th", "5th"), "Quantile")
data_employee$numberofemployees_q <- as.ordered(data_employee$numberofemployees_q)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("gray85"),
subunitwidth = 1,
countrywidth = 1,
subunitcolor = toRGB("white"),
countrycolor = toRGB("white")
)
p <- plot_geo(data_employee, locationmode = 'USA-states', sizes = c(1, 250)) %>%
add_markers(x = ~long, y = ~lat, size = ~numberofemployees, color = ~numberofemployees_q, hoverinfo = "text") %>%
layout(title = 'Number of Employees for IPOs', geo = g)
p
View(df)
View(df)
data_employee <- data %>% drop_na(numberofemployees)
data_employee$numberofemployees_q <- with(data_employee, cut(numberofemployees, quantile(numberofemployees)))
levels(data_employee$numberofemployees_q) <- paste(c("1st", "2nd", "3rd", "4th", "5th"), "Quantile")
data_employee$numberofemployees_q <- as.ordered(data_employee$numberofemployees_q)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("gray85"),
subunitwidth = 1,
countrywidth = 1,
subunitcolor = toRGB("white"),
countrycolor = toRGB("white")
)
p <- plot_geo(data_employee, locationmode = 'USA-states', sizes = c(1, 250)) %>%
add_markers(x = ~long, y = ~lat, size = ~numberofemployees, color = ~numberofemployees_q, hoverinfo = "text") %>%
layout(title = 'Number of Employees for IPOs', geo = g)
p
data$sharesfiledinthismkt_q <- with(data, cut(sharesfiledinthismkt, quantile(sharesfiledinthismkt)))
levels(data$sharesfiledinthismkt_q) <- paste(c("1st", "2nd", "3rd", "4th", "5th"), "Quantile")
data$sharesfiledinthismkt_q <- as.ordered(data$sharesfiledinthismkt_q)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("gray85"),
subunitwidth = 1,
countrywidth = 1,
subunitcolor = toRGB("white"),
countrycolor = toRGB("white")
)
p <- plot_geo(data_employee, locationmode = 'USA-states', sizes = c(1, 250)) %>%
add_markers(x = ~long, y = ~lat, size = ~sharesfiledinthismkt, color = ~sharesfiledinthismkt_q, hoverinfo = "text") %>%
layout(title = 'Shared Filed in this Market for IPOs', geo = g)
p
data$sharesfiledinthismkt_q <- with(data, cut(sharesfiledinthismkt, quantile(sharesfiledinthismkt)))
levels(data$sharesfiledinthismkt_q) <- paste(c("1st", "2nd", "3rd", "4th", "5th"), "Quantile")
data$sharesfiledinthismkt_q <- as.ordered(data$sharesfiledinthismkt_q)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("gray85"),
subunitwidth = 1,
countrywidth = 1,
subunitcolor = toRGB("white"),
countrycolor = toRGB("white")
)
p <- plot_geo(data_employee, locationmode = 'USA-states', sizes = c(1, 250)) %>%
add_markers(x = ~long, y = ~lat, size = ~sharesfiledinthismkt, color = ~sharesfiledinthismkt_q, hoverinfo = "text") %>%
layout(title = 'Shared Filed in this Market for IPOs', geo = g)
p
install.packages("mitml")
install.packages('jomo',dependencies = T,type = 'source')
package_version(jomo)
library(utils)
remove.packages('jomo')
remove.packages('mitml')
update.packages(ask=FALSE,
checkBuilt=TRUE,
repos="https://cloud.r-project.org")
install.packages('mitml')
knitr::opts_chunk$set(echo = TRUE)
Student_Assessment_Scores_Teacher_Interface <- read_csv("Student Assessment Scores - Teacher Interface.csv")
setwd("~/Desktop/yi/Research/others/NSF collaborative workshop")
Student_Assessment_Scores_Teacher_Interface <- read_csv("Student Assessment Scores - Teacher Interface.csv")
library(readr)
library(dplyr)
library(tidyr)
library(readxl)
## student score
Annual_Student_Assessment <- read_csv("Files/Student Scores/Sample Annual Student Assessment Summary Download_FINAL.csv")
## item analysis
## item maps
year_data <- data.frame()
for (y in c("2017","2018","2019")){
#for (y in c("2017")){
element <- c('Files/Item Analysis/', y , '/')
folder_name <- gsub(", ","",toString(element))
file_name <- list.files(folder_name)
for (file in file_name){
filename <- paste0(folder_name,file,sep = "")
#    vairable_name <- gsub("Sample Item Analysis Download","IA",filename)
#    vairable_name <- gsub("Files/Item Analysis/2017/","",vairable_name)
#    vairable_name <- gsub("_FINAL","",vairable_name)
#    vairable_name <- gsub(" ","",vairable_name)
#    assign(vairable_name, read_excel(filename))
temp <- read_excel(filename)
temp <- temp[temp$Score!=999,]
year_data <- rbind(year_data,temp[,1:17])
}
}
head(year_data)
Student_Assessment_Scores_Teacher_Interface <- read_csv("Student Assessment Scores - Teacher Interface.csv")
Student_Assessment_Scores_Teacher_Interface <- Student_Assessment_Scores_Teacher_Interface <- Student_Assessment_Scores_Teacher_Interface[Student_Assessment_Scores_Teacher_Interface$Score!=999,]
Student_Assessment_Scores_Teacher_Interface$`Performance Level` <- factor(Student_Assessment_Scores_Teacher_Interface$`Performance Level`,levels  = c('Level 1','Level 2L','Level 2H','Level 3L','Level 3H','Level 4L','Level 4H'))
head(Student_Assessment_Scores_Teacher_Interface)
library(ggalluvial)
Teacher_Interface_2_ <- read_csv("Student Assessment Scores - Teacher Interface (3).csv")
Teacher_Interface_3_ <- read_csv("Student Assessment Scores - Teacher Interface (2).csv")
Teacher_Interface_2_ <- Teacher_Interface_2_ %>% select(`Student ID`,`Performance Level`)
Teacher_Interface_3_ <- Teacher_Interface_3_ %>% select(`Student ID`,`Performance Level`)
Teacher_Interface_3_$`Performance Level` <- factor(Teacher_Interface_3_$`Performance Level`,levels  = c('First-year ELL students','Level 1','Level 2L','Level 2H','Level 3L','Level 3H','Level 4L','Level 4H'))
Teacher_Interface_2_$`Performance Level` <- factor(Teacher_Interface_2_$`Performance Level`,levels  = c('First-year ELL students','Level 1','Level 2L','Level 2H','Level 3L','Level 3H','Level 4L','Level 4H'))
colnames(Teacher_Interface_3_) <- c("Student ID","Level_Grade4")
colnames(Teacher_Interface_2_) <- c("Student ID","Level_Grade3")
total <- merge(Teacher_Interface_3_,Teacher_Interface_2_,by='Student ID')
new <- total %>% gather("Level_Grade4","Level_Grade3",2:3)
colnames(new)<- c("StudentID","Grade","Level")
new <- new %>% mutate(Level = factor(Level,levels = c('Level 4H','Level 4L','Level 3H','Level 3L','Level 2H','Level 2L','Level 1','First-year ELL students')))
new
library(ggalluvial)
#install.packages('ggalluvial')
ggplot(new,aes(x = Grade, stratum = Level, alluvium = StudentID,
fill = Level, label = Grade)) +
scale_fill_brewer(type = "qual", palette = "Set2") +
geom_flow(stat = "alluvium", lode.guidance = "frontback",
color = "darkgray") +geom_stratum() +
theme(legend.position = "bottom") +
ggtitle("student performance level from one grade to another")  +
geom_text(x=1, y=30, label="Scatter plot")+
annotate("text", x = 1.9, y = 4.75, label = "004270025")
regression_example <- lm(year_data$`MC Total` ~ year_data$Gender + year_data$Ethnicity + year_data$Teacher)
summary(regression_example)
data <- year_data
data <- year_data
regression_example <- lm(data$`MC Total` ~ data$Gender + data$Ethnicity + data$Teacher)
summary(regression_example)
Daily_Absence_2017 <- read_excel("Files/Total Daily Absence Counts/Sample Total Daily Absence Counts by Student 2017_FINAL.xlsx")
Living_Environment_Jun_2017 <- read_excel("Files/Item Analysis/2017/Sample Item Analysis Download   Living Environment - Jun 2017_FINAL.xlsx")
Living_Environment_Jun_2017$Level <- factor(Living_Environment_Jun_2017$Level,levels  = c('Level 1','Level 2L','Level 2H','Level 3L','Level 3H','Level 4L','Level 4H'))
library(ggplot2)
ggplot(data=Living_Environment_Jun_2017) +
geom_point(aes(x=Level,y=Score))+
geom_abline()
Student_Assessment_Scores_Teacher_Interface <- read_csv("Student Assessment Scores - Teacher Interface.csv")
Student_Assessment_Scores_Teacher_Interface <- Student_Assessment_Scores_Teacher_Interface <- Student_Assessment_Scores_Teacher_Interface[Student_Assessment_Scores_Teacher_Interface$Score!=999,]
Student_Assessment_Scores_Teacher_Interface$`Performance Level` <- factor(Student_Assessment_Scores_Teacher_Interface$`Performance Level`,levels  = c('Level 1','Level 2L','Level 2H','Level 3L','Level 3H','Level 4L','Level 4H'))
head(Student_Assessment_Scores_Teacher_Interface)
Teacher_Interface_2_ <- read_csv("Student Assessment Scores - Teacher Interface (3).csv")
Teacher_Interface_3_ <- read_csv("Student Assessment Scores - Teacher Interface (2).csv")
Teacher_Interface_2_
Teacher_Interface_2_
View(Teacher_Interface_2_)
setwd("~/Desktop/yi/professional_study/courses/Multivariate Analysis I/hw/HW6")
knitr::opts_chunk$set(echo = TRUE)
data <- read.csv(file = 'mvregex.dat',header = F)
colnames(data) = c("locus", "self", "motiv", "read", "write", "science", "prog", "prog1", "prog2", "prog3")
data$prog = as.factor(data$prog)
head(data)
data <- read.csv(file = 'mvregex.dat',header = F)
colnames(data) = c("locus", "self", "motiv", "read", "write", "science", "prog", "prog1", "prog2", "prog3")
data$prog = as.factor(data$prog)
reg = lm (locus ~ read + write, data = data)
reg$coefficients
n <- nrow(data)
Z <- cbind(rep(1,n),data$read,data$write)
y <- as.matrix(data$locus)
n <- nrow(data)
Z <- cbind(rep(1,n),data$read,data$write)
y <- as.matrix(data$locus)
(b.hat <- solve(t(Z) %*% Z) %*% t(Z) %*% y)
n <- nrow(data)
Z <- cbind(rep(1,n),data$read,data$write)
colnames(Z) <- c("intercept","slop_read","slop_write")
y <- as.matrix(data$locus)
(b.hat <- solve(t(Z) %*% Z) %*% t(Z) %*% y)
n <- nrow(data)
Z <- cbind(rep(1,n),data$read,data$write)
colnames(Z) <- c("intercept","slop_read","slop_write")
y <- as.matrix(data$locus)
colnames(y) <- c("beta.hat")
(b.hat <- solve(t(Z) %*% Z) %*% t(Z) %*% y)
n <- nrow(data)
Z <- cbind(rep(1,n),data$read,data$write)
colnames(Z) <- c("intercept","read","write")
y <- as.matrix(data$locus)
colnames(y) <- c("beta.hat")
(b.hat <- solve(t(Z) %*% Z) %*% t(Z) %*% y)
reg = lm (locus ~ read + write, data = data)
reg$coefficients
reg = lm (locus ~ read + write + science, data = data)
summary(reg$residuals)
r <- 3
reg = lm (locus ~ read + write + science, data = data)
t(reg$residuals) %*% t(reg$residuals) / (n - r - 1)
reg = lm (locus ~ read + write + science, data = data)
reg$residuals
reg = lm (locus ~ read + write + science, data = data)
(t(as.matrix(reg$residuals)) %*% as.matrix(reg$residuals)) / (n - r - 1)
Z <- cbind(rep(1,n),data$read,data$write,data$science)
r <- ncol(Z) - 1
Z <- cbind(rep(1,n),data$read,data$write,data$science)
r <- ncol(Z) - 1
colnames(Z) <- c("intercept","read","write","science")
y <- as.matrix(data$locus)
colnames(y) <- c("beta.hat")
(b.hat <- solve(t(Z) %*% Z) %*% t(Z) %*% y)
Z <- cbind(rep(1,n),data$read,data$write,data$science)
r <- ncol(Z) - 1
colnames(Z) <- c("intercept","read","write","science")
y <- as.matrix(data$locus)
colnames(y) <- c("beta.hat")
b.hat <- solve(t(Z) %*% Z) %*% t(Z) %*% y
t(y - Z %*% b.hat) %*% (y - Z %*% b.hat)/(n-r-1)
n <- nrow(data)
reg <- lm(self~read+ write+ science, data = data)
SSE <- sum((reg$residuals)^2 )
SST <- sum((data$self  -mean(data$self))^2)
(F_test <- ((SST-SSE)/3) / (SSE/(n-3-1)))
pf(q = F_test,df1 = 3,df2 = n-3-1,lower.tail = F)
n <-  nrow(data)
r <- 3 ## two independent variable
m <- 2 ## three dependent variables
x <- as.matrix(cbind(rep(1,n),data$read,data$write,data$science))
colnames(x) <- c("intercept","read","write","science")
y <- as.matrix(data[,c("locus","self")])
(b.hat <- solve(t(x) %*% x) %*% t(x) %*% y)
reg = lm (cbind(locus, self) ~ read + write + science, data = data)
reg$coefficients
reg = lm (cbind(locus, self) ~ read + write + science, data = data)
reg$coefficients
n <-  nrow(data)
p <- 3 ## three independent variable
q <- 3 ## three dependent variables
x <- as.matrix(cbind(rep(1,n),data$read,data$write,data$science))
colnames(x) <- c("intercept","slope_read","slope_write","slope_sciences")
y <- as.matrix(data[,c("locus","self","motiv")])
b.hat <- solve(t(x) %*% x) %*% t(x) %*% y
(SS.res <- t(y - x %*% b.hat) %*% (y - x %*% b.hat))
reg =  lm (cbind(locus, self,motiv) ~ read + write + science, data = data)
t(residuals(reg)) %*% residuals(reg)
reg =  lm (cbind(locus, self,motiv) ~ read + write + science, data = data)
t(residuals(reg)) %*% residuals(reg)
n <-  nrow(data)
p <- 2
q <- 3
m <- 0
## using likelihood ratio test
### proposed model
x <- as.matrix(cbind(rep(1,n),data$prog))
colnames(x) <- c("intercept","slope_prog")
y <- as.matrix(data[,c("locus","self","motiv")])
b.hat <- solve(t(x) %*% x) %*% t(x) %*% y
E <- t(y - x %*% b.hat) %*% (y - x %*% b.hat)
### compared model
x1 <- rep(1,n)
b.hat1 <- solve(t(x1) %*% x1) %*% t(x1) %*% y
H <- t(y - x1 %*% b.hat1) %*% (y - x1 %*% b.hat1)
# Chi-sq approx
- (n - p - 1 - (q - p + m + 1)/2)*log(det(E)/det(H))
# p-value
1-pchisq(- (n - p - 1 - (q - p + m + 1)/2)*log(det(E)/det(H)), q*(p-m))
r <- 1
m <- 3
## using likelihood ratio test
### proposed model
x <- as.matrix(cbind(rep(1,n),data$prog))
colnames(x) <- c("intercept","slope_prog")
y <- as.matrix(data[,c("locus","self","motiv")])
b.hat <- solve(t(x) %*% x) %*% t(x) %*% y
E <- t(y - x %*% b.hat) %*% (y - x %*% b.hat)
### compared model
x1 <- rep(1,n)
b.hat1 <- solve(t(x1) %*% x1) %*% t(x1) %*% y
H <- t(y - x1 %*% b.hat1) %*% (y - x1 %*% b.hat1)
# Hostelling T square test
(det(E)/det(H))^(n/2)
r <- 1
m <- 3
q <- 0
## using likelihood ratio test
### proposed model
x <- as.matrix(cbind(rep(1,n),data$prog))
colnames(x) <- c("intercept","slope_prog")
y <- as.matrix(data[,c("locus","self","motiv")])
b.hat <- solve(t(x) %*% x) %*% t(x) %*% y
E <- t(y - x %*% b.hat) %*% (y - x %*% b.hat)
### compared model
x1 <- rep(1,n)
b.hat1 <- solve(t(x1) %*% x1) %*% t(x1) %*% y
H <- t(y - x1 %*% b.hat1) %*% (y - x1 %*% b.hat1)
# Chi-sq approx
-(n-r-1-(m-r+q+1)/2)*log(det(Sigma.hat)/det(Sigma1.hat))
r <- 1
m <- 3
q <- 0
## using likelihood ratio test
### proposed model
x <- as.matrix(cbind(rep(1,n),data$prog))
colnames(x) <- c("intercept","slope_prog")
y <- as.matrix(data[,c("locus","self","motiv")])
b.hat <- solve(t(x) %*% x) %*% t(x) %*% y
E <- t(y - x %*% b.hat) %*% (y - x %*% b.hat)
### compared model
x1 <- rep(1,n)
b.hat1 <- solve(t(x1) %*% x1) %*% t(x1) %*% y
H <- t(y - x1 %*% b.hat1) %*% (y - x1 %*% b.hat1)
# Chi-sq approx
-(n-r-1-(m-r+q+1)/2)*log(det(E)/det(H))
# p-value
1-pchisq(-(n-r-1-(m-r+q+1)/2)*log(det(E)/det(H)), m*(r-q))
n <-  nrow(data)
p <- 2
q <- 3
m <- 0
## using likelihood ratio test
### proposed model
x <- as.matrix(cbind(rep(1,n),data$prog1,data$prog2))
colnames(x) <- c("intercept","slope_prog1","slope_prog2")
y <- as.matrix(data[,c("locus","self","motiv")])
b.hat <- solve(t(x) %*% x) %*% t(x) %*% y
E <- t(y - x %*% b.hat) %*% (y - x %*% b.hat)
### compared model
x1 <- rep(1,n)
b.hat1 <- solve(t(x1) %*% x1) %*% t(x1) %*% y
H <- t(y - x1 %*% b.hat1) %*% (y - x1 %*% b.hat1)
# Chi-sq approx
- (n - p - 1 - (q - p + m + 1)/2)*log(det(E)/det(H))
# p-value
1-pchisq(- (n - p - 1 - (q - p + m + 1)/2)*log(det(E)/det(H)), q*(p-m))
reg <- lm(cbind(cbind(locus,self,motiv)) ~ prog1 + prog2,data )
summary(manova(reg), test="Wilks")
reg <- lm(cbind(cbind(locus,self,motiv)) ~ prog1 + prog2,data )
summary(reg)
summary(manova(reg), test="Wilks")
setwd("~/Desktop/yi/professional_study/courses/Multivariate Analysis I/hw/HW6")
