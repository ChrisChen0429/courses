legend.text =element_text(size=20),
legend.title =element_text(size=20),
legend.key.size = unit(1, "cm"))+
labs(x ="P Value", y = "Frequeny")
number_easy = 20
normal_sample <- c()
while (number_easy > 0 & length(normal_sample)<40) {
s <- truncnorm::rtruncnorm(n = 1,a=0,b=1,mean=0.5,sd=0.5)
if (s >= 0.6){
normal_sample <- c(normal_sample,s)
number_easy <- number_easy - 1
}
normal_sample <- c(normal_sample,s)
}
dat <- data.frame(pvalue=normal_sample)
ggplot(dat,aes(x=pvalue))+
geom_density() +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
xlim(0,1)+
theme_minimal()+
theme(axis.text=element_text(size=20,face="bold"),
axis.title=element_text(size=20,face="bold"),
legend.text =element_text(size=20),
legend.title =element_text(size=20),
legend.key.size = unit(1, "cm"))+
labs(x ="P Value", y = "Density")
ggplot(dat,aes(x=pvalue))+
geom_histogram() +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
xlim(0,1)+
theme_minimal()+
theme(axis.text=element_text(size=20,face="bold"),
axis.title=element_text(size=20,face="bold"),
legend.text =element_text(size=20),
legend.title =element_text(size=20),
legend.key.size = unit(1, "cm"))+
labs(x ="P Value", y = "Density")
set.seed(1)
number_easy = 20
normal_sample <- c()
while (number_easy > 0 & length(normal_sample)<40) {
s <- truncnorm::rtruncnorm(n = 1,a=0,b=1,mean=0.5,sd=0.5)
if (s >= 0.6){
normal_sample <- c(normal_sample,s)
number_easy <- number_easy - 1
}
normal_sample <- c(normal_sample,s)
}
dat <- data.frame(pvalue=normal_sample)
ggplot(dat,aes(x=pvalue))+
geom_histogram() +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
xlim(0,1)+
theme_minimal()+
theme(axis.text=element_text(size=20,face="bold"),
axis.title=element_text(size=20,face="bold"),
legend.text =element_text(size=20),
legend.title =element_text(size=20),
legend.key.size = unit(1, "cm"))+
labs(x ="P Value", y = "Density")
ggplot(dat,aes(x=pvalue))+
geom_histogram(bins = 10) +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
xlim(0,1)+
theme_minimal()+
theme(axis.text=element_text(size=20,face="bold"),
axis.title=element_text(size=20,face="bold"),
legend.text =element_text(size=20),
legend.title =element_text(size=20),
legend.key.size = unit(1, "cm"))+
labs(x ="P Value", y = "Density")
ggplot(dat,aes(x=pvalue))+
#geom_histogram(bins = 10) +
geom_density()
ggplot(dat,aes(x=pvalue))+
geom_histogram(bins = 10) ++
geom_density()
ggplot(dat,aes(x=pvalue))+
geom_histogram(bins = 10) ++
geom_density()
ggplot(dat,aes(x=pvalue))+
geom_histogram(bins = 10) +
geom_density() +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
xlim(0,1)+
theme_minimal()+
theme(axis.text=element_text(size=20,face="bold"),
axis.title=element_text(size=20,face="bold"),
legend.text =element_text(size=20),
legend.title =element_text(size=20),
legend.key.size = unit(1, "cm"))+
labs(x ="P Value", y = "Density")
ggplot(dat,aes(x=pvalue))+
geom_histogram(bins = 20) +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
xlim(0,1)+
theme_minimal()+
theme(axis.text=element_text(size=20,face="bold"),
axis.title=element_text(size=20,face="bold"),
legend.text =element_text(size=20),
legend.title =element_text(size=20),
legend.key.size = unit(1, "cm"))+
labs(x ="P Value", y = "Density")
ggplot(dat,aes(x=pvalue))+
geom_histogram(bins = 5) +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
xlim(0,1)+
theme_minimal()+
theme(axis.text=element_text(size=20,face="bold"),
axis.title=element_text(size=20,face="bold"),
legend.text =element_text(size=20),
legend.title =element_text(size=20),
legend.key.size = unit(1, "cm"))+
labs(x ="P Value", y = "Density")
View(dat)
dat$density <- dat$pvalue / sum(dat$pvalue)
View(dat)
Q <- c()
for (i in normal_sample){
if (i <= 0.2){
Q <- c(Q,1)
}
if (i <= 0.4){
Q <- c(Q,2)
}
if (i <= 0.6){
Q <- c(Q,3)
}
if (i <= 0.8){
Q <- c(Q,4)
}
if (i <= 0.1){
Q <- c(Q,5)
}
}
Q
set.seed(1)
number_easy = 20
normal_sample <- c()
while (number_easy > 0 & length(normal_sample)<40) {
s <- truncnorm::rtruncnorm(n = 1,a=0,b=1,mean=0.5,sd=0.5)
if (s >= 0.6){
normal_sample <- c(normal_sample,s)
number_easy <- number_easy - 1
}
normal_sample <- c(normal_sample,s)
}
dat <- data.frame(pvalue=normal_sample)
ggplot(dat,aes(x=pvalue))+
geom_histogram(bins = 5) +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
xlim(0,1)+
theme_minimal()+
theme(axis.text=element_text(size=20,face="bold"),
axis.title=element_text(size=20,face="bold"),
legend.text =element_text(size=20),
legend.title =element_text(size=20),
legend.key.size = unit(1, "cm"))+
labs(x ="P Value", y = "Density")
ggplot(dat,aes(x=pvalue))+
geom_histogram(bins = 15) +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
xlim(0,1)+
theme_minimal()+
theme(axis.text=element_text(size=20,face="bold"),
axis.title=element_text(size=20,face="bold"),
legend.text =element_text(size=20),
legend.title =element_text(size=20),
legend.key.size = unit(1, "cm"))+
labs(x ="P Value", y = "Density")
ggplot(dat,aes(x=pvalue))+
geom_histogram(bins = 20) +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
xlim(0,1)+
theme_minimal()+
theme(axis.text=element_text(size=20,face="bold"),
axis.title=element_text(size=20,face="bold"),
legend.text =element_text(size=20),
legend.title =element_text(size=20),
legend.key.size = unit(1, "cm"))+
labs(x ="P Value", y = "Density")
Q <- c()
for (i in normal_sample){
if (i <= 0.2){
Q <- c(Q,1)
}
if (i <= 0.4){
Q <- c(Q,2)
}
if (i <= 0.6){
Q <- c(Q,3)
}
if (i <= 0.8){
Q <- c(Q,4)
}
if (i <= 0.1){
Q <- c(Q,5)
}
}
Q <- c()
for (i in normal_sample){
if (i <= 0.2){
Q <- c(Q,1)
}
else if (i <= 0.4){
Q <- c(Q,2)
}
else if (i <= 0.6){
Q <- c(Q,3)
}
else if (i <= 0.8){
Q <- c(Q,4)
}
else{
Q <- c(Q,5)
}
}
Q
length(Q)
Q/sum(Q)
table(Q)
table(Q) / sum(Q)
round(table(Q) / sum(Q),2)
round(table(Q) / 40,2)
ggplot(dat,aes(x=pvalue))+
#geom_histogram(bins = 20) +
geom_density()
ggplot(dat,aes(x=pvalue))+
geom_histogram(bins = 20) +
#geom_density()
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
xlim(0,1)+
theme_minimal()+
theme(axis.text=element_text(size=20,face="bold"),
axis.title=element_text(size=20,face="bold"),
legend.text =element_text(size=20),
legend.title =element_text(size=20),
legend.key.size = unit(1, "cm"))+
labs(x ="P Value", y = "Density")
(99)
set.seed(99)
normal_sample <- truncnorm::rtruncnorm(n = 30,a=0,b=1,mean=0.5,sd=0.5)
dat <- data.frame(pvalue=normal_sample)
ggplot(dat,aes(x=pvalue))+
geom_density() +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
xlim(0,1)+
theme_minimal()+
theme(axis.text=element_text(size=20,face="bold"),
axis.title=element_text(size=20,face="bold"),
legend.text =element_text(size=20),
legend.title =element_text(size=20),
legend.key.size = unit(1, "cm"))+
labs(x ="P Value", y = "Density")
Q <- c()
set.seed(99)
normal_sample <- truncnorm::rtruncnorm(n = 30,a=0,b=1,mean=0.5,sd=0.5)
dat <- data.frame(pvalue=normal_sample)
ggplot(dat,aes(x=pvalue))+
geom_density() +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
xlim(0,1)+
theme_minimal()+
theme(axis.text=element_text(size=20,face="bold"),
axis.title=element_text(size=20,face="bold"),
legend.text =element_text(size=20),
legend.title =element_text(size=20),
legend.key.size = unit(1, "cm"))+
labs(x ="P Value", y = "Density")
Q <- c()
for (i in normal_sample){
if (i <= 0.2){
Q <- c(Q,1)
}
else if (i <= 0.4){
Q <- c(Q,2)
}
else if (i <= 0.6){
Q <- c(Q,3)
}
else if (i <= 0.8){
Q <- c(Q,4)
}
else{
Q <- c(Q,5)
}
}
table(Q)
set.seed(99)
normal_sample <- truncnorm::rtruncnorm(n = 40,a=0,b=1,mean=0.5,sd=0.5)
dat <- data.frame(pvalue=normal_sample)
ggplot(dat,aes(x=pvalue))+
geom_density() +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
xlim(0,1)+
theme_minimal()+
theme(axis.text=element_text(size=20,face="bold"),
axis.title=element_text(size=20,face="bold"),
legend.text =element_text(size=20),
legend.title =element_text(size=20),
legend.key.size = unit(1, "cm"))+
labs(x ="P Value", y = "Density")
Q <- c()
set.seed(100)
normal_sample <- truncnorm::rtruncnorm(n = 40,a=0,b=1,mean=0.5,sd=0.5)
dat <- data.frame(pvalue=normal_sample)
ggplot(dat,aes(x=pvalue))+
geom_density() +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
xlim(0,1)+
theme_minimal()+
theme(axis.text=element_text(size=20,face="bold"),
axis.title=element_text(size=20,face="bold"),
legend.text =element_text(size=20),
legend.title =element_text(size=20),
legend.key.size = unit(1, "cm"))+
labs(x ="P Value", y = "Density")
Q <- c()
for (i in normal_sample){
if (i <= 0.2){
Q <- c(Q,1)
}
else if (i <= 0.4){
Q <- c(Q,2)
}
else if (i <= 0.6){
Q <- c(Q,3)
}
else if (i <= 0.8){
Q <- c(Q,4)
}
else{
Q <- c(Q,5)
}
}
table(Q)
round(table(Q) / 40,2)
0.08+0.25+0.4+0.18+0.1
round(table(Q) / 40,3)
sum(round(table(Q) / 40,3))
ggplot(dat,aes(x=pvalue))+
geom_histogram(bins = 20) +
#geom_density()
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
xlim(0,1)+
theme_minimal()+
theme(axis.text=element_text(size=20,face="bold"),
axis.title=element_text(size=20,face="bold"),
legend.text =element_text(size=20),
legend.title =element_text(size=20),
legend.key.size = unit(1, "cm"))+
labs(x ="P Value", y = "Density")
set.seed(1)
number_easy = 20
normal_sample <- c()
while (number_easy > 0 & length(normal_sample)<40) {
s <- truncnorm::rtruncnorm(n = 1,a=0,b=1,mean=0.5,sd=0.5)
if (s >= 0.6){
normal_sample <- c(normal_sample,s)
number_easy <- number_easy - 1
}
normal_sample <- c(normal_sample,s)
}
dat <- data.frame(pvalue=normal_sample)
ggplot(dat,aes(x=pvalue))+
geom_histogram(bins = 20) +
#geom_density()
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
xlim(0,1)+
theme_minimal()+
theme(axis.text=element_text(size=20,face="bold"),
axis.title=element_text(size=20,face="bold"),
legend.text =element_text(size=20),
legend.title =element_text(size=20),
legend.key.size = unit(1, "cm"))+
labs(x ="P Value", y = "Density")
seq(0, 1, 5)
seq(1930, 1940, 1)
ggplot(dat,aes(x=pvalue))+
geom_histogram(bins = 20) +
#geom_density()
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
xlim(0,1)+
scale_x_continuous(breaks=c(0,0.2,0.4,0.6,0.8,1)) +
theme_minimal()+
theme(axis.text=element_text(size=20,face="bold"),
axis.title=element_text(size=20,face="bold"),
legend.text =element_text(size=20),
legend.title =element_text(size=20),
legend.key.size = unit(1, "cm"))+
labs(x ="P Value", y = "Density")
ggplot(dat,aes(x=pvalue))+
geom_histogram(bins = 10) +
#geom_density()
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
xlim(0,1)+
scale_x_continuous(breaks=c(0,0.2,0.4,0.6,0.8,1)) +
theme_minimal()+
theme(axis.text=element_text(size=20,face="bold"),
axis.title=element_text(size=20,face="bold"),
legend.text =element_text(size=20),
legend.title =element_text(size=20),
legend.key.size = unit(1, "cm"))+
labs(x ="P Value", y = "Density")
ggplot(dat,aes(x=pvalue))+
geom_histogram(bins = 10) +
#geom_density() +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
xlim(0,1)+
scale_x_continuous(breaks=c(0,0.2,0.4,0.6,0.8,1)) +
theme_minimal()+
theme(axis.text=element_text(size=20,face="bold"),
axis.title=element_text(size=20,face="bold"),
legend.text =element_text(size=20),
legend.title =element_text(size=20),
legend.key.size = unit(1, "cm"))+
labs(x ="P Value", y = "Density")
set.seed(100)
normal_sample <- truncnorm::rtruncnorm(n = 40,a=0,b=1,mean=0.5,sd=0.5)
dat <- data.frame(pvalue=normal_sample)
ggplot(dat,aes(x=pvalue))+
geom_histogram(bins = 10) +
#geom_density() +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
xlim(0,1)+
scale_x_continuous(breaks=c(0,0.2,0.4,0.6,0.8,1)) +
theme_minimal()+
theme(axis.text=element_text(size=20,face="bold"),
axis.title=element_text(size=20,face="bold"),
legend.text =element_text(size=20),
legend.title =element_text(size=20),
legend.key.size = unit(1, "cm"))+
labs(x ="P Value", y = "Density")
ggplot(dat,aes(x=pvalue))+
#geom_histogram(bins = 10) +
geom_density() +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
xlim(0,1)+
scale_x_continuous(breaks=c(0,0.2,0.4,0.6,0.8,1)) +
theme_minimal()+
theme(axis.text=element_text(size=20,face="bold"),
axis.title=element_text(size=20,face="bold"),
legend.text =element_text(size=20),
legend.title =element_text(size=20),
legend.key.size = unit(1, "cm"))+
labs(x ="P Value", y = "Density")
setwd("~/Desktop/courses/Multivariate Analysis I/hw/homework9")
knitr::opts_chunk$set(echo = TRUE)
data <- read.table("T11-4.DAT")
View(data)
data <- read.table("T11-4.DAT")
colnames(data) <- c("v1","v2","v3","v4","status")
library(MASS)
library(klaR)
data.lda = lda(status~v1+v3, data= data)
data.lda
library(MASS)
library(klaR)
data.lda = lda(status~v1+v3, data= data)
data.lda
data$population <- as.factor(data$population)
data <- read.table("T11-4.DAT")
colnames(data) <- c("v1","v2","v3","v4","population")
library(MASS)
library(klaR)
data.lda = lda(population~v1+v3, data= data)
data.lda
data$population <- as.factor(data$population)
partimat(population~., data= data,method="lda")
library(MASS)
library(klaR)
data.lda = lda(population~v1+v3, data= data)
data.lda
data$population <- as.factor(data$population)
partimat(population~v1+v3, data= data,method="lda")
data.lda.values = predict(data.lda)
table(Predicted= data.lda.values$class, Actual= data$population)
data_copy <- data[c(-16,-34),]
data.lda = lda(population~v1+v3, data= data_copy)
data.lda
data_copy$population <- as.factor(data_copy$population)
partimat(population~v1+v3, data= data_copy,method="lda")
data.lda.values = predict(data.lda)
table(Predicted= data.lda.values$class, Actual= data$population)
data <- read.table("T11-4.DAT")
colnames(data) <- c("v1","v2","v3","v4","population")
library(MASS)
library(klaR)
data.lda = lda(population~v1+v3, data= data)
data.lda
data$population <- as.factor(data$population)
partimat(population~v1+v3, data= data,method="lda")
data.lda.values = predict(data.lda)
table(Predicted= data.lda.values$class, Actual= data$population)
mean(data$population==data.lda.values$class)
data_copy <- data[c(-16,-34),]
data.lda = lda(population~v1+v3, data= data_copy)
data.lda
data_copy$population <- as.factor(data_copy$population)
partimat(population~v1+v3, data= data_copy,method="lda")
data.lda.values = predict(data.lda)
table(Predicted= data.lda.values$class, Actual= data_copy$population)
mean(data_copy$population==data.lda.values$class)
data.qda = qda(population~v1+v3, data= data)
data.qda
data.qda.values = predict(data.qda)
table(Predicted= data.qda.values$class, Actual= data$population)
data.qda = qda(population~v1+v3, data= data)
data.qda
data.qda.values = predict(data.qda)
table(Predicted= data.qda.values$class, Actual= data$population)
mean(data$population==data.qda.values$class)
